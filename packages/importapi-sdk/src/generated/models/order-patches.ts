/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

import { Address } from './common'
import { DeliveryItem, ParcelMeasurements, TrackingData } from './orders'

/**
 *	Maps to `ReturnItem.shipmentState`
 */
export enum ReturnShipmentStateValues {
  Advised = 'Advised',
  BackInStock = 'BackInStock',
  Returned = 'Returned',
  Unusable = 'Unusable',
}

export type ReturnShipmentState =
  | 'Advised'
  | 'BackInStock'
  | 'Returned'
  | 'Unusable'
  | (string & {})
export interface ReturnItemDraft {
  /**
   *	Number of Line Items or Custom Line Items to return.
   *
   *
   */
  readonly quantity: number
  /**
   *	`id` of the [LineItem](ctp:api:type:LineItem) to return.
   *
   *	Required if Line Items are returned, to create a [LineItemReturnItem](ctp:api:type:LineItemReturnItem).
   *
   *
   */
  readonly lineItemId?: string
  /**
   *	`id` of the [CustomLineItem](ctp:api:type:CustomLineItem) to return.
   *
   *	Required if Custom Line Items are returned, to create a [CustomLineItemReturnItem](ctp:api:type:CustomLineItemReturnItem).
   *
   *
   */
  readonly customLineItemId?: string
  /**
   *	User-defined description for the return.
   *
   *
   */
  readonly comment?: string
  /**
   *	Shipment status of the item to be returned.
   *
   *
   */
  readonly shipmentState: ReturnShipmentState
}
export interface ReturnInfo {
  /**
   *	Information on the Line Items or Custom Line Items returned.
   *
   *
   */
  readonly items: ReturnItemDraft[]
  /**
   *	User-defined identifier to track the return.
   *
   *
   */
  readonly returnTrackingId?: string
  /**
   *	Date and time (UTC) the return is initiated.
   *
   *
   */
  readonly returnDate?: string
}
export interface DeliveryParcel {
  /**
   *	Unique identifier of the Delivery.
   *
   */
  readonly deliveryId: string
  /**
   *	Information about the dimensions of the Parcel.
   *
   *
   */
  readonly measurements?: ParcelMeasurements
  /**
   *	Shipment tracking information of the Parcel.
   *
   *
   */
  readonly trackingData?: TrackingData
  /**
   *	Line Items or Custom Line Items delivered in this Parcel.
   *
   *
   */
  readonly items?: DeliveryItem[]
}
export interface DeliveryParcelDraft {
  /**
   *	Information about the dimensions for the Parcel.
   *
   *
   */
  readonly measurements?: ParcelMeasurements
  /**
   *	Shipment tracking information for the Parcel.
   *
   *
   */
  readonly trackingData?: TrackingData
  /**
   *	Line Items or Custom Line Items delivered in this Parcel.
   *
   *
   */
  readonly items?: DeliveryItem[]
}
export interface DeliveryDraft {
  /**
   *	Line Items or Custom Line Items to deliver. It can also be specified individually for each [Parcel](ctp:api:type:Parcel).
   *
   *
   */
  readonly items: DeliveryItem[]
  /**
   *	Address to which the Parcels are delivered.
   *
   *
   */
  readonly address?: Address
  /**
   *	Information regarding the appearance, content, and shipment of a parcel.
   *
   *
   */
  readonly parcels: DeliveryParcelDraft[]
}
export interface DeliveryAddressDraft {
  /**
   *	Unique identifier of the Delivery.
   *
   */
  readonly deliveryId: string
  /**
   *	Address to which Parcels are delivered.
   *
   */
  readonly address?: Address
}
export interface ParcelMeasurementDraft {
  /**
   *	`id` of an existing [Parcel](ctp:api:type:Parcel).
   *
   *
   */
  readonly parcelId: string
  /**
   *	Information about the dimensions of the Parcel.
   *
   *
   */
  readonly measurements?: ParcelMeasurements
}
export interface ParcelTrackingData {
  /**
   *	`id` of an existing [Parcel](ctp:api:type:Parcel).
   *
   *
   */
  readonly parcelId: string
  /**
   *	Information that helps track a Parcel.
   *
   *
   */
  readonly trackingData?: TrackingData
}
export interface ParcelItems {
  /**
   *	`id` of an existing [Parcel](ctp:api:type:Parcel).
   *
   *
   */
  readonly parcelId: string
  /**
   *	Items in the Parcel.
   *
   */
  readonly items?: DeliveryItem[]
}
export interface RemoveDeliveryDraft {
  /**
   *
   */
  readonly id: string
}
export interface RemoveParcelFromDeliveryDraft {
  /**
   *	`id` of the [Parcel](ctp:api:type:Parcel) to be removed from the Delivery.
   *
   *
   */
  readonly parcelId: string
}
/**
 *	Order fields that needs to be added or updated.
 *
 */
export interface OrderField {
  /**
   *	Maps to `Order.returnInfo`
   *
   *
   */
  readonly addReturnInfo?: ReturnInfo
  /**
   *	Maps to `Order.delivery`
   *
   *
   */
  readonly addParcelToDelivery?: DeliveryParcel
  /**
   *	Maps to `Order.delivery`
   *
   *
   */
  readonly addDeliveries?: DeliveryDraft[]
  /**
   *	Maps to `Order.removeDelivery`
   *
   *
   */
  readonly removeDelivery?: RemoveDeliveryDraft
  /**
   *	Maps to `Order.removeParcelFromDelivery`
   *
   *
   */
  readonly removeParcelFromDelivery?: RemoveParcelFromDeliveryDraft
  /**
   *	Maps to `Order.addressDraft`
   *
   *
   */
  readonly setDeliveryAddress?: DeliveryAddressDraft
  /**
   *	Maps to `Order.parcelMeasurements`
   *
   *
   */
  readonly setParcelMeasurements?: ParcelMeasurementDraft
  /**
   *	Maps to `Order.parcelTrackingData`
   *
   *
   */
  readonly setParcelTrackingData?: ParcelTrackingData
  /**
   *	Maps to `Order.parcelItems`
   *
   *
   */
  readonly setParcelItems?: ParcelItems[]
}
/**
 *	Represents the data used to update an [Order](ctp:api:type:Order) in a Project.
 *
 */
export interface OrderPatchImport {
  /**
   *	User-defined unique identifier. If an [Order](ctp:api:type:Order) with this `orderNumber` exists, it is updated with the imported data.
   *
   *
   */
  readonly orderNumber: string
  /**
   *	Each field referenced must be defined in an existing [Order](ctp:api:type:Order) or the [ImportOperationState](ctp:import:type:ImportOperationState) is set to `validationFailed`.
   *
   *
   */
  readonly fields: OrderField
}
