/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

import { ImportResource, LocalizedString, ProductKeyReference } from './common'
import { Custom } from './customfields'

/**
 *	Defines how variants are selected for the product.
 *
 */
export enum VariantSelectionTypeValues {
  IncludeAllExcept = 'includeAllExcept',
  IncludeOnly = 'includeOnly',
}

export type VariantSelectionType =
  | 'includeAllExcept'
  | 'includeOnly'
  | (string & {})
/**
 *	Variant selection specifying how variants are included or excluded.
 *
 */
export interface VariantSelection {
  /**
   *	Type of variant selection.
   *
   */
  readonly type: VariantSelectionType
  /**
   *	List of SKUs to include or exclude.
   *
   *
   */
  readonly skus?: string[]
}
/**
 *	Defines which Variants of the Product will be excluded from the Product Selection. If not supplied all Variants are deemed to be excluded.
 *
 */
export interface VariantExclusion {
  /**
   *	List of SKUs to be excluded.
   *
   *
   */
  readonly skus?: string[]
}
/**
 *	An assignment of a product and either variantSelection or variantExclusion (not both).
 *
 */
export interface ProductSelectionAssignment {
  /**
   *	Reference to the Product by key.
   *
   */
  readonly product: ProductKeyReference
  /**
   *	Variant selection specifying included SKUs.
   *
   */
  readonly variantSelection?: VariantSelection
  /**
   *	Variant exclusion specifying excluded SKUs.
   *
   */
  readonly variantExclusion?: VariantExclusion
}
/**
 *	Product Selections can have the following modes:
 *	- `Individual`: Products must be explicitly assigned.
 *	- `IndividualExclusion`: Products are included unless explicitly excluded.
 *
 */
export enum ProductSelectionModeValues {
  Individual = 'Individual',
  IndividualExclusion = 'IndividualExclusion',
}

export type ProductSelectionMode =
  | 'Individual'
  | 'IndividualExclusion'
  | (string & {})
/**
 *	Represents the data used to import a ProductSelection. Once imported, this data is persisted as a [ProductSelection](ctp:api:type:ProductSelection) in the Project.
 *
 */
export interface ProductSelectionImport extends ImportResource {
  /**
   *	User-defined unique identifier. If an [ProductSelection](ctp:api:type:ProductSelection) with this `key` exists, it is updated with the imported data.
   *
   */
  readonly key: string
  /**
   *	Maps to `ProductSelection.name`.
   *
   */
  readonly name: LocalizedString
  /**
   *	Maps to `ProductSelection.mode`.
   *
   */
  readonly mode?: ProductSelectionMode
  /**
   *	Maps to `ProductSelection.custom`.
   *
   */
  readonly custom?: Custom
  /**
   *	List of product assignments.
   *
   */
  readonly assignments?: ProductSelectionAssignment[]
}
