/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

import { ProcessingState, UnresolvedReferences } from './common'
import { ErrorObject } from './errors'

/**
 *	Represents the import status of a resource.
 *
 */
export interface ImportOperation {
  /**
   *	Current version of the ImportOperation.
   *
   */
  readonly version: number
  /**
   *	`key` of the [ImportContainer](ctp:import:type:ImportContainer).
   *
   *
   */
  readonly importContainerKey: string
  /**
   *	`key` of the resource being imported.
   *
   *
   */
  readonly resourceKey: string
  /**
   *	Unique identifier of the ImportOperation.
   *
   */
  readonly id: string
  /**
   *	The import status of the resource. If `rejected` or `validationFailed`, the import was unsuccessful.
   *
   *
   */
  readonly state: ProcessingState
  /**
   *	The `version` of the imported resource when the import was successful.
   *
   */
  readonly resourceVersion?: number
  /**
   *	Contains errors if the import was unsuccessful. See [Errors](/import-export/error).
   *
   *
   */
  readonly errors?: ErrorObject[]
  /**
   *	If the resource being imported contains references to resources which do not exist, these references are contained within this array.
   *
   *
   */
  readonly unresolvedReferences?: UnresolvedReferences[]
  /**
   *	Date and time (UTC) the ImportOperation was created.
   *
   */
  readonly createdAt: string
  /**
   *	Date and time (UTC) the ImportOperation was last updated.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Date and time (UTC) the ImportOperation will be deleted.
   *
   */
  readonly expiresAt: string
}
/**
 *	[PagedQueryResult](/../api/general-concepts#pagedqueryresult) for Import Operations.
 *
 */
export interface ImportOperationPagedResponse {
  /**
   *	Number of [results requested](/../api/general-concepts#limit).
   *
   */
  readonly limit: number
  /**
   *	Number of [elements skipped](/../api/general-concepts#offset).
   *
   *
   */
  readonly offset: number
  /**
   *	The actual number of results returned.
   *
   */
  readonly count: number
  /**
   *	The total number of import operations matching the query.
   *
   */
  readonly total: number
  /**
   *	The array of Import Operations matching the query.
   *
   */
  readonly results: ImportOperation[]
}
/**
 *	Describes the validation state of a newly created [ImportOperation](#importoperation).
 *
 */
export enum ImportOperationStateValues {
  Processing = 'processing',
  ValidationFailed = 'validationFailed',
}

export type ImportOperationState =
  | 'processing'
  | 'validationFailed'
  | (string & {})
/**
 *	The status of a new [ImportOperation](#importoperation).
 */
export interface ImportOperationStatus {
  /**
   *	`id` of the [ImportOperation](#importoperation).
   *
   *
   */
  readonly operationId?: string
  /**
   *	Validation state of the [ImportOperation](#importoperation).
   *
   */
  readonly state: ImportOperationState
  /**
   *	[Errors](/import-export/error) for the [ImportOperation](#importoperation).
   *
   *
   */
  readonly errors?: ErrorObject[]
}
