/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

import {
  Address,
  AssociateRoleKeyReference,
  BusinessUnitKeyReference,
  CustomerKeyReference,
  StoreKeyReference,
} from './common'
import { Custom } from './customfields'

/**
 *	Determines whether the AssociateRoleAssignment can be inherited by child Business Units.
 *
 */
export enum AssociateRoleInheritanceModeValues {
  Disabled = 'Disabled',
  Enabled = 'Enabled',
}

export type AssociateRoleInheritanceMode =
  | 'Disabled'
  | 'Enabled'
  | (string & {})
/**
 *	Indicates whether the Business Unit can be used.
 */
export enum BusinessUnitStatusValues {
  Active = 'Active',
  Inactive = 'Inactive',
}

export type BusinessUnitStatus = 'Active' | 'Inactive' | (string & {})
export enum BusinessUnitAssociateModeValues {
  Explicit = 'Explicit',
  ExplicitAndFromParent = 'ExplicitAndFromParent',
}

export type BusinessUnitAssociateMode =
  | 'Explicit'
  | 'ExplicitAndFromParent'
  | (string & {})
/**
 *	Determines whether a Business Unit can inherit [Approval Rules](/projects/approval-rules) from a parent. Only Business Units of type `Division` can use `ExplicitAndFromParent`.
 *
 */
export enum BusinessUnitApprovalRuleModeValues {
  Explicit = 'Explicit',
  ExplicitAndFromParent = 'ExplicitAndFromParent',
}

export type BusinessUnitApprovalRuleMode =
  | 'Explicit'
  | 'ExplicitAndFromParent'
  | (string & {})
/**
 *	Defines whether the Stores of the Business Unit are set directly on the Business Unit or are inherited from its parent unit.
 *
 */
export enum BusinessUnitStoreModeValues {
  Explicit = 'Explicit',
  FromParent = 'FromParent',
}

export type BusinessUnitStoreMode = 'Explicit' | 'FromParent' | (string & {})
/**
 *	Defines the type of the Business Unit.
 */
export enum BusinessUnitTypeValues {
  Company = 'Company',
  Division = 'Division',
}

export type BusinessUnitType = 'Company' | 'Division' | (string & {})
/**
 *	The role of an Associate in a Business Unit.
 */
export interface AssociateRoleAssignmentDraft {
  /**
   *	The role to assign to the Associate.
   *
   */
  readonly associateRole: AssociateRoleKeyReference
  /**
   *	Determines whether the AssociateRole is inherited. If `Disabled`, the AssociateRole is not inherited from a parent Business Unit.
   *
   *
   */
  readonly inheritance: AssociateRoleInheritanceMode
}
/**
 *	Draft for an Associate in a Business Unit.
 */
export interface AssociateDraft {
  /**
   *	The Customer to be part of the Business Unit.
   *
   */
  readonly customer: CustomerKeyReference
  /**
   *	The roles to assign to the Associate.
   *
   */
  readonly associateRoleAssignments: AssociateRoleAssignmentDraft[]
}
/**
 *	Represents the data used to import a BusinessUnit. Can be of type [Company](ctp:api:type:Company) or [Division](ctp:api:type:Division).
 *
 */
export type BusinessUnitImport =
  | CompanyBusinessUnitImport
  | DivisionBusinessUnitImport
export interface IBusinessUnitImport {
  /**
   *	The type of Business Unit.
   *
   */
  readonly unitType: BusinessUnitType
  /**
   *	User-defined unique identifier. If a [BusinessUnit](ctp:api:type:BusinessUnit) with this `key` exists, it is updated with the imported data.
   *
   */
  readonly key: string
  /**
   *	The name of the Business Unit.
   *
   */
  readonly name: string
  /**
   *	The status of the Business Unit.
   *
   */
  readonly status?: BusinessUnitStatus
  /**
   *	The contact email address for the Business Unit.
   *
   */
  readonly contactEmail?: string
  /**
   *	List of Associates to be assigned to the Business Unit.
   *
   */
  readonly associates?: AssociateDraft[]
  /**
   *	The addresses for the Business Unit.
   *
   */
  readonly addresses?: Address[]
  /**
   *	The indices of the shipping addresses in the `addresses` array.
   *
   *
   */
  readonly shippingAddresses?: number[]
  /**
   *	The index of the default shipping address in the `addresses` array.
   *
   *
   */
  readonly defaultShippingAddress?: number
  /**
   *	The indices of the billing addresses in the `addresses` array.
   *
   *
   */
  readonly billingAddresses?: number[]
  /**
   *	The index of the default billing address in the `addresses` array.
   *
   *
   */
  readonly defaultBillingAddress?: number
  /**
   *	The Stores of the Business Unit.
   *
   */
  readonly stores?: StoreKeyReference[]
  /**
   *	Custom fields for the Business Unit.
   *
   */
  readonly custom?: Custom
}
/**
 *	Represents a [Company](ctp:api:type:Company), the top-level of a business.
 */
export interface CompanyBusinessUnitImport extends IBusinessUnitImport {
  readonly unitType: 'Company'
  /**
   *	User-defined unique identifier. If a [BusinessUnit](ctp:api:type:BusinessUnit) with this `key` exists, it is updated with the imported data.
   *
   */
  readonly key: string
  /**
   *	The name of the Business Unit.
   *
   */
  readonly name: string
  /**
   *	The status of the Business Unit.
   *
   */
  readonly status?: BusinessUnitStatus
  /**
   *	The contact email address for the Business Unit.
   *
   */
  readonly contactEmail?: string
  /**
   *	List of Associates to be assigned to the Business Unit.
   *
   */
  readonly associates?: AssociateDraft[]
  /**
   *	The addresses for the Business Unit.
   *
   */
  readonly addresses?: Address[]
  /**
   *	The indices of the shipping addresses in the `addresses` array.
   *
   *
   */
  readonly shippingAddresses?: number[]
  /**
   *	The index of the default shipping address in the `addresses` array.
   *
   *
   */
  readonly defaultShippingAddress?: number
  /**
   *	The indices of the billing addresses in the `addresses` array.
   *
   *
   */
  readonly billingAddresses?: number[]
  /**
   *	The index of the default billing address in the `addresses` array.
   *
   *
   */
  readonly defaultBillingAddress?: number
  /**
   *	The Stores of the Business Unit.
   *
   */
  readonly stores?: StoreKeyReference[]
  /**
   *	Custom fields for the Business Unit.
   *
   */
  readonly custom?: Custom
  /**
   *
   */
  readonly storeMode?: BusinessUnitStoreMode
}
/**
 *	Represents a [Division](ctp:api:type:Division), a sub-unit of a [Company](ctp:api:type:Company) or another Division.
 */
export interface DivisionBusinessUnitImport extends IBusinessUnitImport {
  readonly unitType: 'Division'
  /**
   *	User-defined unique identifier. If a [BusinessUnit](ctp:api:type:BusinessUnit) with this `key` exists, it is updated with the imported data.
   *
   */
  readonly key: string
  /**
   *	The name of the Business Unit.
   *
   */
  readonly name: string
  /**
   *	The status of the Business Unit.
   *
   */
  readonly status?: BusinessUnitStatus
  /**
   *	The contact email address for the Business Unit.
   *
   */
  readonly contactEmail?: string
  /**
   *	List of Associates to be assigned to the Business Unit.
   *
   */
  readonly associates?: AssociateDraft[]
  /**
   *	The addresses for the Business Unit.
   *
   */
  readonly addresses?: Address[]
  /**
   *	The indices of the shipping addresses in the `addresses` array.
   *
   *
   */
  readonly shippingAddresses?: number[]
  /**
   *	The index of the default shipping address in the `addresses` array.
   *
   *
   */
  readonly defaultShippingAddress?: number
  /**
   *	The indices of the billing addresses in the `addresses` array.
   *
   *
   */
  readonly billingAddresses?: number[]
  /**
   *	The index of the default billing address in the `addresses` array.
   *
   *
   */
  readonly defaultBillingAddress?: number
  /**
   *	The Stores of the Business Unit.
   *
   */
  readonly stores?: StoreKeyReference[]
  /**
   *	Custom fields for the Business Unit.
   *
   */
  readonly custom?: Custom
  /**
   *	If `Explicit`, the `stores` field cannot be empty and the Business Unit is explicitly associated with the given Stores. If `FromParent`, the Business Unit inherits the Stores from its parent.
   *
   *
   */
  readonly storeMode?: BusinessUnitStoreMode
  /**
   *	The parent Business Unit of this Division.
   *
   */
  readonly parentUnit: BusinessUnitKeyReference
  /**
   *	If `Explicit`, Associates are not inherited from the parent. If `ExplicitAndFromParent`, Associates are inherited from the parent.
   *
   *
   */
  readonly associateMode?: BusinessUnitAssociateMode
  /**
   *	If `Explicit`, approval rules are not inherited from the parent. If `ExplicitAndFromParent`, approval rules are inherited from the parent.
   *
   *
   */
  readonly approvalRuleMode?: BusinessUnitApprovalRuleMode
}
