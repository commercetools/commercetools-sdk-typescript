/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

import { ImportResourceType } from './common'

/**
 *	The strategy of the retention policy. Used to determine how the ImportContainer should be retained.
 */
export enum StrategyEnumValues {
  Ttl = 'ttl',
}

export type StrategyEnum = 'ttl' | (string & {})
/**
 *	The retention policy of the ImportContainer. If not set, the ImportContainer does not expire.
 */
export type RetentionPolicy = TimeToLiveRetentionPolicy
export interface IRetentionPolicy {
  /**
   *	The strategy of the retention policy. Used to determine how the ImportContainer should be retained.
   *
   */
  readonly strategy: StrategyEnum
}
export interface TimeToLiveConfig {
  /**
   *	The time to live of the ImportContainer. Used to generate the `expiresAt` value of the ImportContainer. The lowest accepted value is `1h` and the highest accepted value is `30d`.
   *
   */
  readonly timeToLive: string
}
/**
 *	Set a time to live retention policy for the ImportContainer.
 */
export interface TimeToLiveRetentionPolicy extends IRetentionPolicy {
  readonly strategy: 'ttl'
  /**
   *	The configuration of the time to live retention policy.
   *
   */
  readonly config: TimeToLiveConfig
}
/**
 *	Contains the resources to be imported. Unless `resourceType` is specified, the ImportContainer can import all of the supported [ImportResourceTypes](ctp:import:type:ImportResourceType).
 *
 */
export interface ImportContainer {
  /**
   *	User-defined unique identifier of the ImportContainer.
   *
   */
  readonly key: string
  /**
   *	The [resource type](ctp:import:type:ImportResourceType) the ImportContainer supports. If not present, the ImportContainer can import all of the supported [ImportResourceTypes](ctp:import:type:ImportResourceType).
   *
   *
   */
  readonly resourceType?: ImportResourceType
  /**
   *	Current version of the ImportContainer.
   *
   */
  readonly version: number
  /**
   *	The retention policy of the ImportContainer.
   *
   */
  readonly retentionPolicy?: RetentionPolicy
  /**
   *	Date and time (UTC) the ImportContainer was initially created.
   *
   */
  readonly createdAt: string
  /**
   *	Date and time (UTC) the ImportContainer was last updated.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Date and time (UTC) the ImportContainer is automatically deleted. Only present if a `retentionPolicy` is set. ImportContainers without `expiresAt` are permanent until [manually deleted](#delete-importcontainer).
   *
   */
  readonly expiresAt?: string
}
/**
 *	The representation sent to the server to create an [ImportContainer](#importcontainer).
 *
 */
export interface ImportContainerDraft {
  /**
   *	User-defined unique identifier of the ImportContainer.
   *
   */
  readonly key: string
  /**
   *	The resource type the ImportContainer will accept.
   *	If not specified, the ImportContainer can import all of the supported ImportResourceTypes.
   *
   *
   */
  readonly resourceType?: ImportResourceType
  /**
   *	Set a retention policy to automatically delete the ImportContainer after a defined period.
   *
   */
  readonly retentionPolicy?: RetentionPolicy
}
/**
 *	The representation sent to the server when updating an ImportContainer.
 *
 */
export interface ImportContainerUpdateDraft {
  /**
   *	Current version of the ImportContainer.
   *
   */
  readonly version: number
  /**
   *	The [resource type](ctp:import:type:ImportResourceType) to be imported.
   *	If not given, the ImportContainer is able to import all of the supported [ImportResourceTypes](ctp:import:type:ImportResourceType).
   *
   *
   */
  readonly resourceType?: ImportResourceType
}
/**
 *	[PagedQueryResult](/../api/general-concepts#pagedqueryresult) with results containing an array of [ImportContainer](ctp:import:type:ImportContainer).
 *
 */
export interface ImportContainerPagedResponse {
  /**
   *	Number of [results requested](/../api/general-concepts#limit).
   *
   */
  readonly limit: number
  /**
   *	Number of [elements skipped](/../api/general-concepts#offset).
   *
   *
   */
  readonly offset: number
  /**
   *	Actual number of results returned.
   *
   */
  readonly count: number
  /**
   *	Total number of results matching the query.
   *
   */
  readonly total: number
  /**
   *	[ImportContainers](ctp:import:type:ImportContainer) matching the query.
   *
   *
   */
  readonly results: ImportContainer[]
}
