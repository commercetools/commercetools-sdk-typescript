/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate <raml_file_path> -o <output_path> -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

import { ClientRequest, ClientResponse, executeRequest } from './common-types'

export type Middleware = (
  request: ClientRequest,
  executor: executeRequest
) => Promise<ClientResponse>

export const createExecutorFromMiddlewares = (
  executor: executeRequest,
  midds?: Middleware[]
) => {
  if (!midds || midds.length == 0) {
    return executor
  }
  const reduced: Middleware = midds.reduce(reduceMiddleware)
  return middlewareToExecutor(reduced, executor)
}

function reduceMiddleware(
  middleware1: Middleware,
  middleware2: Middleware
): Middleware {
  return (request: ClientRequest, executor: executeRequest) =>
    middleware1(request, middlewareToExecutor(middleware2, executor))
}

function middlewareToExecutor(
  middleware: Middleware,
  executor: executeRequest
): executeRequest {
  return (request: ClientRequest) => middleware(request, executor)
}
