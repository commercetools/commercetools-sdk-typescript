/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
import { executeRequest } from '../shared/utils/common-types'
import { ByProjectKeyApplicationsRequestBuilder } from './applications/by-project-key-applications-request-builder'
import { ByProjectKeyPaymentIntegrationsRequestBuilder } from './payment-integrations/by-project-key-payment-integrations-request-builder'
import { ByProjectKeyPaymentIntentsRequestBuilder } from './payment-intents/by-project-key-payment-intents-request-builder'
import { ByProjectKeyTransactionsRequestBuilder } from './transactions/by-project-key-transactions-request-builder'
/**
 **/
export class ByProjectKeyRequestBuilder {
  constructor(
    protected readonly args: {
      pathArgs: {
        projectKey: string
      }
      executeRequest: executeRequest
      baseUri?: string
    }
  ) {}
  public paymentIntents(): ByProjectKeyPaymentIntentsRequestBuilder {
    return new ByProjectKeyPaymentIntentsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri,
    })
  }
  public transactions(): ByProjectKeyTransactionsRequestBuilder {
    return new ByProjectKeyTransactionsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri,
    })
  }
  public paymentIntegrations(): ByProjectKeyPaymentIntegrationsRequestBuilder {
    return new ByProjectKeyPaymentIntegrationsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri,
    })
  }
  public applications(): ByProjectKeyApplicationsRequestBuilder {
    return new ByProjectKeyApplicationsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri,
    })
  }
}
