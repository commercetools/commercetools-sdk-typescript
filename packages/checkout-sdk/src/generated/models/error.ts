/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 *	This is the representation of a single error.
 */
export type ErrorObject =
  | ConnectorFailedError
  | GeneralError
  | InvalidInputError
  | InvalidJsonInputError
  | MultipleActionsNotAllowedError
  | PaymentFailureError
  | RequiredFieldError
  | ResourceNotFoundError
export interface IErrorObject {
  /**
   *	Error identifier.
   *
   *
   */
  readonly code: string
  /**
   *	Plain text description of the cause of the error.
   *
   *
   */
  readonly message: string
}
/**
 *	Returned when the payment [Connector](/connectors-and-applications#payment-connectors) cannot be reached.
 *
 */
export interface ConnectorFailedError extends IErrorObject {
  readonly code: 'ConnectorFailed'
  /**
   *	`"The connector could not be reached."`
   *
   *
   */
  readonly message: string
}
/**
 *	Returned when a server-side problem occurs. In some cases, the requested action may successfully complete after the error is returned. Therefore, it is recommended to verify the status of the requested resource after receiving a 500 error.
 *
 *	If you encounter this error, report it to the [Checkout support team](https://support.commercetools.com/).
 *
 */
export interface GeneralError extends IErrorObject {
  readonly code: 'General'
  /**
   *	Description about any known details of the problem, for example, `"Write operations are temporarily unavailable"`.
   *
   *
   */
  readonly message: string
}
/**
 *	Returned when input is not valid.
 *
 */
export interface InvalidInputError extends IErrorObject {
  readonly code: 'InvalidInput'
  /**
   *	Description of the invalid input error.
   *
   *
   */
  readonly message: string
}
/**
 *	Returned when an invalid JSON input has been sent.
 *	Either the JSON is syntactically incorrect or does not conform to the expected shape, for example, it is missing a required field.
 *
 *	The client application should validate the input according to the constraints described in the error message before sending the request.
 *
 */
export interface InvalidJsonInputError extends IErrorObject {
  readonly code: 'InvalidJsonInput'
  /**
   *	`"Request body does not contain valid JSON."`
   *
   *
   */
  readonly message: string
  /**
   *	Further explanation about why the JSON is invalid.
   *
   */
  readonly detailedErrorMessage: string
}
/**
 *	Returned when `actions` in the request body contains more than one object.
 *
 */
export interface MultipleActionsNotAllowedError extends IErrorObject {
  readonly code: 'MultipleActionsNotAllowed'
  /**
   *	`"Actions accepts only one action at time. Array size must be 1."`
   *
   *
   */
  readonly message: string
}
/**
 *	Returned when the payment cannot be completed successfully.
 *
 */
export interface PaymentFailureError extends IErrorObject {
  readonly code: 'PaymentFailure'
  /**
   *	`"Payment could not be completed successfully."`
   *
   *
   */
  readonly message: string
}
/**
 *	Returned when a value is not defined for a required field.
 *
 */
export interface RequiredFieldError extends IErrorObject {
  readonly code: 'RequiredField'
  /**
   *	`"A value is required for field $field."`
   *
   *
   */
  readonly message: string
  /**
   *	Name of the field missing the value.
   *
   *
   */
  readonly field: string
}
/**
 *	Returned when the resource addressed by the request URL does not exist.
 *
 */
export interface ResourceNotFoundError extends IErrorObject {
  readonly code: 'ResourceNotFound'
  /**
   *	`"The Resource with ID $resourceId was not found."`
   *
   *
   */
  readonly message: string
}
