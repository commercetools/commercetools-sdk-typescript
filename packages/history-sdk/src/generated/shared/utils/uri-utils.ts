/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate <raml_file_path> -o <output_path> -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

import { ClientRequest, VariableMap } from './common-types'

function isDefined<T>(value: T | undefined | null): value is T {
  return typeof value !== 'undefined' && value !== null
}

function stringify(
  object: string | Record<string, any> | Array<Array<string>> | URLSearchParams
): string {
  const params = new URLSearchParams(object)
  for (const [key, value] of Object.entries(object)) {
    if (Array.isArray(value)) {
      params.delete(key)
      value.filter(Boolean).forEach((v) => params.append(key, v))
    }
  }

  return params.toString()
}

function cleanObject<T extends VariableMap>(obj: T): T {
  return Object.keys(obj).reduce<T>((result, key) => {
    const value = obj[key]

    if (Array.isArray(value)) {
      const values = (value as unknown[]).filter(isDefined)
      if (!values.length) {
        return result
      }

      return {
        ...result,
        [key]: values,
      }
    }

    if (isDefined(value)) {
      return { ...result, [key]: value }
    }

    return result
  }, {} as T)
}

function formatQueryString(variableMap: VariableMap) {
  const map = cleanObject(variableMap)
  const result = stringify(map)
  if (result === '') {
    return ''
  }
  return `?${result}`
}

export function buildRelativeUri(commonRequest: ClientRequest): string {
  const pathMap = commonRequest.pathVariables
  var uri: string = commonRequest.uriTemplate as string

  for (const param in pathMap) {
    const value = encodeURIComponent(`${pathMap[param]}`)
    uri = uri.replace(`{${param}}`, `${value}`)
  }

  const resQuery = formatQueryString(commonRequest.queryParams || {})
  return `${uri}${resQuery}`
}
