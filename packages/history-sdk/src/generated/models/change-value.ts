/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

import {
  Address,
  DeliveryItem,
  LocalizedString,
  Money,
  Parcel,
  Reference,
  SelectionMode,
  TaxedPrice,
  TaxRate,
} from './common'

export type ChangeTargetChangeValue =
  | ChangeTargetCustomLineItemsChangeValue
  | ChangeTargetLineItemsChangeValue
  | ChangeTargetMultiBuyCustomLineItemsChangeValue
  | ChangeTargetMultiBuyLineItemsChangeValue
  | ChangeTargetShippingChangeValue
export type ChangeValueChangeValue =
  | ChangeValueAbsoluteChangeValue
  | ChangeValueExternalChangeValue
  | ChangeValueGiftLineItemChangeValue
  | ChangeValueRelativeChangeValue
export interface AssetChangeValue {
  /**
   *	`id` of the [Asset](ctp:api:type:Asset).
   *
   *
   */
  readonly id: string
  /**
   *	Name of the Asset.
   *
   */
  readonly name: LocalizedString
}
export interface AttributeValue {
  /**
   *	Name of the Attribute set.
   *
   */
  readonly name: string
  /**
   *	Value set for the Attribute determined by the [AttributeType](ctp:api:type:AttributeType):
   *
   *	- For [Enum Type](ctp:api:type:AttributeEnumType) and [Localized Enum Type](ctp:api:type:AttributeLocalizedEnumType), `value` is the `key` of the [Plain Enum Value](ctp:api:type:AttributePlainEnumValue) or [Localized Enum Value](ctp:api:type:AttributeLocalizedEnumValue) objects,
   *	  or the complete objects.
   *	- For [Localizable Text Type](ctp:api:type:AttributeLocalizableTextType), `value` is the [LocalizedString](ctp:api:type:LocalizedString) object.
   *	- For [Money Type](ctp:api:type:AttributeMoneyType) Attributes, `value` is the [Money](ctp:api:type:Money) object.
   *	- For [Set Type](ctp:api:type:AttributeSetType) Attributes, `value` is the entire `set` object.
   *	- For [Nested Type](ctp:api:type:AttributeNestedType) Attributes, `value` is the list of values of all Attributes of the nested Product.
   *	- For [Reference Type](ctp:api:type:AttributeReferenceType) Attributes, `value` is the [Reference](ctp:api:type:Reference) object.
   *
   *
   */
  readonly value: any
}
export interface ChangeTargetCustomLineItemsChangeValue {
  readonly type: 'customLineItems'
  /**
   *	Valid [CustomLineItem target predicate](/../api/projects/predicates#customlineitem-field-identifiers).
   *
   */
  readonly predicate: string
}
export interface ChangeTargetLineItemsChangeValue {
  readonly type: 'lineItems'
  /**
   *	Valid [LineItem target predicate](/../api/projects/predicates#lineitem-field-identifiers).
   *
   */
  readonly predicate: string
}
export interface ChangeTargetMultiBuyCustomLineItemsChangeValue {
  readonly type: 'multiBuyCustomLineItems'
  /**
   *	Valid [CustomLineItem target predicate](/../api/projects/predicates#customlineitem-field-identifiers).
   *
   */
  readonly predicate: string
  /**
   *	Quantity of Custom Line Items that triggered the application of the discount.
   *
   */
  readonly triggerQuantity: number
  /**
   *	Quantity of Custom Line Items discounted per application of this discount.
   *
   */
  readonly discountedQuantity: number
  /**
   *	Maximum number of times the discount is applicable.
   *
   */
  readonly maxOccurrence: number
  /**
   *	SelectionMode based on which particular Custom Line Items were discounted.
   *
   */
  readonly selectionMode: SelectionMode
}
export interface ChangeTargetMultiBuyLineItemsChangeValue {
  readonly type: 'multiBuyLineItems'
  /**
   *	Valid [LineItem target predicate](/../api/projects/predicates#lineitem-field-identifiers).
   *
   */
  readonly predicate: string
  /**
   *	Quantity of Line Items that triggered the application of the discount.
   *
   */
  readonly triggerQuantity: number
  /**
   *	Quantity of Line Items discounted per application of this discount.
   *
   */
  readonly discountedQuantity: number
  /**
   *	Maximum number of times the discount is applicable.
   *
   */
  readonly maxOccurrence: number
  /**
   *	SelectionMode based on which particular Line Items were discounted.
   *
   */
  readonly selectionMode: SelectionMode
}
export interface ChangeTargetShippingChangeValue {
  readonly type: 'shipping'
}
export interface ChangeValueAbsoluteChangeValue {
  readonly type: 'absolute'
  /**
   *	Money values in different currencies.
   *
   */
  readonly money: Money[]
}
export interface ChangeValueExternalChangeValue {
  readonly type: 'external'
}
export interface ChangeValueGiftLineItemChangeValue {
  readonly type: 'giftLineItem'
  /**
   *	Reference to a [Product](ctp:api:type:Product).
   *
   */
  readonly product: Reference
  /**
   *	`id` of the [ProductVariant](ctp:api:type:ProductVariant).
   *
   *
   */
  readonly variantId: number
  /**
   *	Channel with [ChannelRoleEnum](ctp:api:type:ChannelRoleEnum) `InventorySupply`.
   *
   */
  readonly supplyChannel?: Reference
  /**
   *	Channel with [ChannelRoleEnum](ctp:api:type:ChannelRoleEnum) `ProductDistribution`.
   *
   */
  readonly distributionChannel: Reference
}
export interface ChangeValueRelativeChangeValue {
  readonly type: 'relative'
  /**
   *	Fraction (per ten thousand) the price is reduced by. For example, 1000 results in a 10% price reduction.
   *
   */
  readonly permyriad: number
}
/**
 *	Only present if `expand` is set to `true`.
 */
export interface CustomFieldExpandedValue {
  /**
   *	Name of the Custom Field.
   *
   */
  readonly name: string
  /**
   *	[CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType).
   *
   *
   */
  readonly value: any
  /**
   *	User-defined label of the Custom Field.
   *
   */
  readonly label: LocalizedString
}
export interface CustomShippingMethodChangeValue {
  /**
   *	Name of the Custom ShippingMethod.
   *
   */
  readonly name: string
}
export interface DeliveryChangeValue {
  /**
   *	Line Items or Custom Line Items shipped in the [Delivery](ctp:api:type:Delivery).
   *
   */
  readonly items: DeliveryItem[]
  /**
   *	Address to which the parcels are delivered.
   *
   */
  readonly address: Address
  /**
   *	Parcels included in the [Delivery](ctp:api:type:Delivery).
   *
   */
  readonly parcels: Parcel[]
}
export interface EnumValue {
  /**
   *	Key of the value used as a programmatic identifier.
   *
   */
  readonly key: string
  /**
   *	Descriptive label of the value.
   *
   */
  readonly label: string
}
export interface FieldDefinitionOrderValue {
  /**
   *	Name of the [FieldDefinition](ctp:api:type:FieldDefinition).
   *
   */
  readonly name: string
  /**
   *	Descriptive label of the field.
   *
   */
  readonly label: LocalizedString
}
export interface InventoryQuantityValue {
  /**
   *	Overall amount of stock (`availableQuantity` + reserved).
   *
   */
  readonly quantityOnStock: number
  /**
   *	Available amount of stock (`quantityOnStock` - reserved).
   *
   */
  readonly availableQuantity: number
}
export interface LocalizedEnumValue {
  /**
   *	Key of the value used as a programmatic identifier.
   *
   */
  readonly key: string
  /**
   *	Descriptive localized label of the value.
   *
   */
  readonly label: LocalizedString
}
export interface ParcelChangeValue {
  /**
   *	`id` of the [Parcel](ctp:api:type:Parcel).
   *
   *
   */
  readonly id: string
  /**
   *	Date and time (UTC) the Parcel was created.
   *
   */
  readonly createdAt: string
}
export interface SetCartClassificationShippingRateInputValue {
  /**
   *
   */
  readonly type: string
  /**
   *	Key of the value used as a programmatic identifier.
   *
   */
  readonly key: string
  /**
   *	Descriptive localized label of the value.
   *
   */
  readonly label: LocalizedString
}
export interface SetCartScoreShippingRateInputValue {
  /**
   *
   */
  readonly type: string
  /**
   *	Abstract value for categorizing a Cart.
   *
   */
  readonly score: number
}
export interface ShippingMethodChangeValue {
  /**
   *	`id` of the [ShippingMethod](ctp:api:type:ShippingMethod).
   *
   *
   */
  readonly id: string
  /**
   *	Name of the ShippingMethod.
   *
   */
  readonly name: string
}
export interface ShippingMethodTaxAmountChangeValue {
  /**
   *	Taxed price for the Shipping Method based on `taxRate`.
   *
   */
  readonly taxedPrice: TaxedPrice
  /**
   *	Tax rate set externally for the Shipping Method.
   *
   */
  readonly taxRate: TaxRate
}
export interface ShoppingListLineItemValue {
  /**
   *	`id` of the [ShoppingListLineItem](ctp:api:type:ShoppingListLineItem).
   *
   *
   */
  readonly id: string
  /**
   *	Name of the corresponding Product the Product Variant belongs to.
   *
   */
  readonly name: LocalizedString
  /**
   *	`id` of the [ProductVariant](ctp:api:type:ProductVariant) the ShoppingListLineItem refers to.
   *
   *
   */
  readonly variantId: number
}
export interface TextLineItemValue {
  /**
   *	`id` of the [TextLineItem](ctp:api:type:TextLineItem).
   *
   *
   */
  readonly id: string
  /**
   *	Name of the TextLineItem.
   *
   */
  readonly name: LocalizedString
}
export interface TransactionChangeValue {
  /**
   *	`id` of the [Transaction](ctp:api:type:Transaction).
   *
   *
   */
  readonly id: string
  /**
   *	Identifier used by the interface that manages the Transaction (usually the PSP).
   *
   */
  readonly interactionId: string
  /**
   *	Date and time (UTC) the Transaction took place.
   *
   */
  readonly timestamp: string
}
export interface ValidFromAndUntilValue {
  /**
   *	Date and time (UTC) from when the Discount is effective.
   *
   */
  readonly validFrom: string
  /**
   *	Date and time (UTC) until when the Discount is effective.
   *
   */
  readonly validUntil: string
}
