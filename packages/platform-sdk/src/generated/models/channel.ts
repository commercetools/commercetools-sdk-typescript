/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

import {
  Address,
  BaseAddress,
  BaseResource,
  CreatedBy,
  GeoJson,
  LastModifiedBy,
  LocalizedString,
} from './common'
import { ReviewRatingStatistics } from './review'
import {
  CustomFields,
  CustomFieldsDraft,
  FieldContainer,
  TypeResourceIdentifier,
} from './type'

export interface Channel extends BaseResource {
  /**
   *	Unique ID of the Channel.
   *
   *
   */
  readonly id: string
  /**
   *	Current version of the Channel.
   *
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Channel was initially created.
   *
   *
   */
  readonly createdAt: string
  /**
   *	Date and time (UTC) the Channel was last updated.
   *
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Present on resources updated after 1 February 2019 except for [events not tracked](/../api/client-logging#events-tracked).
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/../api/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	User-defined unique identifier for the Channel.
   *
   *
   */
  readonly key: string
  /**
   *	Roles of the Channel.
   *
   *
   */
  readonly roles: ChannelRoleEnum[]
  /**
   *	Name of the Channel.
   *
   *
   */
  readonly name?: LocalizedString
  /**
   *	Description of the Channel.
   *
   *
   */
  readonly description?: LocalizedString
  /**
   *	Address where the Channel is located (for example, if the Channel is a physical store).
   *
   *
   */
  readonly address?: Address
  /**
   *	Statistics about the review ratings taken into account for the Channel.
   *
   *
   */
  readonly reviewRatingStatistics?: ReviewRatingStatistics
  /**
   *	Custom Fields defined for the Channel.
   *
   *
   */
  readonly custom?: CustomFields
  /**
   *	GeoJSON geometry object encoding the geo location of the Channel.
   *
   *
   */
  readonly geoLocation?: GeoJson
}
export interface ChannelDraft {
  /**
   *	User-defined unique identifier for the Channel.
   *
   *
   */
  readonly key: string
  /**
   *	Roles of the Channel.
   *	Each channel must have at least one role.
   *	If not specified, then `InventorySupply` is assigned by default.
   *
   *
   */
  readonly roles?: ChannelRoleEnum[]
  /**
   *	Name of the Channel.
   *
   *
   */
  readonly name?: LocalizedString
  /**
   *	Description of the Channel.
   *
   *
   */
  readonly description?: LocalizedString
  /**
   *	Address where the Channel is located.
   *
   *
   */
  readonly address?: BaseAddress
  /**
   *	Custom fields defined for the Channel.
   *
   *
   */
  readonly custom?: CustomFieldsDraft
  /**
   *	GeoJSON geometry object encoding the geo location of the Channel.
   *	Currently, only the [Point](/../api/types#point) type is supported.
   *
   *
   */
  readonly geoLocation?: GeoJson
}
/**
 *	[PagedQueryResult](/../api/general-concepts#pagedqueryresult) with results containing an array of [Channel](ctp:api:type:Channel).
 *
 */
export interface ChannelPagedQueryResponse {
  /**
   *	Number of results requested in the query request.
   *
   *
   */
  readonly limit: number
  /**
   *	Offset supplied by the client or server default.
   *	It is the number of elements skipped, not a page number.
   *
   *
   */
  readonly offset: number
  /**
   *	Actual number of results returned.
   *
   *
   */
  readonly count: number
  /**
   *	Total number of results matching the query.
   *	This number is an estimation that is not [strongly consistent](/../api/general-concepts#strong-consistency).
   *	This field is returned by default.
   *	For improved performance, calculating this field can be deactivated by using the query parameter `withTotal=false`.
   *	When the results are filtered with a [Query Predicate](/../api/predicates/query), `total` is subject to a [limit](/../api/limits#queries).
   *
   *
   */
  readonly total?: number
  /**
   *	[Channels](ctp:api:type:Channel) matching the query.
   *
   *
   */
  readonly results: Channel[]
}
/**
 *	[Reference](/../api/types#reference) to a [Channel](ctp:api:type:Channel).
 *
 */
export interface ChannelReference {
  readonly typeId: 'channel'
  /**
   *	Unique ID of the referenced [Channel](ctp:api:type:Channel).
   *
   *
   */
  readonly id: string
  /**
   *	Contains the representation of the expanded Channel.
   *	Only present in responses to requests with [Reference Expansion](/../api/general-concepts#reference-expansion) for Channels.
   *
   *
   */
  readonly obj?: Channel
}
/**
 *	[ResourceIdentifier](/../api/types#resourceidentifier) to a [Channel](ctp:api:type:Channel).
 *
 */
export interface ChannelResourceIdentifier {
  readonly typeId: 'channel'
  /**
   *	Unique ID of the referenced [Channel](ctp:api:type:Channel). Either `id` or `key` is required.
   *
   *
   */
  readonly id?: string
  /**
   *	Unique key of the referenced [Channel](ctp:api:type:Channel). Either `id` or `key` is required.
   *
   *
   */
  readonly key?: string
}
/**
 *	Describes the purpose and type of the Channel. A Channel can have one or more roles.
 *
 */
export type ChannelRoleEnum =
  | 'InventorySupply'
  | 'OrderExport'
  | 'OrderImport'
  | 'Primary'
  | 'ProductDistribution'
export interface ChannelUpdate {
  /**
   *	Expected version of the Channel on which the changes should be applied. If the expected version does not match the actual version, a [409 Conflict](/../api/errors#409-conflict) error will be returned.
   *
   *
   */
  readonly version: number
  /**
   *	Update actions to be performed on the Channel.
   *
   *
   */
  readonly actions: ChannelUpdateAction[]
}
export type ChannelUpdateAction =
  | ChannelAddRolesAction
  | ChannelChangeDescriptionAction
  | ChannelChangeKeyAction
  | ChannelChangeNameAction
  | ChannelRemoveRolesAction
  | ChannelSetAddressAction
  | ChannelSetAddressCustomFieldAction
  | ChannelSetAddressCustomTypeAction
  | ChannelSetCustomFieldAction
  | ChannelSetCustomTypeAction
  | ChannelSetGeoLocationAction
  | ChannelSetRolesAction
export interface ChannelAddRolesAction {
  readonly action: 'addRoles'
  /**
   *	Value to append to the array.
   *
   *
   */
  readonly roles: ChannelRoleEnum[]
}
export interface ChannelChangeDescriptionAction {
  readonly action: 'changeDescription'
  /**
   *	New value to set. Must not be empty.
   *
   *
   */
  readonly description: LocalizedString
}
export interface ChannelChangeKeyAction {
  readonly action: 'changeKey'
  /**
   *	New value to set. Must not be empty.
   *
   *
   */
  readonly key: string
}
export interface ChannelChangeNameAction {
  readonly action: 'changeName'
  /**
   *	New value to set. Must not be empty.
   *
   *
   */
  readonly name: LocalizedString
}
export interface ChannelRemoveRolesAction {
  readonly action: 'removeRoles'
  /**
   *	Value to remove from the array.
   *
   *
   */
  readonly roles: ChannelRoleEnum[]
}
export interface ChannelSetAddressAction {
  readonly action: 'setAddress'
  /**
   *	Value to set. If empty, any existing value will be removed.
   *
   *
   */
  readonly address?: BaseAddress
}
export interface ChannelSetAddressCustomFieldAction {
  readonly action: 'setAddressCustomField'
  /**
   *	Name of the [Custom Field](/../api/projects/custom-fields).
   *
   *
   */
  readonly name: string
  /**
   *	Specifies the format of the value of the Custom Field defined by `name`.
   *	If `value` is absent or `null`, this field will be removed, if it exists. Trying to remove a field that does not exist will fail with an [InvalidOperation](/../api/errors#general-400-invalid-operation) error.
   *
   *
   */
  readonly value?: any
}
export interface ChannelSetAddressCustomTypeAction {
  readonly action: 'setAddressCustomType'
  /**
   *	Defines the [Type](ctp:api:type:Type) that extends the `address` with [Custom Fields](/../api/projects/custom-fields).
   *	If absent, any existing Type and Custom Fields are removed from the `address`.
   *
   *
   */
  readonly type?: TypeResourceIdentifier
  /**
   *	Sets the [Custom Fields](/../api/projects/custom-fields) fields for the `address`.
   *
   *
   */
  readonly fields?: FieldContainer
}
export interface ChannelSetCustomFieldAction {
  readonly action: 'setCustomField'
  /**
   *	Name of the [Custom Field](/../api/projects/custom-fields).
   *
   *
   */
  readonly name: string
  /**
   *	If `value` is absent or `null`, this field will be removed if it exists.
   *	Trying to remove a field that does not exist will fail with an [InvalidOperation](/../api/errors#general-400-invalid-operation) error.
   *	If `value` is provided, it is set for the field defined by `name`.
   *
   *
   */
  readonly value?: any
}
export interface ChannelSetCustomTypeAction {
  readonly action: 'setCustomType'
  /**
   *	Defines the [Type](ctp:api:type:Type) that extends the Channel with [Custom Fields](/../api/projects/custom-fields).
   *	If absent, any existing Type and Custom Fields are removed from the Channel.
   *
   *
   */
  readonly type?: TypeResourceIdentifier
  /**
   *	Sets the [Custom Fields](/../api/projects/custom-fields) fields for the Channel.
   *
   *
   */
  readonly fields?: FieldContainer
}
export interface ChannelSetGeoLocationAction {
  readonly action: 'setGeoLocation'
  /**
   *	Value to set.
   *
   *
   */
  readonly geoLocation?: GeoJson
}
export interface ChannelSetRolesAction {
  readonly action: 'setRoles'
  /**
   *	Value to set. If not specified, then `InventorySupply` is assigned by default.
   *
   *
   */
  readonly roles: ChannelRoleEnum[]
}
