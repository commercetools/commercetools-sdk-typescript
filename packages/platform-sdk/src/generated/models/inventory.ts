/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

import { ChannelReference, ChannelResourceIdentifier } from './channel'
import { BaseResource, CreatedBy, LastModifiedBy } from './common'
import {
  CustomFields,
  CustomFieldsDraft,
  FieldContainer,
  TypeResourceIdentifier,
} from './type'

export interface InventoryEntry extends BaseResource {
  /**
   *	The unique ID of the inventory entry.
   *
   */
  readonly id: string
  /**
   *
   */
  readonly version: number
  /**
   *
   */
  readonly createdAt: string
  /**
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *
   */
  readonly sku: string
  /**
   *	Connection to a particular supplier.
   *
   */
  readonly supplyChannel?: ChannelReference
  /**
   *	Overall amount of stock.
   *	(available + reserved)
   *
   */
  readonly quantityOnStock: number
  /**
   *	Available amount of stock.
   *	(available means: `quantityOnStock` - reserved quantity)
   *
   */
  readonly availableQuantity: number
  /**
   *	The time period in days, that tells how often this inventory entry is restocked.
   *
   */
  readonly restockableInDays?: number
  /**
   *	The date and time of the next restock.
   *
   */
  readonly expectedDelivery?: string
  /**
   *
   */
  readonly custom?: CustomFields
}
export interface InventoryEntryDraft {
  /**
   *
   */
  readonly sku: string
  /**
   *
   */
  readonly supplyChannel?: ChannelResourceIdentifier
  /**
   *
   */
  readonly quantityOnStock: number
  /**
   *
   */
  readonly restockableInDays?: number
  /**
   *
   */
  readonly expectedDelivery?: string
  /**
   *	The custom fields.
   *
   */
  readonly custom?: CustomFieldsDraft
}
export interface InventoryEntryReference {
  readonly typeId: 'inventory-entry'
  /**
   *	Unique ID of the referenced resource.
   *
   *
   */
  readonly id: string
  /**
   *
   */
  readonly obj?: InventoryEntry
}
export interface InventoryEntryResourceIdentifier {
  readonly typeId: 'inventory-entry'
  /**
   *	Unique ID of the referenced resource. Either `id` or `key` is required.
   *
   *
   */
  readonly id?: string
  /**
   *	Unique key of the referenced resource. Either `id` or `key` is required.
   *
   *
   */
  readonly key?: string
}
export interface InventoryEntryUpdate {
  /**
   *
   */
  readonly version: number
  /**
   *
   */
  readonly actions: InventoryEntryUpdateAction[]
}
export type InventoryEntryUpdateAction =
  | InventoryEntryAddQuantityAction
  | InventoryEntryChangeQuantityAction
  | InventoryEntryRemoveQuantityAction
  | InventoryEntrySetCustomFieldAction
  | InventoryEntrySetCustomTypeAction
  | InventoryEntrySetExpectedDeliveryAction
  | InventoryEntrySetRestockableInDaysAction
  | InventoryEntrySetSupplyChannelAction
export interface InventoryPagedQueryResponse {
  /**
   *
   */
  readonly limit: number
  /**
   *
   */
  readonly count: number
  /**
   *
   */
  readonly total?: number
  /**
   *
   */
  readonly offset: number
  /**
   *
   */
  readonly results: InventoryEntry[]
}
export interface InventoryEntryAddQuantityAction {
  readonly action: 'addQuantity'
  /**
   *
   */
  readonly quantity: number
}
export interface InventoryEntryChangeQuantityAction {
  readonly action: 'changeQuantity'
  /**
   *
   */
  readonly quantity: number
}
export interface InventoryEntryRemoveQuantityAction {
  readonly action: 'removeQuantity'
  /**
   *
   */
  readonly quantity: number
}
export interface InventoryEntrySetCustomFieldAction {
  readonly action: 'setCustomField'
  /**
   *
   */
  readonly name: string
  /**
   *	The value of a Custom Field.
   *	The data type of the value depends on the specific [FieldType](/projects/types#fieldtype) given in the `type` field of the [FieldDefinition](/ctp:api:type:FieldDefinition) for a Custom Field.
   *	It can be any of the following:
   *
   *	| Field type                                                 | Data type                                                                                                                                                                 |
   *	| ---------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
   *	| [CustomFieldBooleanType](ctp:api:type:CustomFieldBooleanType)                 | Boolean (`true` or `false`)                                                                                                                                                     |
   *	| [CustomFieldStringType](ctp:api:type:CustomFieldStringType)                   | String                                                                                                                                                                |
   *	| [CustomFieldLocalizedStringType](ctp:api:type:CustomFieldLocalizedStringType) | [LocalizedString](ctp:api:type:LocalizedString)                                                                                                                             |
   *	| [CustomFieldEnumType](ctp:api:type:CustomFieldEnumType)                       | String. Must be a `key` of one of the [EnumValues](ctp:api:type:CustomFieldEnumValue) defined in the [EnumType](ctp:api:type:CustomFiedEnumType)                                     |
   *	| [CustomFieldLocalizedEnumType](ctp:api:type:CustomFieldLocalizedEnumType)     | String. Must be a `key` of one of the [LocalizedEnumValues](ctp:api:type:CustomFieldLocalizedEnumValue) defined in the [LocalizedEnumType](ctp:api:type:CustomFieldLocalizedEnumType) |
   *	| [CustomFieldNumberType](ctp:api:type:CustomFieldNumberType)                   | Number                                                                                                                                                                |
   *	| [CustomFieldMoneyType](ctp:api:type:CustomFieldMoneyType)                     | [CentPrecisionMoney](/../api/types#centprecisionmoney)                                                                                                                                         |
   *	| [CustomFieldDateType](ctp:api:type:CustomFieldDateType)                       | [Date](ctp:api:type:Date)                                                                                                                                                   |
   *	| [CustomFieldTimeType](ctp:api:type:CustomFieldTimeType)                       | [Time](ctp:api:type:Time)                                                                                                                                                   |
   *	| [CustomFieldDateTimeType](ctp:api:type:CustomFieldDateTimeType)               | [DateTime](ctp:api:type:DateTime)                                                                                                                                           |
   *	| [CustomFieldReferenceType](ctp:api:type:CustomFieldReferenceType)             | [Reference](/../api/types#reference)                                                                                                                                         |
   *	| [CustomFieldSetType](ctp:api:type:CustomFieldSetType)                         | JSON array without duplicates consisting of [CustomFieldValues](ctp:api:type:CustomFieldValue) of a single [FieldType](ctp:api:type:FieldType). For example, a Custom Field of SetType of DateType takes a JSON array of mutually different Dates for its value. The order of items in the array is not fixed. For more examples, see the [example FieldContainer](ctp:api:type:FieldContainer).|
   *
   */
  readonly value?: any
}
export interface InventoryEntrySetCustomTypeAction {
  readonly action: 'setCustomType'
  /**
   *	If absent, the custom type and any existing CustomFields are removed.
   *
   */
  readonly type?: TypeResourceIdentifier
  /**
   *	A valid JSON object, based on the FieldDefinitions of the Type.
   *	Sets the custom fields to this value.
   *
   */
  readonly fields?: FieldContainer
}
export interface InventoryEntrySetExpectedDeliveryAction {
  readonly action: 'setExpectedDelivery'
  /**
   *
   */
  readonly expectedDelivery?: string
}
export interface InventoryEntrySetRestockableInDaysAction {
  readonly action: 'setRestockableInDays'
  /**
   *
   */
  readonly restockableInDays?: number
}
export interface InventoryEntrySetSupplyChannelAction {
  readonly action: 'setSupplyChannel'
  /**
   *	If absent, the supply channel is removed.
   *	This action will fail if an entry with the combination of sku and supplyChannel already exists.
   *
   */
  readonly supplyChannel?: ChannelResourceIdentifier
}
