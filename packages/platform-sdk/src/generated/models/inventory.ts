/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

import { ChannelReference, ChannelResourceIdentifier } from './channel'
import { BaseResource, CreatedBy, LastModifiedBy } from './common'
import {
  CustomFields,
  CustomFieldsDraft,
  FieldContainer,
  TypeResourceIdentifier,
} from './type'

export interface InventoryEntry extends BaseResource {
  /**
   *	Platform-generated unique identifier of the InventoryEntry.
   *
   */
  readonly id: string
  /**
   *
   */
  readonly version: number
  /**
   *
   */
  readonly createdAt: string
  /**
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	User-defined unique identifier of the InventoryEntry.
   *
   *
   */
  readonly key?: string
  /**
   *
   */
  readonly sku: string
  /**
   *	Connection to a particular supplier.
   *
   */
  readonly supplyChannel?: ChannelReference
  /**
   *	Overall amount of stock.
   *	(available + reserved)
   *
   */
  readonly quantityOnStock: number
  /**
   *	Available amount of stock.
   *	(available means: `quantityOnStock` - reserved quantity)
   *
   */
  readonly availableQuantity: number
  /**
   *	The time period in days, that tells how often this inventory entry is restocked.
   *
   */
  readonly restockableInDays?: number
  /**
   *	The date and time of the next restock.
   *
   */
  readonly expectedDelivery?: string
  /**
   *
   */
  readonly custom?: CustomFields
}
export interface InventoryEntryDraft {
  /**
   *
   */
  readonly sku: string
  /**
   *	User-defined unique identifier for the InventoryEntry.
   *
   *
   */
  readonly key?: string
  /**
   *
   */
  readonly supplyChannel?: ChannelResourceIdentifier
  /**
   *
   */
  readonly quantityOnStock: number
  /**
   *
   */
  readonly restockableInDays?: number
  /**
   *
   */
  readonly expectedDelivery?: string
  /**
   *	The custom fields.
   *
   */
  readonly custom?: CustomFieldsDraft
}
/**
 *	[Reference](/../api/types#reference) to a [InventoryEntry](ctp:api:type:InventoryEntry).
 *
 */
export interface InventoryEntryReference {
  readonly typeId: 'inventory-entry'
  /**
   *	Platform-generated unique identifier of the referenced [InventoryEntry](ctp:api:type:InventoryEntry).
   *
   *
   */
  readonly id: string
  /**
   *	Contains the representation of the expanded InventoryEntry. Only present in responses to requests with [Reference Expansion](/../api/general-concepts#reference-expansion) for InventoryEntries.
   *
   *
   */
  readonly obj?: InventoryEntry
}
/**
 *	[ResourceIdentifier](/../api/types#resourceidentifier) to a [InventoryEntry](ctp:api:type:InventoryEntry).
 *
 */
export interface InventoryEntryResourceIdentifier {
  readonly typeId: 'inventory-entry'
  /**
   *	Platform-generated unique identifier of the referenced [InventoryEntry](ctp:api:type:InventoryEntry). Either `id` or `key` is required.
   *
   *
   */
  readonly id?: string
  /**
   *	User-defined unique identifier of the referenced [InventoryEntry](ctp:api:type:InventoryEntry). Either `id` or `key` is required.
   *
   *
   */
  readonly key?: string
}
export interface InventoryEntryUpdate {
  /**
   *
   */
  readonly version: number
  /**
   *
   */
  readonly actions: InventoryEntryUpdateAction[]
}
export type InventoryEntryUpdateAction =
  | InventoryEntryAddQuantityAction
  | InventoryEntryChangeQuantityAction
  | InventoryEntryRemoveQuantityAction
  | InventoryEntrySetCustomFieldAction
  | InventoryEntrySetCustomTypeAction
  | InventoryEntrySetExpectedDeliveryAction
  | InventoryEntrySetKeyAction
  | InventoryEntrySetRestockableInDaysAction
  | InventoryEntrySetSupplyChannelAction
export interface InventoryPagedQueryResponse {
  /**
   *	Number of [results requested](/../api/general-concepts#limit).
   *
   *
   */
  readonly limit: number
  /**
   *
   */
  readonly count: number
  /**
   *
   */
  readonly total?: number
  /**
   *
   */
  readonly offset: number
  /**
   *
   */
  readonly results: InventoryEntry[]
}
export interface InventoryEntryAddQuantityAction {
  readonly action: 'addQuantity'
  /**
   *
   */
  readonly quantity: number
}
export interface InventoryEntryChangeQuantityAction {
  readonly action: 'changeQuantity'
  /**
   *
   */
  readonly quantity: number
}
export interface InventoryEntryRemoveQuantityAction {
  readonly action: 'removeQuantity'
  /**
   *
   */
  readonly quantity: number
}
export interface InventoryEntrySetCustomFieldAction {
  readonly action: 'setCustomField'
  /**
   *	Name of the [Custom Field](/../api/projects/custom-fields).
   *
   *
   */
  readonly name: string
  /**
   *	If `value` is absent or `null`, this field will be removed if it exists.
   *	Trying to remove a field that does not exist will fail with an [InvalidOperation](/../api/errors#general-400-invalid-operation) error.
   *	If `value` is provided, it is set for the field defined by `name`.
   *
   *
   */
  readonly value?: any
}
export interface InventoryEntrySetCustomTypeAction {
  readonly action: 'setCustomType'
  /**
   *	Defines the [Type](ctp:api:type:Type) that extends the InventoryEntry with [Custom Fields](/../api/projects/custom-fields).
   *	If absent, any existing Type and Custom Fields are removed from the InventoryEntry.
   *
   *
   */
  readonly type?: TypeResourceIdentifier
  /**
   *	Sets the [Custom Fields](/../api/projects/custom-fields) fields for the InventoryEntry.
   *
   *
   */
  readonly fields?: FieldContainer
}
export interface InventoryEntrySetExpectedDeliveryAction {
  readonly action: 'setExpectedDelivery'
  /**
   *
   */
  readonly expectedDelivery?: string
}
export interface InventoryEntrySetKeyAction {
  readonly action: 'setKey'
  /**
   *	Value to set. If empty, any existing value will be removed.
   *
   *
   */
  readonly key?: string
}
export interface InventoryEntrySetRestockableInDaysAction {
  readonly action: 'setRestockableInDays'
  /**
   *
   */
  readonly restockableInDays?: number
}
export interface InventoryEntrySetSupplyChannelAction {
  readonly action: 'setSupplyChannel'
  /**
   *	If absent, the supply channel is removed.
   *	This action will fail if an entry with the combination of sku and supplyChannel already exists.
   *
   */
  readonly supplyChannel?: ChannelResourceIdentifier
}
