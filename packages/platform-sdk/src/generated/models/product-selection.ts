/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

import {
  BaseResource,
  CreatedBy,
  LastModifiedBy,
  LocalizedString,
} from './common'
import { ProductReference, ProductResourceIdentifier } from './product'
import {
  CustomFields,
  CustomFieldsDraft,
  FieldContainer,
  TypeResourceIdentifier,
} from './type'

export interface AssignedProductReference {
  /**
   *	Reference to a Product that is assigned to the Product Selection.
   *
   */
  readonly product: ProductReference
  /**
   *	The Variants of the Product that are included from the Product Selection.
   *
   *	This field may exist only in Product Selections with `Individual` [ProductSelectionMode](ctp:api:type:ProductSelectionMode).
   *	In absence of this field, all Variants are deemed to be included.
   *
   *
   */
  readonly variantSelection?: ProductVariantSelection
  /**
   *	The Variants of the Product that are excluded from the Product Selection.
   *
   *	This field may exist only in Product Selections with `IndividualExclusion` [ProductSelectionMode](ctp:api:type:ProductSelectionMode).
   *	In absence of this field, all Variants are deemed to be excluded.
   *
   *
   */
  readonly variantExclusion?: ProductVariantExclusion
}
export interface AssignedProductSelection {
  /**
   *	Reference to the Product Selection that this assignment is part of.
   *
   */
  readonly productSelection: ProductSelectionReference
  /**
   *	Defines which Variants of the Product will be included in the Product Selection.
   *
   *	This field is only available for assignments to a Product Selection with `Individual` [ProductSelectionMode](ctp:api:type:ProductSelectionMode).
   *
   *
   */
  readonly variantSelection?: ProductVariantSelection
  /**
   *	Defines which Variants of the Product will be excluded from the Product Selection.
   *
   *	This field is only available for assignments to a Product Selection with `IndividualExclusion` [ProductSelectionMode](ctp:api:type:ProductSelectionMode).
   *
   *
   */
  readonly variantExclusion?: ProductVariantExclusion
  /**
   *	Date and time (UTC) this assignment was initially created.
   *
   */
  readonly createdAt: string
}
/**
 *	[PagedQueryResult](/general-concepts#pagedqueryresult) containing an array of [AssignedProductSelection](ctp:api:type:AssignedProductSelection).
 *
 */
export interface AssignedProductSelectionPagedQueryResponse {
  /**
   *	Number of [results requested](/../api/general-concepts#limit).
   *
   *
   */
  readonly limit: number
  /**
   *	Number of [elements skipped](/../api/general-concepts#offset).
   *
   *
   */
  readonly offset: number
  /**
   *	Actual number of results returned.
   *
   *
   */
  readonly count: number
  /**
   *	Total number of results matching the query.
   *	This number is an estimation that is not [strongly consistent](/general-concepts#strong-consistency).
   *	Unlike other endpoints, the Product Selection endpoint does not return this field by default.
   *	To get `total`, pass the query parameter `withTotal` set to `true`.
   *	When the results are filtered with a [Query Predicate](/predicates/query), `total` is subject to a [limit](/limits#queries).
   *
   *
   */
  readonly total?: number
  /**
   *	References to ProductSelection that are assigned to the Product.
   *
   */
  readonly results: AssignedProductSelection[]
}
export interface ProductSelection extends BaseResource {
  /**
   *	Unique identifier of the ProductSelection.
   *
   *
   */
  readonly id: string
  /**
   *	Current version of the ProductSelection.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the ProductSelection was initially created.
   *
   */
  readonly createdAt: string
  /**
   *	Date and time (UTC) the ProductSelection was last updated.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Present on resources updated after 1/02/2019 except for [events not tracked](/../api/client-logging#events-tracked).
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1/02/2019 except for [events not tracked](/../api/client-logging#events-tracked).
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	User-defined unique identifier of the ProductSelection.
   *
   *
   */
  readonly key?: string
  /**
   *	Name of the ProductSelection.
   *
   */
  readonly name: LocalizedString
  /**
   *	Number of Products that are currently assigned to this ProductSelection.
   *
   */
  readonly productCount: number
  /**
   *	Specifies in which way the Products are assigned to the ProductSelection.
   *	Currently, the only way of doing this is to specify each Product individually, either by [including or excluding](ctp:api:type:ProductSelectionMode) them explicitly.
   *	@deprecated
   */
  readonly type?: ProductSelectionTypeEnum
  /**
   *	Specifies in which way the Products are assigned to the ProductSelection.
   *	Currently, the only way of doing this is to specify each Product individually, either by [including or excluding](ctp:api:type:ProductSelectionMode) them explicitly.
   *
   */
  readonly mode: ProductSelectionMode
  /**
   *	Custom Fields of the ProductSelection.
   *
   */
  readonly custom?: CustomFields
}
/**
 *
 *	Given the mode of Product Selection, this assignment refers to, it may contain:
 *
 *	- `variantSelection` field for a Product Selection with `Individual` [ProductSelectionMode](ctp:api:type:ProductSelectionMode).
 *	- `variantExclusion` field for a Product Selection with `IndividualExclusion` [ProductSelectionMode](ctp:api:type:ProductSelectionMode) ([BETA](/../offering/api-contract#public-beta)).
 */
export interface ProductSelectionAssignment {
  /**
   *	Reference to a Product that is assigned to the ProductSelection.
   *
   */
  readonly product: ProductReference
  /**
   *	Reference to the Product Selection that this assignment is part of.
   *
   */
  readonly productSelection: ProductSelectionReference
  /**
   *	Define which Variants of the added Product will be included in the Product Selection.
   *
   *	This field is only available for assignments to a Product Selection with `Individual` [ProductSelectionMode](ctp:api:type:ProductSelectionMode).
   *	The list of SKUs will be updated automatically on any change of those performed on the respective Product itself.
   *
   *
   */
  readonly variantSelection?: ProductVariantSelection
  /**
   *	Defines which Variants of the Product will be excluded from the Product Selection.
   *
   *	This field is only available for assignments to a Product Selection with `IndividualExclusion` [ProductSelectionMode](ctp:api:type:ProductSelectionMode).
   *	The list of SKUs will be updated automatically on any change of those performed on the respective Product itself.
   *
   *
   */
  readonly variantExclusion?: ProductVariantExclusion
}
export interface ProductSelectionDraft {
  /**
   *	User-defined unique identifier for the ProductSelection.
   *
   */
  readonly key?: string
  /**
   *	Name of the ProductSelection. Not checked for uniqueness, but distinct names are recommended.
   *
   */
  readonly name: LocalizedString
  /**
   *	Custom Fields of this ProductSelection.
   *
   */
  readonly custom?: CustomFieldsDraft
  /**
   *	Type of the Product Selection.
   *	@deprecated
   */
  readonly type?: ProductSelectionTypeEnum
  /**
   *	Mode of the Product Selection.
   *
   */
  readonly mode?: ProductSelectionMode
}
/**
 *	Product Selections can have the following modes:
 *
 */
export type ProductSelectionMode = 'Individual' | 'IndividualExclusion' | string
/**
 *	[PagedQueryResult](/general-concepts#pagedqueryresult) containing an array of [ProductSelection](ctp:api:type:ProductSelection).
 *
 */
export interface ProductSelectionPagedQueryResponse {
  /**
   *	Number of [results requested](/../api/general-concepts#limit).
   *
   *
   */
  readonly limit: number
  /**
   *	Number of [elements skipped](/../api/general-concepts#offset).
   *
   *
   */
  readonly offset: number
  /**
   *	Actual number of results returned.
   *
   *
   */
  readonly count: number
  /**
   *	Total number of results matching the query.
   *	This number is an estimation that is not [strongly consistent](/general-concepts#strong-consistency).
   *	Unlike other endpoints, the Product Selection endpoint does not return this field by default.
   *	To get `total`, pass the query parameter `withTotal` set to `true`.
   *	When the results are filtered with a [Query Predicate](/predicates/query), `total` is subject to a [limit](/limits#queries).
   *
   *
   */
  readonly total?: number
  /**
   *	[ProductSelections](ctp:api:type:ProductSelection) matching the query.
   *
   *
   */
  readonly results: ProductSelection[]
}
/**
 *	[PagedQueryResult](/general-concepts#pagedqueryresult) containing an array of [AssignedProductReference](ctp:api:type:AssignedProductReference).
 *
 */
export interface ProductSelectionProductPagedQueryResponse {
  /**
   *	Number of [results requested](/../api/general-concepts#limit).
   *
   *
   */
  readonly limit: number
  /**
   *	Number of [elements skipped](/../api/general-concepts#offset).
   *
   *
   */
  readonly offset: number
  /**
   *	Actual number of results returned.
   *
   *
   */
  readonly count: number
  /**
   *	Total number of results matching the query.
   *	This number is an estimation that is not [strongly consistent](/general-concepts#strong-consistency).
   *	Unlike other endpoints, the Product Selection endpoint does not return this field by default.
   *	To get `total`, pass the query parameter `withTotal` set to `true`.
   *	When the results are filtered with a [Query Predicate](/predicates/query), `total` is subject to a [limit](/limits#queries).
   *
   *
   */
  readonly total?: number
  /**
   *	References to Products that are assigned to the ProductSelection.
   *
   */
  readonly results: AssignedProductReference[]
}
/**
 *	[Reference](ctp:api:type:Reference) to a [ProductSelection](ctp:api:type:ProductSelection).
 *
 */
export interface ProductSelectionReference {
  readonly typeId: 'product-selection'
  /**
   *	Unique identifier of the referenced [ProductSelection](ctp:api:type:ProductSelection).
   *
   *
   */
  readonly id: string
  /**
   *	Contains the representation of the expanded ProductSelection. Only present in responses to requests with [Reference Expansion](/../api/general-concepts#reference-expansion) for ProductSelections.
   *
   *
   */
  readonly obj?: ProductSelection
}
/**
 *	[ResourceIdentifier](ctp:api:type:ResourceIdentifier) to a [ProductSelection](ctp:api:type:ProductSelection).
 *
 */
export interface ProductSelectionResourceIdentifier {
  readonly typeId: 'product-selection'
  /**
   *	Unique identifier of the referenced [ProductSelection](ctp:api:type:ProductSelection). Either `id` or `key` is required.
   *
   *
   */
  readonly id?: string
  /**
   *	User-defined unique identifier of the referenced [ProductSelection](ctp:api:type:ProductSelection). Either `id` or `key` is required.
   *
   *
   */
  readonly key?: string
}
export type ProductSelectionType =
  | IndividualExclusionProductSelectionType
  | IndividualProductSelectionType
export interface IndividualExclusionProductSelectionType {
  readonly type: 'individualExclusion'
  /**
   *	The name of the ProductSelection which is recommended to be unique.
   *
   */
  readonly name: LocalizedString
}
export interface IndividualProductSelectionType {
  readonly type: 'individual'
  /**
   *	The name of the ProductSelection which is recommended to be unique.
   *
   */
  readonly name: LocalizedString
}
/**
 *	The following types of Product Selections are supported:
 *
 */
export type ProductSelectionTypeEnum =
  | 'individual'
  | 'individualExclusion'
  | string
export interface ProductSelectionUpdate {
  /**
   *
   */
  readonly version: number
  /**
   *
   */
  readonly actions: ProductSelectionUpdateAction[]
}
export type ProductSelectionUpdateAction =
  | ProductSelectionAddProductAction
  | ProductSelectionChangeNameAction
  | ProductSelectionExcludeProductAction
  | ProductSelectionRemoveProductAction
  | ProductSelectionSetCustomFieldAction
  | ProductSelectionSetCustomTypeAction
  | ProductSelectionSetKeyAction
  | ProductSelectionSetVariantExclusionAction
  | ProductSelectionSetVariantSelectionAction
/**
 *	Only Product Variants with the explicitly listed SKUs are part of a Product Selection with `IndividualExclusion` [ProductSelectionMode](ctp:api:type:ProductSelectionMode).
 *
 */
export interface ProductVariantExclusion {
  /**
   *	Non-empty array of SKUs representing Product Variants to be included in the Product Selection with `IndividualExclusion` [ProductSelectionMode](ctp:api:type:ProductSelectionMode).
   *
   *
   */
  readonly skus: string[]
}
/**
 *	Polymorphic base type for Product Variant Selections. The actual type is determined by the `type` field.
 *
 */
export type ProductVariantSelection =
  | ProductVariantSelectionIncludeAllExcept
  | ProductVariantSelectionIncludeOnly
/**
 *	All Product Variants except the explicitly stated SKUs are part of the Product Selection.
 *
 */
export interface ProductVariantSelectionIncludeAllExcept {
  readonly type: 'includeAllExcept'
  /**
   *	Non-empty array of SKUs representing Product Variants to be excluded from the Product Selection.
   *
   *
   */
  readonly skus: string[]
}
/**
 *	Only Product Variants with explicitly stated SKUs are part of the Product Selection.
 *
 */
export interface ProductVariantSelectionIncludeOnly {
  readonly type: 'includeOnly'
  /**
   *	Non-empty array of SKUs representing Product Variants to be included into the Product Selection.
   *
   *
   */
  readonly skus: string[]
}
export type ProductVariantSelectionTypeEnum =
  | 'exclusion'
  | 'includeAllExcept'
  | 'includeOnly'
  | 'inclusion'
  | string
/**
 *	[PagedQueryResult](/general-concepts#pagedqueryresult) containing an array of [ProductSelectionAssignment](ctp:api:type:ProductSelectionAssignment).
 *
 */
export interface ProductsInStorePagedQueryResponse {
  /**
   *	Number of [results requested](/../api/general-concepts#limit).
   *
   *
   */
  readonly limit: number
  /**
   *	Number of [elements skipped](/../api/general-concepts#offset).
   *
   *
   */
  readonly offset: number
  /**
   *	Actual number of results returned.
   *
   *
   */
  readonly count: number
  /**
   *	Total number of results matching the query.
   *	This number is an estimation that is not [strongly consistent](/general-concepts#strong-consistency).
   *	Unlike other endpoints, the Product Selection endpoint does not return this field by default.
   *	To get `total`, pass the query parameter `withTotal` set to `true`.
   *	When the results are filtered with a [Query Predicate](/predicates/query), `total` is subject to a [limit](/limits#queries).
   *
   *
   */
  readonly total?: number
  /**
   *	ProductSelectionAssignments matching the query.
   *
   */
  readonly results: ProductSelectionAssignment[]
}
/**
 *	Adds a Product to the Product Selection.
 *
 *	If the specified Product is already assigned to the Product Selection, but the existing Product Selection has a different Product Variant Selection, a [ProductPresentWithDifferentVariantSelection](ctp:api:type:ProductPresentWithDifferentVariantSelectionError) error is returned.
 *
 */
export interface ProductSelectionAddProductAction {
  readonly action: 'addProduct'
  /**
   *	ResourceIdentifier of the Product
   *
   */
  readonly product: ProductResourceIdentifier
  /**
   *	Defines which Variants of the Product will be included in the Product Selection.
   *	If not supplied all Variants are deemed to be included.
   *
   *
   */
  readonly variantSelection?: ProductVariantSelection
}
export interface ProductSelectionChangeNameAction {
  readonly action: 'changeName'
  /**
   *	The new name to be set for the ProductSelection.
   *
   */
  readonly name: LocalizedString
}
/**
 *	Excludes a Product from a Product Selection with `IndividualExclusion` [ProductSelectionMode](ctp:api:type:ProductSelectionMode).
 *
 *	If the specified Product is already assigned to the Product Selection, but the existing Product Selection has a different Product Variant Exclusion, a [ProductPresentWithDifferentVariantSelection](ctp:api:type:ProductPresentWithDifferentVariantSelectionError) error is returned.
 *
 */
export interface ProductSelectionExcludeProductAction {
  readonly action: 'excludeProduct'
  /**
   *	ResourceIdentifier of the Product
   *
   */
  readonly product: ProductResourceIdentifier
  /**
   *	Defines which Variants of the Product will be excluded from the Product Selection.
   *	If not supplied all Variants are deemed to be excluded.
   *
   *
   */
  readonly variantExclusion?: ProductVariantExclusion
}
export interface ProductSelectionRemoveProductAction {
  readonly action: 'removeProduct'
  /**
   *	ResourceIdentifier of the Product
   *
   */
  readonly product: ProductResourceIdentifier
}
export interface ProductSelectionSetCustomFieldAction {
  readonly action: 'setCustomField'
  /**
   *	Name of the [Custom Field](/../api/projects/custom-fields).
   *
   *
   */
  readonly name: string
  /**
   *	If `value` is absent or `null`, this field will be removed if it exists.
   *	Removing a field that does not exist returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
   *	If `value` is provided, it is set for the field defined by `name`.
   *
   *
   */
  readonly value?: any
}
export interface ProductSelectionSetCustomTypeAction {
  readonly action: 'setCustomType'
  /**
   *	Defines the [Type](ctp:api:type:Type) that extends the ProductSelection with [Custom Fields](/../api/projects/custom-fields).
   *	If absent, any existing Type and Custom Fields are removed from the ProductSelection.
   *
   *
   */
  readonly type?: TypeResourceIdentifier
  /**
   *	Sets the [Custom Fields](/../api/projects/custom-fields) fields for the ProductSelection.
   *
   *
   */
  readonly fields?: FieldContainer
}
export interface ProductSelectionSetKeyAction {
  readonly action: 'setKey'
  /**
   *	If `key` is absent or `null`, the existing key, if any, will be removed.
   *
   */
  readonly key?: string
}
/**
 *	Updates the Product Variant Exclusion of an existing [Product Selection Assignment](ctp:api:type:ProductSelectionAssignment).
 *	A [ProductVariantExclusion](ctp:api:type:ProductVariantExclusion) can only be set if the [Product](ctp:api:type:Product) has already been excluded from the [Product Selection](ctp:api:type:ProductSelection) with `IndividualExclusion` [ProductSelectionMode](ctp:api:type:ProductSelectionMode).
 *
 *	If the specified Product is not assigned to the Product Selection, a [ProductAssignmentMissing](ctp:api:type:ProductAssignmentMissingError) error is returned.
 *
 */
export interface ProductSelectionSetVariantExclusionAction {
  readonly action: 'setVariantExclusion'
  /**
   *	ResourceIdentifier of the Product
   *
   */
  readonly product: ProductResourceIdentifier
  /**
   *	Determines which Variants of the previously excluded Product are to be included in the Product Selection with `IndividualExclusion` [ProductSelectionMode](ctp:api:type:ProductSelectionMode).
   *	Leave it empty to unset an existing Variant Exclusion.
   *
   *
   */
  readonly variantExclusion?: ProductVariantExclusion
}
/**
 *	Updates the Product Variant Selection of an existing [Product Selection Assignment](ctp:api:type:ProductSelectionAssignment).
 *	A [ProductVariantSelection](ctp:api:type:ProductVariantSelection) can only be set if the [Product](ctp:api:type:Product) has already been included in the Product Selection with `Individual` [ProductSelectionMode](ctp:api:type:ProductSelectionMode).
 *
 *	If the specified Product is not assigned to the Product Selection, a [ProductAssignmentMissing](ctp:api:type:ProductAssignmentMissingError) error is returned.
 *
 */
export interface ProductSelectionSetVariantSelectionAction {
  readonly action: 'setVariantSelection'
  /**
   *	ResourceIdentifier of the Product
   *
   */
  readonly product: ProductResourceIdentifier
  /**
   *	Determines which Variants of the previously added Product are to be included in, or excluded from, the Product Selection.
   *	Leave it empty to unset an existing Variant Selection.
   *
   *
   */
  readonly variantSelection?: ProductVariantSelection
}
