/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

import {
  CartDiscountReference,
  CartDiscountResourceIdentifier,
} from './cart-discount'
import {
  BaseResource,
  CreatedBy,
  LastModifiedBy,
  LocalizedString,
  Reference,
} from './common'
import {
  CustomFields,
  CustomFieldsDraft,
  FieldContainer,
  TypeResourceIdentifier,
} from './type'

export interface DiscountCode extends BaseResource {
  /**
   *	Platform-generated unique identifier of the DiscountCode.
   *
   */
  readonly id: string
  /**
   *
   */
  readonly version: number
  /**
   *
   */
  readonly createdAt: string
  /**
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *
   */
  readonly name?: LocalizedString
  /**
   *
   */
  readonly description?: LocalizedString
  /**
   *	User-defined unique identifier of the DiscountCode.
   *	It is [added to a Cart](/../api/projects/carts#add-discountcode) to enable the related CartDiscounts in that Cart.
   *
   */
  readonly code: string
  /**
   *	The referenced matching cart discounts can be applied to the cart once the DiscountCode is added.
   *
   */
  readonly cartDiscounts: CartDiscountReference[]
  /**
   *	The discount code can only be applied to carts that match this predicate.
   *
   */
  readonly cartPredicate?: string
  /**
   *
   */
  readonly isActive: boolean
  /**
   *	The platform will generate this array from the cart predicate.
   *	It contains the references of all the resources that are addressed in the predicate.
   *
   */
  readonly references: Reference[]
  /**
   *	The discount code can only be applied `maxApplications` times.
   *
   */
  readonly maxApplications?: number
  /**
   *	The discount code can only be applied `maxApplicationsPerCustomer` times per customer.
   *
   */
  readonly maxApplicationsPerCustomer?: number
  /**
   *
   */
  readonly custom?: CustomFields
  /**
   *	The groups to which this discount code belong.
   *
   */
  readonly groups: string[]
  /**
   *	The time from which the discount can be applied on a cart.
   *	Before that time the code is invalid.
   *
   */
  readonly validFrom?: string
  /**
   *	The time until the discount can be applied on a cart.
   *	After that time the code is invalid.
   *
   */
  readonly validUntil?: string
  /**
   *	Used for the internal platform only and registers the reservation of use of a discount code.
   *	Its value is managed by the platform.
   *	It can change at any time due to internal and external factors.
   *	It should not be used in customer logic.
   *
   *
   */
  readonly applicationVersion?: number
}
export interface DiscountCodeDraft {
  /**
   *
   */
  readonly name?: LocalizedString
  /**
   *
   */
  readonly description?: LocalizedString
  /**
   *	User-defined unique identifier for the DiscountCode.
   *	[Add it to a Cart](/../api/projects/carts#add-discountcode) to enable the related CartDiscounts in that Cart.
   *
   */
  readonly code: string
  /**
   *	The referenced matching cart discounts can be applied to the cart once the discount code is added.
   *	The number of cart discounts in a discount code is limited to **10**.
   *
   */
  readonly cartDiscounts: CartDiscountResourceIdentifier[]
  /**
   *	The discount code can only be applied to carts that match this predicate.
   *
   */
  readonly cartPredicate?: string
  /**
   *
   */
  readonly isActive?: boolean
  /**
   *
   */
  readonly maxApplications?: number
  /**
   *
   */
  readonly maxApplicationsPerCustomer?: number
  /**
   *
   */
  readonly custom?: CustomFieldsDraft
  /**
   *	The groups to which this discount code shall belong to.
   *
   */
  readonly groups?: string[]
  /**
   *	The time from which the discount can be applied on a cart.
   *	Before that time the code is invalid.
   *
   */
  readonly validFrom?: string
  /**
   *	The time until the discount can be applied on a cart.
   *	After that time the code is invalid.
   *
   */
  readonly validUntil?: string
}
export interface DiscountCodePagedQueryResponse {
  /**
   *	Number of [results requested](/../api/general-concepts#limit).
   *
   *
   */
  readonly limit: number
  /**
   *
   */
  readonly count: number
  /**
   *
   */
  readonly total?: number
  /**
   *
   */
  readonly offset: number
  /**
   *
   */
  readonly results: DiscountCode[]
}
/**
 *	[Reference](/../api/types#reference) to a [DiscountCode](ctp:api:type:DiscountCode).
 *
 */
export interface DiscountCodeReference {
  readonly typeId: 'discount-code'
  /**
   *	Platform-generated unique identifier of the referenced [DiscountCode](ctp:api:type:DiscountCode).
   *
   *
   */
  readonly id: string
  /**
   *	Contains the representation of the expanded DiscountCode. Only present in responses to requests with [Reference Expansion](/../api/general-concepts#reference-expansion) for DiscountCodes.
   *
   *
   */
  readonly obj?: DiscountCode
}
/**
 *	[ResourceIdentifier](/../api/types#resourceidentifier) to a [DiscountCode](ctp:api:type:DiscountCode).
 *
 */
export interface DiscountCodeResourceIdentifier {
  readonly typeId: 'discount-code'
  /**
   *	Platform-generated unique identifier of the referenced [DiscountCode](ctp:api:type:DiscountCode). Either `id` or `key` is required.
   *
   *
   */
  readonly id?: string
  /**
   *	User-defined unique identifier of the referenced [DiscountCode](ctp:api:type:DiscountCode). Either `id` or `key` is required.
   *
   *
   */
  readonly key?: string
}
export interface DiscountCodeUpdate {
  /**
   *
   */
  readonly version: number
  /**
   *
   */
  readonly actions: DiscountCodeUpdateAction[]
}
export type DiscountCodeUpdateAction =
  | DiscountCodeChangeCartDiscountsAction
  | DiscountCodeChangeGroupsAction
  | DiscountCodeChangeIsActiveAction
  | DiscountCodeSetCartPredicateAction
  | DiscountCodeSetCustomFieldAction
  | DiscountCodeSetCustomTypeAction
  | DiscountCodeSetDescriptionAction
  | DiscountCodeSetMaxApplicationsAction
  | DiscountCodeSetMaxApplicationsPerCustomerAction
  | DiscountCodeSetNameAction
  | DiscountCodeSetValidFromAction
  | DiscountCodeSetValidFromAndUntilAction
  | DiscountCodeSetValidUntilAction
export interface DiscountCodeChangeCartDiscountsAction {
  readonly action: 'changeCartDiscounts'
  /**
   *
   */
  readonly cartDiscounts: CartDiscountResourceIdentifier[]
}
export interface DiscountCodeChangeGroupsAction {
  readonly action: 'changeGroups'
  /**
   *	The groups to which this discount code shall belong to.
   *	Use empty array to remove the code from all groups.
   *
   */
  readonly groups: string[]
}
export interface DiscountCodeChangeIsActiveAction {
  readonly action: 'changeIsActive'
  /**
   *
   */
  readonly isActive: boolean
}
export interface DiscountCodeSetCartPredicateAction {
  readonly action: 'setCartPredicate'
  /**
   *	If the `cartPredicate` parameter is not included, the field will be emptied.
   *
   */
  readonly cartPredicate?: string
}
export interface DiscountCodeSetCustomFieldAction {
  readonly action: 'setCustomField'
  /**
   *	Name of the [Custom Field](/../api/projects/custom-fields).
   *
   *
   */
  readonly name: string
  /**
   *	If `value` is absent or `null`, this field will be removed if it exists.
   *	Trying to remove a field that does not exist will fail with an [InvalidOperation](/../api/errors#general-400-invalid-operation) error.
   *	If `value` is provided, it is set for the field defined by `name`.
   *
   *
   */
  readonly value?: any
}
export interface DiscountCodeSetCustomTypeAction {
  readonly action: 'setCustomType'
  /**
   *	Defines the [Type](ctp:api:type:Type) that extends the DiscountCode with [Custom Fields](/../api/projects/custom-fields).
   *	If absent, any existing Type and Custom Fields are removed from the DiscountCode.
   *
   *
   */
  readonly type?: TypeResourceIdentifier
  /**
   *	Sets the [Custom Fields](/../api/projects/custom-fields) fields for the DiscountCode.
   *
   *
   */
  readonly fields?: FieldContainer
}
export interface DiscountCodeSetDescriptionAction {
  readonly action: 'setDescription'
  /**
   *	If the `description` parameter is not included, the field will be emptied.
   *
   */
  readonly description?: LocalizedString
}
export interface DiscountCodeSetMaxApplicationsAction {
  readonly action: 'setMaxApplications'
  /**
   *	If the `maxApplications` parameter is not included, the field will be emptied.
   *
   */
  readonly maxApplications?: number
}
export interface DiscountCodeSetMaxApplicationsPerCustomerAction {
  readonly action: 'setMaxApplicationsPerCustomer'
  /**
   *	If the `maxApplicationsPerCustomer` parameter is not included, the field will be emptied.
   *
   */
  readonly maxApplicationsPerCustomer?: number
}
export interface DiscountCodeSetNameAction {
  readonly action: 'setName'
  /**
   *	If the `name` parameter is not included, the field will be emptied.
   *
   */
  readonly name?: LocalizedString
}
export interface DiscountCodeSetValidFromAction {
  readonly action: 'setValidFrom'
  /**
   *	If absent, the field with the value is removed in case a value was set before.
   *
   */
  readonly validFrom?: string
}
export interface DiscountCodeSetValidFromAndUntilAction {
  readonly action: 'setValidFromAndUntil'
  /**
   *	If absent, the field with the value is removed in case a value was set before.
   *
   */
  readonly validFrom?: string
  /**
   *	If absent, the field with the value is removed in case a value was set before.
   *
   */
  readonly validUntil?: string
}
export interface DiscountCodeSetValidUntilAction {
  readonly action: 'setValidUntil'
  /**
   *	If absent, the field with the value is removed in case a value was set before.
   *
   */
  readonly validUntil?: string
}
