/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

import {
  BaseResource,
  CreatedBy,
  LastModifiedBy,
  LocalizedString,
} from './common'
import { ProductReference, ProductResourceIdentifier } from './product'
import { StoreKeyReference, StoreResourceIdentifier } from './store'

/**
 *	A single ProductTailoring representation contains the _current_ and the _staged_ representation of its product data tailored per Store.
 *
 */
export interface ProductTailoring extends BaseResource {
  /**
   *	Unique identifier of the ProductTailoring.
   *
   */
  readonly id: string
  /**
   *	Current version of the ProductTailoring.
   *
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the ProductTailoring was initially created.
   *
   *
   */
  readonly createdAt: string
  /**
   *	Date and time (UTC) the ProductTailoring was last updated.
   *
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the ProductTailoring.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the ProductTailoring.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	User-defined unique identifier of the ProductTailoring.
   *
   *
   */
  readonly key?: string
  /**
   *	The Store to which the ProductTailoring belongs.
   *
   *
   */
  readonly store: StoreKeyReference
  /**
   *	Reference to the Product the ProductTailoring belongs to.
   *
   *
   */
  readonly product: ProductReference
  /**
   *	`true` if the ProductTailoring is published.
   *
   *
   */
  readonly published: boolean
  /**
   *	Current (published) data of the ProductTailoring.
   *
   *
   */
  readonly current: ProductTailoringData
  /**
   *	Staged (unpublished) data of the ProductTailoring.
   *
   *
   */
  readonly staged: ProductTailoringData
  /**
   *	`true` if the `staged` data is different from the `current` data.
   *
   *
   */
  readonly hasStagedChanges: boolean
}
/**
 *	Contains all the tailored data of a Product.
 *
 */
export interface ProductTailoringData {
  /**
   *	Tailored name of the Product.
   *
   *
   */
  readonly name?: LocalizedString
  /**
   *	Tailored description of the Product.
   *
   *
   */
  readonly description?: LocalizedString
  /**
   *	Tailored title of the Product used by external search engines for improved search engine performance.
   *
   *
   */
  readonly metaTitle?: LocalizedString
  /**
   *	Tailored description of the Product used by external search engines for improved search engine performance.
   *
   *
   */
  readonly metaDescription?: LocalizedString
  /**
   *	Tailored keywords related to the Product used by external search engines for improved search engine performance.
   *
   *
   */
  readonly metaKeywords?: LocalizedString
  /**
   *	User-defined identifier used in a deep-link URL for the ProductTailoring.
   *	Matches the pattern `[a-zA-Z0-9_\\-]{2,256}`.
   *
   *
   */
  readonly slug?: LocalizedString
}
/**
 *	Contains all the tailored data of a Product.
 *
 */
export interface ProductTailoringDraft {
  /**
   *	User-defined unique identifier of the ProductTailoring.
   *
   *
   */
  readonly key?: string
  /**
   *	The Store to which the ProductTailoring belongs.
   *
   *
   */
  readonly store: StoreResourceIdentifier
  /**
   *	ResourceIdentifier of the Product the ProductTailoring belongs to.
   *
   *
   */
  readonly product: ProductResourceIdentifier
  /**
   *	Tailored name of the Product.
   *
   *
   */
  readonly name?: LocalizedString
  /**
   *	Tailored description of the Product.
   *
   *
   */
  readonly description?: LocalizedString
  /**
   *	Tailored title of the Product used by external search engines for improved search engine performance.
   *
   *
   */
  readonly metaTitle?: LocalizedString
  /**
   *	Tailored description of the Product used by external search engines for improved search engine performance.
   *
   *
   */
  readonly metaDescription?: LocalizedString
  /**
   *	Tailored keywords related to the Product used by external search engines for improved search engine performance.
   *
   *
   */
  readonly metaKeywords?: LocalizedString
  /**
   *	User-defined identifier used in a deep-link URL for the ProductTailoring.
   *	Matches the pattern `[a-zA-Z0-9_\\-]{2,256}`.
   *
   *
   */
  readonly slug?: LocalizedString
  /**
   *	If `true`, the ProductTailoring is published immediately.
   *
   *
   */
  readonly publish?: boolean
}
/**
 *	Contains all the tailored data of a Product for a specific Store.
 *
 */
export interface ProductTailoringInStoreDraft {
  /**
   *	User-defined unique identifier of the ProductTailoring.
   *
   *
   */
  readonly key?: string
  /**
   *	ResourceIdentifier of the Product the ProductTailoring belongs to.
   *
   *
   */
  readonly product: ProductResourceIdentifier
  /**
   *	Tailored name of the Product.
   *
   *
   */
  readonly name?: LocalizedString
  /**
   *	Tailored description of the Product.
   *
   *
   */
  readonly description?: LocalizedString
  /**
   *	Tailored title of the Product used by external search engines for improved search engine performance.
   *
   *
   */
  readonly metaTitle?: LocalizedString
  /**
   *	Tailored description of the Product used by external search engines for improved search engine performance.
   *
   *
   */
  readonly metaDescription?: LocalizedString
  /**
   *	Tailored keywords related to the Product used by external search engines for improved search engine performance.
   *
   *
   */
  readonly metaKeywords?: LocalizedString
  /**
   *	User-defined identifier used in a deep-link URL for the ProductTailoring.
   *	Matches the pattern `[a-zA-Z0-9_\\-]{2,256}`.
   *
   *
   */
  readonly slug?: LocalizedString
  /**
   *	If `true`, the ProductTailoring is published immediately.
   *
   *
   */
  readonly publish?: boolean
}
/**
 *	[PagedQueryResult](/../api/general-concepts#pagedqueryresult) with results containing an array of [ProductTailoring](ctp:api:type:ProductTailoring).
 *
 */
export interface ProductTailoringPagedQueryResponse {
  /**
   *	Number of [results requested](/../api/general-concepts#limit).
   *
   *
   */
  readonly limit: number
  /**
   *	Number of [elements skipped](/../api/general-concepts#offset).
   *
   *
   */
  readonly offset: number
  /**
   *	Actual number of results returned.
   *
   *
   */
  readonly count: number
  /**
   *	Total number of results matching the query.
   *	This number is an estimation that is not [strongly consistent](/../api/general-concepts#strong-consistency).
   *	This field is returned by default.
   *	For improved performance, calculating this field can be deactivated by using the query parameter `withTotal=false`.
   *	When the results are filtered with a [Query Predicate](/../api/predicates/query), `total` is subject to a [limit](/../api/limits#queries).
   *
   *
   */
  readonly total?: number
  /**
   *	[ProductTailoring](ctp:api:type:ProductTailoring) list matching the query.
   *
   *
   */
  readonly results: ProductTailoring[]
}
/**
 *	[Reference](ctp:api:type:Reference) to a [ProductTailoring](ctp:api:type:ProductTailoring).
 *
 */
export interface ProductTailoringReference {
  readonly typeId: 'product-tailoring'
  /**
   *	Unique identifier of the referenced [ProductTailoring](ctp:api:type:ProductTailoring).
   *
   *
   */
  readonly id: string
  /**
   *	Contains the representation of the expanded ProductTailoring. Only present in responses to requests with [Reference Expansion](/../api/general-concepts#reference-expansion) for ProductTailoring.
   *
   *
   */
  readonly obj?: ProductTailoring
}
/**
 *	[ResourceIdentifier](ctp:api:type:ResourceIdentifier) to a [ProductTailoring](ctp:api:type:ProductTailoring).
 *
 */
export interface ProductTailoringResourceIdentifier {
  readonly typeId: 'product-tailoring'
  /**
   *	Unique identifier of the referenced [ProductTailoring](ctp:api:type:ProductTailoring). Either `id` or `key` is required.
   *
   *
   */
  readonly id?: string
  /**
   *	User-defined unique identifier of the referenced [ProductTailoring](ctp:api:type:ProductTailoring). Either `id` or `key` is required.
   *
   *
   */
  readonly key?: string
}
export type ProductTailoringUpdateAction =
  | ProductTailoringPublishAction
  | ProductTailoringSetDescriptionAction
  | ProductTailoringSetMetaAttributesAction
  | ProductTailoringSetMetaDescriptionAction
  | ProductTailoringSetMetaKeywordsAction
  | ProductTailoringSetMetaTitleAction
  | ProductTailoringSetNameAction
  | ProductTailoringSetSlugAction
  | ProductTailoringUnpublishAction
/**
 *	Publishes the `staged` data of the ProductTailoring to `current`. Sets `hasStagedChanges` to `false`.
 *	Generates the [ProductTailoringPublished](ctp:api:type:ProductTailoringPublishedMessage) Message.
 *
 */
export interface ProductTailoringPublishAction {
  readonly action: 'publish'
}
/**
 *	Generates the [ProductTailoringDescriptionSet](ctp:api:type:ProductTailoringDescriptionSetMessage) Message.
 *
 */
export interface ProductTailoringSetDescriptionAction {
  readonly action: 'setDescription'
  /**
   *	Value to set. If empty, any existing value will be removed.
   *
   *
   */
  readonly description?: LocalizedString
  /**
   *	If `true`, only the staged `description` is updated. If `false`, both the current and staged `description` are updated.
   *
   *
   */
  readonly staged?: boolean
}
/**
 *	Updates all meta attributes at the same time.
 */
export interface ProductTailoringSetMetaAttributesAction {
  readonly action: 'setMetaAttributes'
  /**
   *	Value to set. If empty, any existing value will be removed.
   *
   *
   */
  readonly metaTitle?: LocalizedString
  /**
   *	Value to set. If empty, any existing value will be removed.
   *
   *
   */
  readonly metaDescription?: LocalizedString
  /**
   *	Value to set. If empty, any existing value will be removed.
   *
   *
   */
  readonly metaKeywords?: LocalizedString
  /**
   *	If `true`, only the staged attributes are updated. If `false`, both the current and staged attributes are updated.
   *
   *
   */
  readonly staged?: boolean
}
export interface ProductTailoringSetMetaDescriptionAction {
  readonly action: 'setMetaDescription'
  /**
   *	Value to set. If empty, any existing value will be removed.
   *
   *
   */
  readonly metaDescription?: LocalizedString
  /**
   *	If `true`, only the staged `metaDescription` is updated. If `false`, both the current and staged `metaDescription` are updated.
   *
   *
   */
  readonly staged?: boolean
}
export interface ProductTailoringSetMetaKeywordsAction {
  readonly action: 'setMetaKeywords'
  /**
   *	Value to set. If empty, any existing value will be removed.
   *
   *
   */
  readonly metaKeywords?: LocalizedString
  /**
   *	If `true`, only the staged `metaKeywords` is updated. If `false`, both the current and staged `metaKeywords` are updated.
   *
   *
   */
  readonly staged?: boolean
}
export interface ProductTailoringSetMetaTitleAction {
  readonly action: 'setMetaTitle'
  /**
   *	Value to set. If empty, any existing value will be removed.
   *
   *
   */
  readonly metaTitle?: LocalizedString
  /**
   *	If `true`, only the staged `metaTitle` is updated. If `false`, both the current and staged `metaTitle` are updated.
   *
   *
   */
  readonly staged?: boolean
}
/**
 *	Generates the [ProductTailoringNameSet](ctp:api:type:ProductTailoringNameSetMessage) Message.
 *
 */
export interface ProductTailoringSetNameAction {
  readonly action: 'setName'
  /**
   *	Value to set. If empty, any existing value will be removed.
   *
   *
   */
  readonly name?: LocalizedString
  /**
   *	If `true`, only the staged `name` is updated. If `false`, both the current and staged `name` are updated.
   *
   *
   */
  readonly staged?: boolean
}
/**
 *	Generates the [ProductTailoringSlugSet](ctp:api:type:ProductTailoringSlugSetMessage) Message.
 *
 */
export interface ProductTailoringSetSlugAction {
  readonly action: 'setSlug'
  /**
   *	Value to set. If empty, any existing value will be removed.
   *
   *
   */
  readonly slug?: LocalizedString
  /**
   *	If `true`, only the staged `slug` is updated. If `false`, both the current and staged `slug` are updated.
   *
   *
   */
  readonly staged?: boolean
}
/**
 *	Unpublishes the `current` data of the ProductTailoring. Sets the `published` field to `false`.
 *	Generates the [ProductTailoringUnpublished](ctp:api:type:ProductTailoringUnpublishedMessage) Message.
 *
 */
export interface ProductTailoringUnpublishAction {
  readonly action: 'unpublish'
}
