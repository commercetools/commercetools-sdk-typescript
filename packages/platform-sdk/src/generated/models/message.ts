/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

import { ApprovalFlow, ApprovalFlowStatus } from './approval-flow'
import {
  ApprovalRule,
  ApprovalRuleStatus,
  ApproverHierarchy,
  RuleRequester,
} from './approval-rule'
import { AssociateRole, Permission } from './associate-role'
import {
  Associate,
  BusinessUnit,
  BusinessUnitApprovalRuleMode,
  BusinessUnitAssociateMode,
  BusinessUnitKeyReference,
  BusinessUnitStatus,
  BusinessUnitStoreMode,
  BusinessUnitType,
} from './business-unit'
import {
  CustomLineItem,
  DiscountCodeState,
  DiscountedLineItemPriceForQuantity,
  ItemShippingDetails,
  LineItem,
  MethodTaxedPrice,
  ProductPublishScope,
  ShippingInfo,
  ShippingRateInput,
  TaxedItemPrice,
} from './cart'
import { CartDiscount } from './cart-discount'
import { Category, CategoryReference } from './category'
import { ChannelReference } from './channel'
import {
  Address,
  CentPrecisionMoney,
  CreatedBy,
  DiscountedPrice,
  Image,
  LastModifiedBy,
  LocalizedString,
  Price,
  PriceTier,
  Reference,
  TypedMoney,
} from './common'
import {
  Customer,
  CustomerGroupAssignment,
  CustomerReference,
} from './customer'
import { CustomerGroupReference } from './customer-group'
import { DiscountCode, DiscountCodeReference } from './discount-code'
import { DiscountGroup } from './discount-group'
import { InventoryEntry } from './inventory'
import {
  Delivery,
  DeliveryItem,
  ItemState,
  OrderReference,
  OrderState,
  Parcel,
  ParcelMeasurements,
  PaymentState,
  ReturnInfo,
  ReturnShipmentState,
  ShipmentState,
  TrackingData,
  _Order,
} from './order'
import { OrderEdit, OrderEditApplied } from './order-edit'
import {
  Payment,
  PaymentReference,
  Transaction,
  TransactionState,
} from './payment'
import {
  ProductPriceModeEnum,
  ProductProjection,
  ProductReference,
  ProductVariant,
} from './product'
import {
  ProductSelection,
  ProductVariantExclusion,
  ProductVariantSelection,
} from './product-selection'
import { ProductVariantTailoring } from './product-tailoring'
import { Quote, QuoteState } from './quote'
import { QuoteRequest, QuoteRequestState } from './quote-request'
import { Review } from './review'
import { ShoppingListLineItem } from './shopping-list'
import { StagedQuote, StagedQuoteState } from './staged-quote'
import { StagedStandalonePrice, StandalonePrice } from './standalone-price'
import { StateReference } from './state'
import { ProductSelectionSetting, StoreKeyReference } from './store'
import { StoreCountry } from './store-country'
import { CustomFields } from './type'

/**
 *	`ContainerAndKey` is specific to [Custom Objects](ctp:api:type:CustomObject). Custom Objects are grouped into containers, which can be used like namespaces. Within a given container, a user-defined key can be used to uniquely identify resources.
 *
 */
export interface ContainerAndKey {
  /**
   *	User-defined identifier that is unique within the given container.
   *
   */
  readonly key: string
  /**
   *	Namespace to group [Custom Objects](ctp:api:type:CustomObject).
   *
   */
  readonly container: string
}
/**
 *	Base representation of a Message containing common fields to all [Message Types](/../api/projects/messages#message-types).
 *
 */
export type Message =
  | ApprovalFlowApprovedMessage
  | ApprovalFlowCompletedMessage
  | ApprovalFlowCreatedMessage
  | ApprovalFlowRejectedMessage
  | ApprovalRuleApproversSetMessage
  | ApprovalRuleCreatedMessage
  | ApprovalRuleDescriptionSetMessage
  | ApprovalRuleKeySetMessage
  | ApprovalRuleNameSetMessage
  | ApprovalRulePredicateSetMessage
  | ApprovalRuleRequestersSetMessage
  | ApprovalRuleStatusSetMessage
  | AssociateRoleBuyerAssignableChangedMessage
  | AssociateRoleCreatedMessage
  | AssociateRoleDeletedMessage
  | AssociateRoleNameSetMessage
  | AssociateRolePermissionAddedMessage
  | AssociateRolePermissionRemovedMessage
  | AssociateRolePermissionsSetMessage
  | BusinessUnitAddressAddedMessage
  | BusinessUnitAddressChangedMessage
  | BusinessUnitAddressCustomFieldAddedMessage
  | BusinessUnitAddressCustomFieldChangedMessage
  | BusinessUnitAddressCustomFieldRemovedMessage
  | BusinessUnitAddressCustomTypeRemovedMessage
  | BusinessUnitAddressCustomTypeSetMessage
  | BusinessUnitAddressRemovedMessage
  | BusinessUnitApprovalRuleModeChangedMessage
  | BusinessUnitAssociateAddedMessage
  | BusinessUnitAssociateChangedMessage
  | BusinessUnitAssociateModeChangedMessage
  | BusinessUnitAssociateRemovedMessage
  | BusinessUnitAssociatesSetMessage
  | BusinessUnitBillingAddressAddedMessage
  | BusinessUnitBillingAddressRemovedMessage
  | BusinessUnitContactEmailSetMessage
  | BusinessUnitCreatedMessage
  | BusinessUnitCustomFieldAddedMessage
  | BusinessUnitCustomFieldChangedMessage
  | BusinessUnitCustomFieldRemovedMessage
  | BusinessUnitCustomTypeRemovedMessage
  | BusinessUnitCustomTypeSetMessage
  | BusinessUnitDefaultBillingAddressSetMessage
  | BusinessUnitDefaultShippingAddressSetMessage
  | BusinessUnitDeletedMessage
  | BusinessUnitNameChangedMessage
  | BusinessUnitParentChangedMessage
  | BusinessUnitShippingAddressAddedMessage
  | BusinessUnitShippingAddressRemovedMessage
  | BusinessUnitStatusChangedMessage
  | BusinessUnitStoreAddedMessage
  | BusinessUnitStoreModeChangedMessage
  | BusinessUnitStoreRemovedMessage
  | BusinessUnitStoresSetMessage
  | BusinessUnitTopLevelUnitSetMessage
  | BusinessUnitTypeSetMessage
  | CartDiscountCreatedMessage
  | CartDiscountDeletedMessage
  | CartDiscountStoreAddedMessage
  | CartDiscountStoreRemovedMessage
  | CartDiscountStoresSetMessage
  | CategoryCreatedMessage
  | CategorySlugChangedMessage
  | CustomLineItemStateTransitionMessage
  | CustomerAddressAddedMessage
  | CustomerAddressChangedMessage
  | CustomerAddressCustomFieldAddedMessage
  | CustomerAddressCustomFieldChangedMessage
  | CustomerAddressCustomFieldRemovedMessage
  | CustomerAddressCustomTypeRemovedMessage
  | CustomerAddressCustomTypeSetMessage
  | CustomerAddressRemovedMessage
  | CustomerCompanyNameSetMessage
  | CustomerCreatedMessage
  | CustomerCustomFieldAddedMessage
  | CustomerCustomFieldChangedMessage
  | CustomerCustomFieldRemovedMessage
  | CustomerCustomTypeRemovedMessage
  | CustomerCustomTypeSetMessage
  | CustomerDateOfBirthSetMessage
  | CustomerDeletedMessage
  | CustomerEmailChangedMessage
  | CustomerEmailTokenCreatedMessage
  | CustomerEmailVerifiedMessage
  | CustomerFirstNameSetMessage
  | CustomerGroupAssignmentAddedMessage
  | CustomerGroupAssignmentRemovedMessage
  | CustomerGroupAssignmentsSetMessage
  | CustomerGroupCustomFieldAddedMessage
  | CustomerGroupCustomFieldChangedMessage
  | CustomerGroupCustomFieldRemovedMessage
  | CustomerGroupCustomTypeRemovedMessage
  | CustomerGroupCustomTypeSetMessage
  | CustomerGroupSetMessage
  | CustomerLastNameSetMessage
  | CustomerPasswordTokenCreatedMessage
  | CustomerPasswordUpdatedMessage
  | CustomerTitleSetMessage
  | DeliveryAddedMessage
  | DeliveryAddressSetMessage
  | DeliveryCustomFieldAddedMessage
  | DeliveryCustomFieldChangedMessage
  | DeliveryCustomFieldRemovedMessage
  | DeliveryCustomTypeRemovedMessage
  | DeliveryCustomTypeSetMessage
  | DeliveryItemsUpdatedMessage
  | DeliveryRemovedMessage
  | DiscountCodeCreatedMessage
  | DiscountCodeDeletedMessage
  | DiscountCodeKeySetMessage
  | DiscountGroupCreatedMessage
  | DiscountGroupDeletedMessage
  | DiscountGroupKeySetMessage
  | DiscountGroupSortOrderSetMessage
  | InventoryEntryCreatedMessage
  | InventoryEntryDeletedMessage
  | InventoryEntryQuantitySetMessage
  | LineItemStateTransitionMessage
  | OrderBillingAddressSetMessage
  | OrderBusinessUnitSetMessage
  | OrderCreatedMessage
  | OrderCustomFieldAddedMessage
  | OrderCustomFieldChangedMessage
  | OrderCustomFieldRemovedMessage
  | OrderCustomLineItemAddedMessage
  | OrderCustomLineItemDiscountSetMessage
  | OrderCustomLineItemQuantityChangedMessage
  | OrderCustomLineItemRemovedMessage
  | OrderCustomTypeRemovedMessage
  | OrderCustomTypeSetMessage
  | OrderCustomerEmailSetMessage
  | OrderCustomerGroupSetMessage
  | OrderCustomerSetMessage
  | OrderDeletedMessage
  | OrderDiscountCodeAddedMessage
  | OrderDiscountCodeRemovedMessage
  | OrderDiscountCodeStateSetMessage
  | OrderEditAppliedMessage
  | OrderImportedMessage
  | OrderLineItemAddedMessage
  | OrderLineItemDiscountSetMessage
  | OrderLineItemDistributionChannelSetMessage
  | OrderLineItemRemovedMessage
  | OrderMessage
  | OrderPaymentAddedMessage
  | OrderPaymentStateChangedMessage
  | OrderPurchaseOrderNumberSetMessage
  | OrderReturnShipmentStateChangedMessage
  | OrderShipmentStateChangedMessage
  | OrderShippingAddressSetMessage
  | OrderShippingInfoSetMessage
  | OrderShippingRateInputSetMessage
  | OrderStateChangedMessage
  | OrderStateTransitionMessage
  | OrderStoreSetMessage
  | ParcelAddedToDeliveryMessage
  | ParcelItemsUpdatedMessage
  | ParcelMeasurementsUpdatedMessage
  | ParcelRemovedFromDeliveryMessage
  | ParcelTrackingDataUpdatedMessage
  | PaymentCreatedMessage
  | PaymentInteractionAddedMessage
  | PaymentStatusInterfaceCodeSetMessage
  | PaymentStatusStateTransitionMessage
  | PaymentTransactionAddedMessage
  | PaymentTransactionStateChangedMessage
  | ProductAddedToCategoryMessage
  | ProductCreatedMessage
  | ProductDeletedMessage
  | ProductImageAddedMessage
  | ProductPriceAddedMessage
  | ProductPriceChangedMessage
  | ProductPriceCustomFieldAddedMessage
  | ProductPriceCustomFieldChangedMessage
  | ProductPriceCustomFieldRemovedMessage
  | ProductPriceCustomFieldsRemovedMessage
  | ProductPriceCustomFieldsSetMessage
  | ProductPriceDiscountsSetMessage
  | ProductPriceExternalDiscountSetMessage
  | ProductPriceKeySetMessage
  | ProductPriceModeSetMessage
  | ProductPriceRemovedMessage
  | ProductPricesSetMessage
  | ProductPublishedMessage
  | ProductRemovedFromCategoryMessage
  | ProductRevertedStagedChangesMessage
  | ProductSelectionCreatedMessage
  | ProductSelectionDeletedMessage
  | ProductSelectionProductAddedMessage
  | ProductSelectionProductExcludedMessage
  | ProductSelectionProductRemovedMessage
  | ProductSelectionVariantExclusionChangedMessage
  | ProductSelectionVariantSelectionChangedMessage
  | ProductSlugChangedMessage
  | ProductStateTransitionMessage
  | ProductTailoringCreatedMessage
  | ProductTailoringDeletedMessage
  | ProductTailoringDescriptionSetMessage
  | ProductTailoringImageAddedMessage
  | ProductTailoringImagesSetMessage
  | ProductTailoringNameSetMessage
  | ProductTailoringPublishedMessage
  | ProductTailoringSlugSetMessage
  | ProductTailoringUnpublishedMessage
  | ProductUnpublishedMessage
  | ProductVariantAddedMessage
  | ProductVariantDeletedMessage
  | ProductVariantTailoringAddedMessage
  | ProductVariantTailoringRemovedMessage
  | QuoteCreatedMessage
  | QuoteCustomerChangedMessage
  | QuoteDeletedMessage
  | QuoteRenegotiationRequestedMessage
  | QuoteRequestCreatedMessage
  | QuoteRequestCustomerChangedMessage
  | QuoteRequestDeletedMessage
  | QuoteRequestStateChangedMessage
  | QuoteRequestStateTransitionMessage
  | QuoteStateChangedMessage
  | QuoteStateTransitionMessage
  | ReturnInfoAddedMessage
  | ReturnInfoSetMessage
  | ReviewCreatedMessage
  | ReviewRatingSetMessage
  | ReviewStateTransitionMessage
  | ShoppingListLineItemAddedMessage
  | ShoppingListLineItemRemovedMessage
  | ShoppingListMessage
  | StagedQuoteCreatedMessage
  | StagedQuoteDeletedMessage
  | StagedQuoteSellerCommentSetMessage
  | StagedQuoteStateChangedMessage
  | StagedQuoteStateTransitionMessage
  | StagedQuoteValidToSetMessage
  | StandalonePriceActiveChangedMessage
  | StandalonePriceCreatedMessage
  | StandalonePriceDeletedMessage
  | StandalonePriceDiscountSetMessage
  | StandalonePriceExternalDiscountSetMessage
  | StandalonePriceKeySetMessage
  | StandalonePriceStagedChangesAppliedMessage
  | StandalonePriceStagedChangesRemovedMessage
  | StandalonePriceTierAddedMessage
  | StandalonePriceTierRemovedMessage
  | StandalonePriceTiersSetMessage
  | StandalonePriceValidFromAndUntilSetMessage
  | StandalonePriceValidFromSetMessage
  | StandalonePriceValidUntilSetMessage
  | StandalonePriceValueChangedMessage
  | StoreCountriesChangedMessage
  | StoreCreatedMessage
  | StoreDeletedMessage
  | StoreDistributionChannelsChangedMessage
  | StoreLanguagesChangedMessage
  | StoreNameSetMessage
  | StoreProductSelectionsChangedMessage
  | StoreSupplyChannelsChangedMessage
export interface IMessage {
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	[Message Type](/../api/projects/messages#message-types) of the Message.
   *
   *
   */
  readonly type: string
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
}
/**
 *	Generated after an [approval in the Approval Flow](/projects/approval-flows#approve).
 *
 */
export interface ApprovalFlowApprovedMessage extends IMessage {
  readonly type: 'ApprovalFlowApproved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Reference](ctp:api:type:Reference) to the [Customer](ctp:api:type:Customer) who approved the [Approval Flow](/projects/approval-flows).
   *
   *
   */
  readonly associate: CustomerReference
  /**
   *	[Reference](ctp:api:type:Reference) to the [Order](ctp:api:type:Order) that received the approval.
   *
   *
   */
  readonly order: OrderReference
}
/**
 *	Generated after an [Approval Flow](ctp:api:type:ApprovalFlow) is completed and reaches a final status.
 *
 */
export interface ApprovalFlowCompletedMessage extends IMessage {
  readonly type: 'ApprovalFlowCompleted'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Final status of the [Approval Flow](ctp:api:type:ApprovalFlow).
   *
   *
   */
  readonly status: ApprovalFlowStatus
  /**
   *	[Reference](ctp:api:type:Reference) to the [Order](ctp:api:type:Order) related to the completed [Approval Flow](ctp:api:type:ApprovalFlow).
   *
   *
   */
  readonly order: OrderReference
}
/**
 *	Generated after an [Approval Flow](ctp:api:type:ApprovalFlow) is created.
 *
 */
export interface ApprovalFlowCreatedMessage extends IMessage {
  readonly type: 'ApprovalFlowCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The [Approval Flow](ctp:api:type:ApprovalFlow) that was created.
   *
   *
   */
  readonly approvalFlow: ApprovalFlow
}
/**
 *	Generated after an [Approval Flow is rejected](/projects/approval-flows#reject).
 *
 */
export interface ApprovalFlowRejectedMessage extends IMessage {
  readonly type: 'ApprovalFlowRejected'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Reference](ctp:api:type:Reference) to the [Customer](ctp:api:type:Customer) who rejected the [Approval Flow](/projects/approval-flows).
   *
   *
   */
  readonly associate: CustomerReference
  /**
   *	Description of the reason why the [Approval Flow](ctp:api:type:ApprovalFlow) was rejected.
   *
   *
   */
  readonly rejectionReason?: string
  /**
   *	[Reference](ctp:api:type:Reference) to the [Order](ctp:api:type:Order) that received the rejection.
   *
   *
   */
  readonly order: OrderReference
}
/**
 *	Generated after a successful [Set Approvers](ctp:api:type:ApprovalRuleSetApproversAction) update action.
 *
 */
export interface ApprovalRuleApproversSetMessage extends IMessage {
  readonly type: 'ApprovalRuleApproversSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Approver hierarchy of the [ApprovalRule](ctp:api:type:ApprovalRule) after the [Set Approvers](ctp:api:type:ApprovalRuleSetApproversAction) update action.
   *
   *
   */
  readonly approvers: ApproverHierarchy
  /**
   *	Approver hierarchy of the [ApprovalRule](ctp:api:type:ApprovalRule) before the [Set Approvers](ctp:api:type:ApprovalRuleSetApproversAction) update action.
   *
   *
   */
  readonly oldApprovers: ApproverHierarchy
}
/**
 *	Generated after an [Approval Rule](ctp:api:type:ApprovalRule) is created.
 *
 */
export interface ApprovalRuleCreatedMessage extends IMessage {
  readonly type: 'ApprovalRuleCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The [Approval Rule](ctp:api:type:ApprovalRule) that was created.
   *
   *
   */
  readonly approvalRule: ApprovalRule
}
/**
 *	Generated after a successful [Set Description](ctp:api:type:ApprovalRuleSetDescriptionAction) update action.
 *
 */
export interface ApprovalRuleDescriptionSetMessage extends IMessage {
  readonly type: 'ApprovalRuleDescriptionSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Description of the [ApprovalRule](ctp:api:type:ApprovalRule) after the [Set Description](ctp:api:type:ApprovalRuleSetDescriptionAction) update action.
   *
   *
   */
  readonly description?: string
  /**
   *	Description of the [ApprovalRule](ctp:api:type:ApprovalRule) before the [Set Description](ctp:api:type:ApprovalRuleSetDescriptionAction) update action.
   *
   *
   */
  readonly oldDescription?: string
}
/**
 *	Generated after a successful [Set Key](ctp:api:type:ApprovalRuleSetKeyAction) update action.
 *
 */
export interface ApprovalRuleKeySetMessage extends IMessage {
  readonly type: 'ApprovalRuleKeySet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	`key` value of the [ApprovalRule](ctp:api:type:ApprovalRule) after the [Set Key](ctp:api:type:ApprovalRuleSetKeyAction) update action.
   *
   *
   */
  readonly key?: string
  /**
   *	`key` value of the [ApprovalRule](ctp:api:type:ApprovalRule) before the [Set Key](ctp:api:type:ApprovalRuleSetKeyAction) update action.
   *
   *
   */
  readonly oldKey?: string
}
/**
 *	Generated after a successful [Set Name](ctp:api:type:ApprovalRuleSetNameAction) update action.
 *
 */
export interface ApprovalRuleNameSetMessage extends IMessage {
  readonly type: 'ApprovalRuleNameSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Name of the [ApprovalRule](ctp:api:type:ApprovalRule) after the [Set Name](ctp:api:type:ApprovalRuleSetNameAction) update action.
   *
   *
   */
  readonly name: string
  /**
   *	Name of the [ApprovalRule](ctp:api:type:ApprovalRule) before the [Set Name](ctp:api:type:ApprovalRuleSetNameAction) update action.
   *
   *
   */
  readonly oldName: string
}
/**
 *	Generated after a successful [Set Predicate](ctp:api:type:ApprovalRuleSetPredicateAction) update action.
 *
 */
export interface ApprovalRulePredicateSetMessage extends IMessage {
  readonly type: 'ApprovalRulePredicateSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Name of the [ApprovalRule](ctp:api:type:ApprovalRule) after the [Set Predicate](ctp:api:type:ApprovalRuleSetPredicateAction) update action.
   *
   *
   */
  readonly predicate: string
  /**
   *	Name of the [ApprovalRule](ctp:api:type:ApprovalRule) before the [Set Predicate](ctp:api:type:ApprovalRuleSetPredicateAction) update action.
   *
   *
   */
  readonly oldPredicate: string
}
/**
 *	Generated after a successful [Set Requester](ctp:api:type:ApprovalRuleSetRequestersAction) update action.
 *
 */
export interface ApprovalRuleRequestersSetMessage extends IMessage {
  readonly type: 'ApprovalRuleRequestersSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	RuleRequester of the [ApprovalRule](ctp:api:type:ApprovalRule) after the [Set Requester](ctp:api:type:ApprovalRuleSetRequestersAction) update action.
   *
   *
   */
  readonly requesters: RuleRequester[]
  /**
   *	RuleRequester of the [ApprovalRule](ctp:api:type:ApprovalRule) after the [Set Requester](ctp:api:type:ApprovalRuleSetRequestersAction) update action.
   *
   *
   */
  readonly oldRequesters: RuleRequester[]
}
/**
 *	Generated after a successful [Set Status](ctp:api:type:ApprovalRuleSetStatusAction) update action.
 *
 */
export interface ApprovalRuleStatusSetMessage extends IMessage {
  readonly type: 'ApprovalRuleStatusSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Status of the [ApprovalRule](ctp:api:type:ApprovalRule) after the [Set Status](ctp:api:type:ApprovalRuleSetStatusAction) update action.
   *
   *
   */
  readonly status: ApprovalRuleStatus
  /**
   *	Status of the [ApprovalRule](ctp:api:type:ApprovalRule) before the [Set Status](ctp:api:type:ApprovalRuleSetStatusAction) update action.
   *
   *
   */
  readonly oldStatus: ApprovalRuleStatus
}
/**
 *	Generated after a successful [Change BuyerAssignable](ctp:api:type:AssociateRoleChangeBuyerAssignableAction) update action.
 *
 */
export interface AssociateRoleBuyerAssignableChangedMessage extends IMessage {
  readonly type: 'AssociateRoleBuyerAssignableChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The new value of the `buyerAssignable` field of the AssociateRole.
   *
   *
   */
  readonly buyerAssignable: boolean
}
/**
 *	Generated after a successful [Create AssociateRole](ctp:api:endpoint:/{projectKey}/associate-roles:POST) request.
 *
 */
export interface AssociateRoleCreatedMessage extends IMessage {
  readonly type: 'AssociateRoleCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The [AssociateRole](ctp:api:type:AssociateRole) that was created.
   *
   *
   */
  readonly associateRole: AssociateRole
}
/**
 *	Generated after a successful [Delete AssociateRole](/projects/associate-roles#delete-associaterole) request.
 *
 */
export interface AssociateRoleDeletedMessage extends IMessage {
  readonly type: 'AssociateRoleDeleted'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
}
/**
 *	Generated after a successful [Set Name](ctp:api:type:AssociateRoleSetNameAction) update action.
 *
 */
export interface AssociateRoleNameSetMessage extends IMessage {
  readonly type: 'AssociateRoleNameSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Updated name of the [AssociateRole](ctp:api:type:AssociateRole).
   *
   *
   */
  readonly name: string
}
/**
 *	Generated after a successful [Add Permissions](ctp:api:type:AssociateRoleAddPermissionAction) update action.
 *
 */
export interface AssociateRolePermissionAddedMessage extends IMessage {
  readonly type: 'AssociateRolePermissionAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The Permission that was added to the AssociateRole.
   *
   *
   */
  readonly permission: Permission
}
/**
 *	Generated after a successful [Remove Permissions](ctp:api:type:AssociateRoleRemovePermissionAction) update action.
 *
 */
export interface AssociateRolePermissionRemovedMessage extends IMessage {
  readonly type: 'AssociateRolePermissionRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The Permission that was removed from the AssociateRole.
   *
   *
   */
  readonly permission: Permission
}
/**
 *	Generated after a successful [Set Permissions](ctp:api:type:AssociateRoleSetPermissionsAction) update action.
 *
 */
export interface AssociateRolePermissionsSetMessage extends IMessage {
  readonly type: 'AssociateRolePermissionsSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Permission assigned to the AssociateRole.
   *
   *
   */
  readonly permissions: Permission[]
}
/**
 *	Generated after a successful [Add Address](ctp:api:type:BusinessUnitAddAddressAction) update action.
 *
 */
export interface BusinessUnitAddressAddedMessage extends IMessage {
  readonly type: 'BusinessUnitAddressAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The address that was added to the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Change Address](ctp:api:type:BusinessUnitChangeAddressAction) update action.
 *
 */
export interface BusinessUnitAddressChangedMessage extends IMessage {
  readonly type: 'BusinessUnitAddressChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Updated address of the Business Unit.
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after adding a Custom Field to an address of a Business Unit using the [Set Address CustomField](ctp:api:type:BusinessUnitSetAddressCustomFieldAction) update action. If a Custom Field already exists with the same name, a [BusinessUnitAddressCustomFieldChanged](ctp:api:type:BusinessUnitAddressCustomFieldChangedMessage) Message is generated instead.
 *
 */
export interface BusinessUnitAddressCustomFieldAddedMessage extends IMessage {
  readonly type: 'BusinessUnitAddressCustomFieldAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Name of the Custom Field that was added.
   *
   *
   */
  readonly name: string
  /**
   *	The added [CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType).
   *
   */
  readonly value: any
  /**
   *	`id` of the [Address](ctp:api:type:Address) to which the Custom Field was added.
   *
   *
   */
  readonly addressId?: string
}
/**
 *	Generated after changing an existing Custom Field on an address of a Business Unit using the [Set Address CustomField](ctp:api:type:BusinessUnitSetAddressCustomFieldAction) update action.
 *
 */
export interface BusinessUnitAddressCustomFieldChangedMessage extends IMessage {
  readonly type: 'BusinessUnitAddressCustomFieldChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Name of the Custom Field that changed.
   *
   *
   */
  readonly name: string
  /**
   *	[CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType) after the [Set CustomField](ctp:api:type:BusinessUnitSetAddressCustomFieldAction) update action.
   *
   *
   */
  readonly value: any
  /**
   *	[CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType) before the [Set CustomField](ctp:api:type:BusinessUnitSetAddressCustomFieldAction) update action.
   *
   *
   */
  readonly oldValue?: any
  /**
   *	`id` of the [Address](ctp:api:type:Address) of which the Custom Field was changed.
   *
   *
   */
  readonly addressId?: string
}
/**
 *	Generated after removing a Custom Field from an address of a Business Unit using the [Set Address CustomField](ctp:api:type:BusinessUnitSetAddressCustomFieldAction) update action.
 *
 */
export interface BusinessUnitAddressCustomFieldRemovedMessage extends IMessage {
  readonly type: 'BusinessUnitAddressCustomFieldRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Name of the Custom Field that was removed.
   *
   *
   */
  readonly name: string
  /**
   *	`id` of the [Address](ctp:api:type:Address) from which the Custom Field was removed.
   *
   *
   */
  readonly addressId?: string
}
/**
 *	Generated after removing a Custom Type from an address of a Business Unit using the [Set Custom Type in Address](ctp:api:type:BusinessUnitSetAddressCustomTypeAction) update action.
 *
 */
export interface BusinessUnitAddressCustomTypeRemovedMessage extends IMessage {
  readonly type: 'BusinessUnitAddressCustomTypeRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	`id` of the [Custom Type](ctp:api:type:Type) that was removed. Absent if there was no previous Custom Type present.
   *
   *
   */
  readonly oldTypeId?: string
  /**
   *	`id` of the [Address](ctp:api:type:Address) from which the Custom Type was removed.
   *
   *
   */
  readonly addressId?: string
}
/**
 *	Generated after adding a Custom Type to an address of a Business Unit using the [Set Custom Type in Address](ctp:api:type:BusinessUnitSetAddressCustomTypeAction) update action.
 *
 */
export interface BusinessUnitAddressCustomTypeSetMessage extends IMessage {
  readonly type: 'BusinessUnitAddressCustomTypeSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The Custom Fields that were set.
   *
   */
  readonly customFields: CustomFields
  /**
   *	`id` of the previous [Custom Type](ctp:api:type:Type). Absent if there was no previous Custom Type present.
   *
   *
   */
  readonly oldTypeId?: string
  /**
   *	`id` of the [Address](ctp:api:type:Address) on which the Custom Field was set.
   *
   *
   */
  readonly addressId?: string
}
/**
 *	Generated after a successful [Remove Address](ctp:api:type:BusinessUnitRemoveAddressAction) update action.
 *
 */
export interface BusinessUnitAddressRemovedMessage extends IMessage {
  readonly type: 'BusinessUnitAddressRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The address that was removed from the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Change Approval Rule Mode](ctp:api:type:BusinessUnitChangeApprovalRuleModeAction) update action.
 *
 */
export interface BusinessUnitApprovalRuleModeChangedMessage extends IMessage {
  readonly type: 'BusinessUnitApprovalRuleModeChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[BusinessUnitApprovalRuleMode](ctp:api:type:BusinessUnitApprovalRuleMode) of the Business Unit after the [Change Approval Rule Mode](ctp:api:type:BusinessUnitChangeApprovalRuleModeAction) update action.
   *
   *
   */
  readonly approvalRuleMode: BusinessUnitApprovalRuleMode
  /**
   *	[BusinessUnitApprovalRuleMode](ctp:api:type:BusinessUnitApprovalRuleMode) of the Business Unit before the [Change Approval Rule Mode](ctp:api:type:BusinessUnitChangeApprovalRuleModeAction) update action.
   *
   *
   */
  readonly oldApprovalRuleMode?: BusinessUnitApprovalRuleMode
}
/**
 *	Generated after a successful [Add Associate](ctp:api:type:BusinessUnitAddAssociateAction) update action.
 *
 */
export interface BusinessUnitAssociateAddedMessage extends IMessage {
  readonly type: 'BusinessUnitAssociateAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The [Associate](ctp:api:type:Associate) that was added to the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly associate: Associate
}
/**
 *	Generated after a successful [Change Associate](ctp:api:type:BusinessUnitChangeAssociateAction) update action.
 *
 */
export interface BusinessUnitAssociateChangedMessage extends IMessage {
  readonly type: 'BusinessUnitAssociateChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The [Associate](ctp:api:type:Associate) that was updated.
   *
   *
   */
  readonly associate: Associate
}
/**
 *	Generated after a successful [Change Associate Mode](ctp:api:type:BusinessUnitChangeAssociateModeAction) update action.
 *
 */
export interface BusinessUnitAssociateModeChangedMessage extends IMessage {
  readonly type: 'BusinessUnitAssociateModeChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[BusinessUnitAssociateMode](ctp:api:type:BusinessUnitAssociateMode) of the Business Unit after the [Change Associate Mode](ctp:api:type:BusinessUnitChangeAssociateModeAction) update action.
   *
   *
   */
  readonly associateMode: BusinessUnitAssociateMode
  /**
   *	[BusinessUnitAssociateMode](ctp:api:type:BusinessUnitAssociateMode) of the Business Unit before the [Change Associate Mode](ctp:api:type:BusinessUnitChangeAssociateModeAction) update action.
   *
   *
   */
  readonly oldAssociateMode: BusinessUnitAssociateMode
}
/**
 *	Generated after a successful [Remove Associate](ctp:api:type:BusinessUnitRemoveAssociateAction) update action.
 *
 */
export interface BusinessUnitAssociateRemovedMessage extends IMessage {
  readonly type: 'BusinessUnitAssociateRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The [Associate](ctp:api:type:Associate) that was removed from the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly associate: Associate
}
/**
 *	Generated after a successful [Set Associates](ctp:api:type:BusinessUnitSetAssociatesAction) update action.
 *
 */
export interface BusinessUnitAssociatesSetMessage extends IMessage {
  readonly type: 'BusinessUnitAssociatesSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The list of [Associates](ctp:api:type:Associate) that was updated on the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly associates: Associate[]
}
/**
 *	Generated after a successful [Add Billing Address Identifier](ctp:api:type:BusinessUnitAddBillingAddressIdAction) update action.
 *
 */
export interface BusinessUnitBillingAddressAddedMessage extends IMessage {
  readonly type: 'BusinessUnitBillingAddressAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The address that was added to the [Business Unit](ctp:api:type:BusinessUnit) as billing address.
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Remove Billing Address Identifier](ctp:api:type:BusinessUnitRemoveBillingAddressIdAction) update action.
 *
 */
export interface BusinessUnitBillingAddressRemovedMessage extends IMessage {
  readonly type: 'BusinessUnitBillingAddressRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The address that was removed from the billing addresses of the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Set Contact Email](ctp:api:type:BusinessUnitSetContactEmailAction) update action.
 *
 */
export interface BusinessUnitContactEmailSetMessage extends IMessage {
  readonly type: 'BusinessUnitContactEmailSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The contact email that was updated on the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly contactEmail?: string
}
/**
 *	Generated after a successful [Create BusinessUnit](ctp:api:endpoint:/{projectKey}/business-units:POST) request.
 *
 */
export interface BusinessUnitCreatedMessage extends IMessage {
  readonly type: 'BusinessUnitCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The [Business Unit](ctp:api:type:BusinessUnit) that was created.
   *
   *
   */
  readonly businessUnit: BusinessUnit
}
/**
 *	Generated after adding a Custom Field to a Business Unit using the [Set CustomField](ctp:api:type:BusinessUnitSetCustomFieldAction) update action. If a Custom Field already exists with the same name, a [BusinessUnitCustomFieldChanged](ctp:api:type:BusinessUnitCustomFieldChangedMessage) Message is generated instead.
 *
 */
export interface BusinessUnitCustomFieldAddedMessage extends IMessage {
  readonly type: 'BusinessUnitCustomFieldAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Name of the Custom Field that was added.
   *
   *
   */
  readonly name: string
  /**
   *	The added [CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType).
   *
   */
  readonly value: any
}
/**
 *	Generated after changing an existing Custom Field on a Business Unit using the [Set CustomField](ctp:api:type:BusinessUnitSetCustomFieldAction) update action.
 *
 */
export interface BusinessUnitCustomFieldChangedMessage extends IMessage {
  readonly type: 'BusinessUnitCustomFieldChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Name of the Custom Field that changed.
   *
   *
   */
  readonly name: string
  /**
   *	[CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType) after the [Set CustomField](ctp:api:type:BusinessUnitSetCustomFieldAction) update action.
   *
   *
   */
  readonly value: any
  /**
   *	[CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType) before the [Set CustomField](ctp:api:type:BusinessUnitSetCustomFieldAction) update action.
   *
   *
   */
  readonly oldValue?: any
}
/**
 *	Generated after removing a Custom Field from a Business Unit using the [Set CustomField](ctp:api:type:BusinessUnitSetCustomFieldAction) update action.
 *
 */
export interface BusinessUnitCustomFieldRemovedMessage extends IMessage {
  readonly type: 'BusinessUnitCustomFieldRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Name of the Custom Field that was removed.
   *
   *
   */
  readonly name: string
}
/**
 *	Generated after removing a Custom Type from a Business Unit using the [Set Custom Type](ctp:api:type:BusinessUnitSetCustomTypeAction) update action.
 *
 */
export interface BusinessUnitCustomTypeRemovedMessage extends IMessage {
  readonly type: 'BusinessUnitCustomTypeRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	`id` of the [Custom Type](ctp:api:type:Type) that was removed. Absent if there was no previous Custom Type present.
   *
   *
   */
  readonly oldTypeId?: string
}
/**
 *	Generated after adding a Custom Type to a Business Unit using the [Set Custom Type](ctp:api:type:BusinessUnitSetCustomTypeAction) update action.
 *
 */
export interface BusinessUnitCustomTypeSetMessage extends IMessage {
  readonly type: 'BusinessUnitCustomTypeSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The Custom Fields that were set.
   *
   */
  readonly customFields: CustomFields
  /**
   *	`id` of the previous [Custom Type](ctp:api:type:Type). Absent if there was no previous Custom Type present.
   *
   *
   */
  readonly oldTypeId?: string
}
/**
 *	Generated after a successful [Set Default Billing Address](ctp:api:type:BusinessUnitSetDefaultBillingAddressAction) update action.
 *
 */
export interface BusinessUnitDefaultBillingAddressSetMessage extends IMessage {
  readonly type: 'BusinessUnitDefaultBillingAddressSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The address that was set as the default billing address.
   *
   *
   */
  readonly address?: Address
}
/**
 *	Generated after a successful [Set Default Shipping Address](ctp:api:type:BusinessUnitSetDefaultShippingAddressAction) update action.
 *
 */
export interface BusinessUnitDefaultShippingAddressSetMessage extends IMessage {
  readonly type: 'BusinessUnitDefaultShippingAddressSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The address that was set as the default shipping address.
   *
   *
   */
  readonly address?: Address
}
/**
 *	Generated after a successful [Delete BusinessUnit](/projects/business-units#delete-businessunit) request.
 *
 */
export interface BusinessUnitDeletedMessage extends IMessage {
  readonly type: 'BusinessUnitDeleted'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
}
/**
 *	Generated after a successful [Change Name](ctp:api:type:BusinessUnitChangeNameAction) update action.
 *
 */
export interface BusinessUnitNameChangedMessage extends IMessage {
  readonly type: 'BusinessUnitNameChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Updated name of the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly name: string
}
/**
 *	Generated after a successful [Change Parent Unit](ctp:api:type:BusinessUnitChangeParentUnitAction) update action.
 *
 */
export interface BusinessUnitParentChangedMessage extends IMessage {
  readonly type: 'BusinessUnitParentChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Parent unit of the [Business Unit](ctp:api:type:BusinessUnit) before the [Change Parent Unit](ctp:api:type:BusinessUnitChangeParentUnitAction) update action.
   *
   *
   */
  readonly oldParentUnit?: BusinessUnitKeyReference
  /**
   *	Parent unit of the [Business Unit](ctp:api:type:BusinessUnit) after the [Change Parent Unit](ctp:api:type:BusinessUnitChangeParentUnitAction) update action.
   *
   *
   */
  readonly newParentUnit?: BusinessUnitKeyReference
}
/**
 *	Generated after a successful [Add Shipping Address Identifier](ctp:api:type:BusinessUnitAddShippingAddressIdAction) update action.
 *
 */
export interface BusinessUnitShippingAddressAddedMessage extends IMessage {
  readonly type: 'BusinessUnitShippingAddressAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The address that was added to the [Business Unit](ctp:api:type:BusinessUnit) as shipping address.
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Remove Shipping Address Identifier](ctp:api:type:BusinessUnitRemoveShippingAddressIdAction) update action.
 *
 */
export interface BusinessUnitShippingAddressRemovedMessage extends IMessage {
  readonly type: 'BusinessUnitShippingAddressRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The address that was removed from shipping addresses of the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Change Status](ctp:api:type:BusinessUnitChangeStatusAction) update action.
 *
 */
export interface BusinessUnitStatusChangedMessage extends IMessage {
  readonly type: 'BusinessUnitStatusChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Updated status of the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly active: BusinessUnitStatus
}
/**
 *	Generated after a successful [Add Store](ctp:api:type:BusinessUnitAddStoreAction) update action.
 *
 */
export interface BusinessUnitStoreAddedMessage extends IMessage {
  readonly type: 'BusinessUnitStoreAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The [Store](ctp:api:type:Store) that was added to the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly store: StoreKeyReference
}
/**
 *	Generated after a successful [Set Store Mode](ctp:api:type:BusinessUnitSetStoreModeAction) update action.
 *
 */
export interface BusinessUnitStoreModeChangedMessage extends IMessage {
  readonly type: 'BusinessUnitStoreModeChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Stores](ctp:api:type:Store) of the [Business Unit](ctp:api:type:BusinessUnit) after the [Set Store Mode](ctp:api:type:BusinessUnitSetStoreModeAction) update action.
   *
   *
   */
  readonly stores: StoreKeyReference[]
  /**
   *	[BusinessUnitStoreMode](ctp:api:type:BusinessUnitStoreMode) of the Business Unit after the [Set Store Mode](ctp:api:type:BusinessUnitSetStoreModeAction) update action.
   *
   *
   */
  readonly storeMode: BusinessUnitStoreMode
  /**
   *	[Stores](ctp:api:type:Store) of the [Business Unit](ctp:api:type:BusinessUnit) before the [Set Store Mode](ctp:api:type:BusinessUnitSetStoreModeAction) update action.
   *
   *
   */
  readonly oldStores: StoreKeyReference[]
  /**
   *	[BusinessUnitStoreMode](ctp:api:type:BusinessUnitStoreMode) of the Business Unit before the [Set Store Mode](ctp:api:type:BusinessUnitSetStoreModeAction) update action.
   *
   *
   */
  readonly oldStoreMode: BusinessUnitStoreMode
}
/**
 *	Generated after a successful [Remove Store](ctp:api:type:BusinessUnitRemoveStoreAction) update action.
 *
 */
export interface BusinessUnitStoreRemovedMessage extends IMessage {
  readonly type: 'BusinessUnitStoreRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The [Store](ctp:api:type:Store) that was removed from the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly store: StoreKeyReference
}
/**
 *	Generated after a successful [Set Stores](ctp:api:type:BusinessUnitSetStoresAction) update action.
 *
 */
export interface BusinessUnitStoresSetMessage extends IMessage {
  readonly type: 'BusinessUnitStoresSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Stores](ctp:api:type:Store) of the [Business Unit](ctp:api:type:BusinessUnit) after the [Set Stores](ctp:api:type:BusinessUnitSetStoresAction) update action.
   *
   *
   */
  readonly stores: StoreKeyReference[]
}
/**
 *	Generated when a [Business Unit](ctp:api:type:BusinessUnit) `topLevelUnit` is modified due to a hierarchy change after a successful [Set Unit Type](ctp:api:type:BusinessUnitSetUnitTypeAction) or [Change Parent Unit](ctp:api:type:BusinessUnitChangeParentUnitAction) update action.
 *
 */
export interface BusinessUnitTopLevelUnitSetMessage extends IMessage {
  readonly type: 'BusinessUnitTopLevelUnitSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Top-level unit of the [Business Unit](ctp:api:type:BusinessUnit) after the [Set Unit Type](ctp:api:type:BusinessUnitSetUnitTypeAction) or [Change Parent Unit](ctp:api:type:BusinessUnitChangeParentUnitAction) update action.
   *
   *
   */
  readonly topLevelUnit: BusinessUnitKeyReference
  /**
   *	Top-level unit of the [Business Unit](ctp:api:type:BusinessUnit) before the [Set Unit Type](ctp:api:type:BusinessUnitSetUnitTypeAction) or [Change Parent Unit](ctp:api:type:BusinessUnitChangeParentUnitAction) update action.
   *
   *
   */
  readonly oldTopLevelUnit: BusinessUnitKeyReference
}
/**
 *	Generated after a successful [Set Unit Type](ctp:api:type:BusinessUnitSetUnitTypeAction) update action.
 *
 */
export interface BusinessUnitTypeSetMessage extends IMessage {
  readonly type: 'BusinessUnitTypeSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Parent unit of the [Business Unit](ctp:api:type:BusinessUnit) after the [Set Unit Type](ctp:api:type:BusinessUnitSetUnitTypeAction) update action.
   *
   *
   */
  readonly parentUnit?: BusinessUnitKeyReference
  /**
   *	Parent unit of the [Business Unit](ctp:api:type:BusinessUnit) before the [Set Unit Type](ctp:api:type:BusinessUnitSetUnitTypeAction) update action.
   *
   *
   */
  readonly oldParentUnit?: BusinessUnitKeyReference
  /**
   *	Type of the [Business Unit](ctp:api:type:BusinessUnit) after the [Set Unit Type](ctp:api:type:BusinessUnitSetUnitTypeAction) update action.
   *
   *
   */
  readonly unitType: BusinessUnitType
  /**
   *	Type of the [Business Unit](ctp:api:type:BusinessUnit) before the [Set Unit Type](ctp:api:type:BusinessUnitSetUnitTypeAction) update action.
   *
   *
   */
  readonly oldUnitType: BusinessUnitType
}
/**
 *	Generated after a successful [Create CartDiscount](ctp:api:endpoint:/{projectKey}/cart-discounts:POST) request.
 *
 */
export interface CartDiscountCreatedMessage extends IMessage {
  readonly type: 'CartDiscountCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The [Cart Discount](ctp:api:type:CartDiscount) that was created.
   *
   *
   */
  readonly cartDiscount: CartDiscount
}
/**
 *	Generated after a successful [Delete CartDiscount](ctp:api:endpoint:/{projectKey}/cart-discounts/{id}:DELETE) request.
 *
 */
export interface CartDiscountDeletedMessage extends IMessage {
  readonly type: 'CartDiscountDeleted'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
}
/**
 *	Generated after a successful [Add Store](ctp:api:type:CartDiscountAddStoreAction) update action.
 *
 */
export interface CartDiscountStoreAddedMessage extends IMessage {
  readonly type: 'CartDiscountStoreAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The [Store](ctp:api:type:Store) that was added to the [Cart Discount](ctp:api:type:CartDiscount).
   *
   *
   */
  readonly store: StoreKeyReference
}
/**
 *	Generated after a successful [Remove Store](ctp:api:type:CartDiscountRemoveStoreAction) update action.
 *
 */
export interface CartDiscountStoreRemovedMessage extends IMessage {
  readonly type: 'CartDiscountStoreRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The [Store](ctp:api:type:Store) that was removed from the [Cart Discount](ctp:api:type:CartDiscount).
   *
   *
   */
  readonly store: StoreKeyReference
}
/**
 *	Generated after a successful [Set Stores](ctp:api:type:CartDiscountSetStoresAction) update action.
 *
 */
export interface CartDiscountStoresSetMessage extends IMessage {
  readonly type: 'CartDiscountStoresSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Stores](ctp:api:type:Store) of the [Cart Discount](ctp:api:type:CartDiscount) after the [Set Stores](ctp:api:type:CartDiscountSetStoresAction) update action.
   *
   *
   */
  readonly stores: StoreKeyReference[]
}
/**
 *	Generated after a successful [Create Category](ctp:api:endpoint:/{projectKey}/categories:POST) request.
 *
 */
export interface CategoryCreatedMessage extends IMessage {
  readonly type: 'CategoryCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Category](ctp:api:type:Category) that was created.
   *
   *
   */
  readonly category: Category
}
/**
 *	Generated after a successful [Change Slug](ctp:api:type:CategoryChangeSlugAction) update action.
 *
 */
export interface CategorySlugChangedMessage extends IMessage {
  readonly type: 'CategorySlugChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The slug of the [Category](ctp:api:type:Category) after the [Change Slug](ctp:api:type:CategoryChangeSlugAction) update action.
   *
   *
   */
  readonly slug: LocalizedString
  /**
   *	The slug of the [Category](ctp:api:type:Category) before the [Change Slug](ctp:api:type:CategoryChangeSlugAction) update action.
   *
   *
   */
  readonly oldSlug?: LocalizedString
}
/**
 *	Generated after a successful [Add Address](ctp:api:type:CustomerAddAddressAction) update action.
 *
 */
export interface CustomerAddressAddedMessage extends IMessage {
  readonly type: 'CustomerAddressAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Address](ctp:api:type:Address) that was added during the [Add Address](ctp:api:type:CustomerAddAddressAction) update action.
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Change Address](ctp:api:type:CustomerChangeAddressAction) update action.
 *
 */
export interface CustomerAddressChangedMessage extends IMessage {
  readonly type: 'CustomerAddressChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Address](ctp:api:type:Address) that was set during the [Change Address](ctp:api:type:CustomerChangeAddressAction) update action.
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after adding a Custom Field to an Address of a Customer using the [Set CustomField in Address](ctp:api:type:CustomerSetAddressCustomFieldAction) update action.
 *	If a Custom Field already exists with the same name, a [CustomerAddressCustomFieldChanged](ctp:api:type:CustomerAddressCustomFieldChangedMessage) Message is generated instead.
 *
 */
export interface CustomerAddressCustomFieldAddedMessage extends IMessage {
  readonly type: 'CustomerAddressCustomFieldAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Name of the Custom Field that was added.
   *
   *
   */
  readonly name: string
  /**
   *	The added [CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType).
   *
   */
  readonly value: any
  /**
   *	`id` of the [Address](ctp:api:type:Address) to which the Custom Field was added.
   *
   *
   */
  readonly addressId?: string
}
/**
 *	Generated after changing an existing Custom Field on an Address of a Customer using the [Set CustomField in Address](ctp:api:type:CustomerSetAddressCustomFieldAction) update action.
 *
 */
export interface CustomerAddressCustomFieldChangedMessage extends IMessage {
  readonly type: 'CustomerAddressCustomFieldChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Name of the Custom Field that changed.
   *
   *
   */
  readonly name: string
  /**
   *	[CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType) after the [Set CustomField](ctp:api:type:CustomerSetAddressCustomFieldAction) update action.
   *
   *
   */
  readonly value: any
  /**
   *	[CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType) before the [Set CustomField](ctp:api:type:CustomerSetAddressCustomFieldAction) update action.
   *	When there has not been a Custom Field with the `name` on the Customer Address before, a [Customer Address Custom Field Added](ctp:api:type:CustomerAddressCustomFieldAddedMessage) Message is generated instead.
   *
   *
   */
  readonly previousValue?: any
  /**
   *	`id` of the [Address](ctp:api:type:Address) of which the Custom Field was changed.
   *
   *
   */
  readonly addressId?: string
}
/**
 *	Generated after removing a Custom Field from an Address of a Customer using the [Set CustomField in Address](ctp:api:type:CustomerSetAddressCustomFieldAction) update action.
 *
 */
export interface CustomerAddressCustomFieldRemovedMessage extends IMessage {
  readonly type: 'CustomerAddressCustomFieldRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Name of the Custom Field that was removed.
   *
   *
   */
  readonly name: string
  /**
   *	`id` of the [Address](ctp:api:type:Address) from which the Custom Field was removed.
   *
   *
   */
  readonly addressId?: string
}
/**
 *	Generated after removing a Custom Type from an Address of a Customer using the [Set Custom Type in Address](ctp:api:type:CustomerSetAddressCustomTypeAction) update action.
 *
 */
export interface CustomerAddressCustomTypeRemovedMessage extends IMessage {
  readonly type: 'CustomerAddressCustomTypeRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	`id` of the [Custom Type](ctp:api:type:Type) that was removed. Absent if there was no previous Custom Type present.
   *
   *
   */
  readonly previousTypeId?: string
  /**
   *	`id` of the [Address](ctp:api:type:Address) from which the Custom Type was removed.
   *
   *
   */
  readonly addressId?: string
}
/**
 *	Generated after adding a Custom Type to an Address of a Customer using the [Set Custom Type in Address](ctp:api:type:CustomerSetAddressCustomTypeAction) update action.
 *
 */
export interface CustomerAddressCustomTypeSetMessage extends IMessage {
  readonly type: 'CustomerAddressCustomTypeSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The Custom Fields that have been set.
   *
   */
  readonly customFields: CustomFields
  /**
   *	`id` of the previous [Custom Type](ctp:api:type:Type). Absent if there was no previous Custom Type present.
   *
   *
   */
  readonly previousTypeId?: string
  /**
   *	`id` of the [Address](ctp:api:type:Address) on which the Custom Field was set.
   *
   *
   */
  readonly addressId?: string
}
/**
 *	Generated after a successful [Remove Address](ctp:api:type:CustomerRemoveAddressAction) update action.
 *
 */
export interface CustomerAddressRemovedMessage extends IMessage {
  readonly type: 'CustomerAddressRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Address](ctp:api:type:Address) that was removed during the [Remove Address](ctp:api:type:CustomerRemoveAddressAction) update action.
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Set Company Name](ctp:api:type:CustomerSetCompanyNameAction) update action.
 *
 */
export interface CustomerCompanyNameSetMessage extends IMessage {
  readonly type: 'CustomerCompanyNameSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The `companyName` that was set during the [Set Company Name](ctp:api:type:CustomerSetCompanyNameAction) update action.
   *
   *
   */
  readonly companyName?: string
}
/**
 *	Generated after a successful [Create Customer](ctp:api:endpoint:/{projectKey}/customers:POST) request.
 *
 */
export interface CustomerCreatedMessage extends IMessage {
  readonly type: 'CustomerCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Customer](ctp:api:type:Customer) that was created.
   *
   *
   */
  readonly customer: Customer
}
/**
 *	Generated after adding a Custom Field to a Customer using the [Set CustomField](ctp:api:type:CustomerSetCustomFieldAction) update action.
 *	If a Custom Field already exists with the same name, a [CustomerCustomFieldChanged](ctp:api:type:CustomerCustomFieldChangedMessage) Message is generated instead.
 *
 */
export interface CustomerCustomFieldAddedMessage extends IMessage {
  readonly type: 'CustomerCustomFieldAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Name of the Custom Field that was added.
   *
   *
   */
  readonly name: string
  /**
   *	The added [CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType).
   *
   */
  readonly value: any
}
/**
 *	Generated after changing an existing Custom Field on a Customer using the [Set CustomField](ctp:api:type:CustomerSetCustomFieldAction) update action.
 *
 */
export interface CustomerCustomFieldChangedMessage extends IMessage {
  readonly type: 'CustomerCustomFieldChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Name of the Custom Field that changed.
   *
   *
   */
  readonly name: string
  /**
   *	[CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType) after the [Set CustomField](ctp:api:type:CustomerSetCustomFieldAction) update action.
   *
   *
   */
  readonly value: any
  /**
   *	[CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType) before the [Set CustomField](ctp:api:type:CustomerSetCustomFieldAction) update action.
   *	When there has not been a Custom Field with the `name` on the Customer before, a [Customer Custom Field Added](ctp:api:type:CustomerCustomFieldAddedMessage) Message is generated instead.
   *
   *
   */
  readonly previousValue?: any
}
/**
 *	Generated after removing a Custom Field from a Customer using the [Set CustomField](ctp:api:type:CustomerSetCustomFieldAction) update action.
 *
 */
export interface CustomerCustomFieldRemovedMessage extends IMessage {
  readonly type: 'CustomerCustomFieldRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Name of the Custom Field that was removed.
   *
   *
   */
  readonly name: string
}
/**
 *	Generated after removing a Custom Type from a Customer using the [Set Custom Type](ctp:api:type:CustomerSetCustomTypeAction) update action with empty parameters.
 *
 */
export interface CustomerCustomTypeRemovedMessage extends IMessage {
  readonly type: 'CustomerCustomTypeRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	`id` of the [Custom Type](ctp:api:type:Type) that was removed. Absent if there was no previous Custom Type present.
   *
   *
   */
  readonly previousTypeId?: string
}
/**
 *	Generated after adding a Custom Type to a Customer using the [Set Custom Type](ctp:api:type:CustomerSetCustomTypeAction) update action.
 *
 */
export interface CustomerCustomTypeSetMessage extends IMessage {
  readonly type: 'CustomerCustomTypeSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The Custom Fields that have been set.
   *
   */
  readonly customFields: CustomFields
  /**
   *	`id` of the previous [Custom Type](ctp:api:type:Type). Absent if there was no previous Custom Type present.
   *
   *
   */
  readonly previousTypeId?: string
}
/**
 *	Generated after a successful [Set Date of Birth](ctp:api:type:CustomerSetDateOfBirthAction) update action.
 *
 */
export interface CustomerDateOfBirthSetMessage extends IMessage {
  readonly type: 'CustomerDateOfBirthSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The `dateOfBirth` that was set during the [Set Date of Birth](ctp:api:type:CustomerSetDateOfBirthAction) update action.
   *
   *
   */
  readonly dateOfBirth?: string
}
/**
 *	Generated after a successful [Delete Customer](/../api/projects/customers#delete-customer) request.
 *
 */
export interface CustomerDeletedMessage extends IMessage {
  readonly type: 'CustomerDeleted'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
}
/**
 *	Generated after a successful [Change Email](ctp:api:type:CustomerChangeEmailAction) update action.
 *
 */
export interface CustomerEmailChangedMessage extends IMessage {
  readonly type: 'CustomerEmailChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The `email` that was set during the [Change Email](ctp:api:type:CustomerChangeEmailAction) update action.
   *
   *
   */
  readonly email: string
}
/**
 *	Generated after a successful [Create email token for Customer](ctp:api:endpoint:/{projectKey}/customers/email-token:POST) or [Create email token for Customer in Store](ctp:api:endpoint:/{projectKey}/in-store/key={storeKey}/customers/email-token:POST) request. The `resource` property of the Message is a [CustomerEmailTokenReference](ctp:api:type:CustomerEmailTokenReference).
 *
 */
export interface CustomerEmailTokenCreatedMessage extends IMessage {
  readonly type: 'CustomerEmailTokenCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the Customer.
   *
   *
   */
  readonly customerId: string
  /**
   *	Date and time (UTC) the email token expires.
   *
   *
   */
  readonly expiresAt: string
  /**
   *	Value of the token, present only if the token's validity is 60 minutes or less.
   *
   *
   */
  readonly value?: string
  /**
   *	If `true`, all email tokens issued previously for the Customer are invalidated.
   *
   *
   */
  readonly invalidateOlderTokens: boolean
}
/**
 *	Generated after a successful [Verify Customer's Email](ctp:api:endpoint:/{projectKey}/customers/email/confirm:POST) request.
 *
 */
export interface CustomerEmailVerifiedMessage extends IMessage {
  readonly type: 'CustomerEmailVerified'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
}
/**
 *	Generated after a successful [Set First Name](ctp:api:type:CustomerSetFirstNameAction) update action.
 *
 */
export interface CustomerFirstNameSetMessage extends IMessage {
  readonly type: 'CustomerFirstNameSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The `firstName` that was set during the [Set First Name](ctp:api:type:CustomerSetFirstNameAction) update action.
   *
   *
   */
  readonly firstName?: string
}
/**
 *	Generated after a successful [Add CustomerGroupAssignment](ctp:api:type:CustomerAddCustomerGroupAssignmentAction) update action.
 *
 */
export interface CustomerGroupAssignmentAddedMessage extends IMessage {
  readonly type: 'CustomerGroupAssignmentAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Customer Group assigned to the Customer during the [Add CustomerGroupAssignment](ctp:api:type:CustomerAddCustomerGroupAssignmentAction) update action.
   *
   *
   */
  readonly customerGroupAssignment: CustomerGroupAssignment
}
/**
 *	Generated after a successful [Remove CustomerGroupAssignment](ctp:api:type:CustomerRemoveCustomerGroupAssignmentAction) update action.
 *
 */
export interface CustomerGroupAssignmentRemovedMessage extends IMessage {
  readonly type: 'CustomerGroupAssignmentRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Customer Group removed during the [Remove CustomerGroupAssignment](ctp:api:type:CustomerRemoveCustomerGroupAssignmentAction) update action.
   *
   *
   */
  readonly customerGroupAssignment: CustomerGroupAssignment
}
/**
 *	Generated after a successful [Set CustomerGroupAssignments](ctp:api:type:CustomerSetCustomerGroupAssignmentsAction) update action.
 *
 */
export interface CustomerGroupAssignmentsSetMessage extends IMessage {
  readonly type: 'CustomerGroupAssignmentsSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Customer Groups assigned to the Customer during the [Set CustomerGroupAssignments](ctp:api:type:CustomerSetCustomerGroupAssignmentsAction) update action.
   *
   *
   */
  readonly customerGroupAssignments?: CustomerGroupAssignment[]
}
/**
 *	Generated after adding a Custom Field to a Customer Group using the [Set CustomField](ctp:api:type:CustomerGroupSetCustomFieldAction) update action.
 *	If a Custom Field already exists with the same name, a [CustomerGroupCustomFieldChanged](ctp:api:type:CustomerGroupCustomFieldChangedMessage) Message is generated instead.
 *
 */
export interface CustomerGroupCustomFieldAddedMessage extends IMessage {
  readonly type: 'CustomerGroupCustomFieldAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Name of the Custom Field that was added.
   *
   *
   */
  readonly name: string
  /**
   *	The added [CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType).
   *
   */
  readonly value: any
}
/**
 *	Generated after changing an existing Custom Field on a Customer Group using the [Set CustomField](ctp:api:type:CustomerGroupSetCustomFieldAction) update action.
 *
 */
export interface CustomerGroupCustomFieldChangedMessage extends IMessage {
  readonly type: 'CustomerGroupCustomFieldChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Name of the Custom Field that changed.
   *
   *
   */
  readonly name: string
  /**
   *	[CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType) after the [Set CustomField](ctp:api:type:CustomerGroupSetCustomFieldAction) update action.
   *
   *
   */
  readonly value: any
  /**
   *	[CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType) before the [Set CustomField](ctp:api:type:CustomerGroupSetCustomFieldAction) update action.
   *
   *
   */
  readonly oldValue?: any
}
/**
 *	Generated after removing a Custom Field from a Customer Group using the [Set CustomField](ctp:api:type:CustomerGroupSetCustomFieldAction) update action.
 *
 */
export interface CustomerGroupCustomFieldRemovedMessage extends IMessage {
  readonly type: 'CustomerGroupCustomFieldRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Name of the Custom Field that was removed.
   *
   *
   */
  readonly name: string
}
/**
 *	Generated after removing a Custom Type from a Customer Group using the [Set Custom Type](ctp:api:type:CustomerGroupSetCustomTypeAction) update action with empty parameters.
 *
 */
export interface CustomerGroupCustomTypeRemovedMessage extends IMessage {
  readonly type: 'CustomerGroupCustomTypeRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	`id` of the [Custom Type](ctp:api:type:Type) that was removed. Absent if there was no previous Custom Type present.
   *
   *
   */
  readonly oldTypeId?: string
}
/**
 *	Generated after adding a Custom Type to a Customer Group using the [Set Custom Type](ctp:api:type:CustomerGroupSetCustomTypeAction) update action.
 *
 */
export interface CustomerGroupCustomTypeSetMessage extends IMessage {
  readonly type: 'CustomerGroupCustomTypeSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The Custom Fields that have been set.
   *
   */
  readonly customFields: CustomFields
  /**
   *	`id` of the previous [Custom Type](ctp:api:type:Type). Absent if there was no previous Custom Type present.
   *
   *
   */
  readonly oldTypeId?: string
}
/**
 *	Generated after a successful [Set Customer Group](ctp:api:type:CustomerSetCustomerGroupAction) update action.
 *
 */
export interface CustomerGroupSetMessage extends IMessage {
  readonly type: 'CustomerGroupSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Customer Group](ctp:api:type:CustomerGroup) that was set during the [Set Customer Group](ctp:api:type:CustomerSetCustomerGroupAction) update action.
   *
   *
   */
  readonly customerGroup?: CustomerGroupReference
}
/**
 *	Generated after a successful [Set Last Name](ctp:api:type:CustomerSetLastNameAction) update action.
 *
 */
export interface CustomerLastNameSetMessage extends IMessage {
  readonly type: 'CustomerLastNameSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The `lastName` that was set during the [Set Last Name](ctp:api:type:CustomerSetLastNameAction) update action.
   *
   *
   */
  readonly lastName?: string
}
/**
 *	Generated after a successful [Create password reset token for Customer](ctp:api:endpoint:/{projectKey}/customers/password-token:POST) or [Create password reset token for Customer in Store](ctp:api:endpoint:/{projectKey}/in-store/key={storeKey}/customers/password-token:POST) request. The `resource` property of the Message is a [CustomerPasswordTokenReference](ctp:api:type:CustomerPasswordTokenReference).
 *
 */
export interface CustomerPasswordTokenCreatedMessage extends IMessage {
  readonly type: 'CustomerPasswordTokenCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the Customer.
   *
   *
   */
  readonly customerId: string
  /**
   *	Date and time (UTC) the password token expires.
   *
   *
   */
  readonly expiresAt: string
  /**
   *	Value of the token, present only if the token's validity is 60 minutes or less.
   *
   *
   */
  readonly value?: string
  /**
   *	If `true`, all password tokens issued previously for the Customer are invalidated.
   *
   *
   */
  readonly invalidateOlderTokens: boolean
}
/**
 *	Generated after a successful [Reset Customer's Password](ctp:api:endpoint:/{projectKey}/customers/password/reset:POST), [Reset Customer's Password in a Store](ctp:api:endpoint:/{projectKey}/in-store/key={storeKey}/customers/password/reset:POST), [Change Customer's Password](ctp:api:endpoint:/{projectKey}/customers/password:POST), or [Change Customer's Password in a Store](ctp:api:endpoint:/{projectKey}/in-store/key={storeKey}/customers/password:POST) request. This Message is also produced during equivalent requests to the [My Customer Profile](/../api/projects/me-profile) endpoint.
 *
 */
export interface CustomerPasswordUpdatedMessage extends IMessage {
  readonly type: 'CustomerPasswordUpdated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Whether the Customer's password was updated during the [Reset password](ctp:api:endpoint:/{projectKey}/customers/password/reset:POST) or [Change password](ctp:api:endpoint:/{projectKey}/customers/password:POST) flow.
   *
   *
   */
  readonly reset: boolean
}
/**
 *	Generated after a successful [Set Title](ctp:api:type:CustomerSetTitleAction) update action.
 *
 */
export interface CustomerTitleSetMessage extends IMessage {
  readonly type: 'CustomerTitleSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The `title` that was set during the [Set Title](ctp:api:type:CustomerSetTitleAction) update action.
   *
   *
   */
  readonly title?: string
}
/**
 *	Generated after a successful [Create DiscountCode](ctp:api:endpoint:/{projectKey}/discount-codes:POST) request.
 *
 */
export interface DiscountCodeCreatedMessage extends IMessage {
  readonly type: 'DiscountCodeCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The [Discount Code](ctp:api:type:DiscountCode) that was created.
   *
   *
   */
  readonly discountCode: DiscountCode
}
/**
 *	Generated after a successful [Delete DiscountCode](ctp:api:endpoint:/{projectKey}/discount-codes/{id}:DELETE) request.
 *
 */
export interface DiscountCodeDeletedMessage extends IMessage {
  readonly type: 'DiscountCodeDeleted'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
}
/**
 *	Generated after a successful [Set Key](ctp:api:type:DiscountCodeSetKeyAction) update action.
 *
 */
export interface DiscountCodeKeySetMessage extends IMessage {
  readonly type: 'DiscountCodeKeySet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	`key` value of the [Discount Code](ctp:api:type:DiscountCode) after the [Set Key](ctp:api:type:DiscountCodeSetKeyAction) update action.
   *
   *
   */
  readonly key?: string
  /**
   *	`key` value of the [Discount Code](ctp:api:type:DiscountCode) before the [Set Key](ctp:api:type:DiscountCodeSetKeyAction) update action.
   *
   *
   */
  readonly oldKey?: string
}
/**
 *	Generated after a successful [Create DiscountGroup](ctp:api:endpoint:/{projectKey}/discount-groups:POST) request.
 *
 */
export interface DiscountGroupCreatedMessage extends IMessage {
  readonly type: 'DiscountGroupCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The DiscountGroup that was created.
   *
   *
   */
  readonly discountGroup: DiscountGroup
}
/**
 *	Generated after a successful [Delete DiscountGroup](ctp:api:endpoint:/{projectKey}/discount-groups/{id}:DELETE) request.
 *
 */
export interface DiscountGroupDeletedMessage extends IMessage {
  readonly type: 'DiscountGroupDeleted'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
}
/**
 *	Generated after a successful [Set Key](ctp:api:type:DiscountGroupSetKeyAction) update action.
 *
 */
export interface DiscountGroupKeySetMessage extends IMessage {
  readonly type: 'DiscountGroupKeySet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	`key` value of the [DiscountGroup](ctp:api:type:DiscountGroup) after the [Set Key](ctp:api:type:DiscountGroupSetKeyAction) update action.
   *
   *
   */
  readonly key?: string
  /**
   *	`key` value of the [DiscountGroup](ctp:api:type:DiscountGroup) before the [Set Key](ctp:api:type:DiscountGroupSetKeyAction) update action.
   *
   *
   */
  readonly oldKey?: string
}
/**
 *	Generated after a successful [Set SortOrder](ctp:api:type:DiscountGroupSetSortOrderAction) update action.
 *
 */
export interface DiscountGroupSortOrderSetMessage extends IMessage {
  readonly type: 'DiscountGroupSortOrderSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	`sortOrder` value of the [DiscountGroup](ctp:api:type:DiscountGroup) after the [Set SortOrder](ctp:api:type:DiscountGroupSetSortOrderAction) update action.
   *
   *
   */
  readonly sortOrder?: string
  /**
   *	`sortOrder` value of the [DiscountGroup](ctp:api:type:DiscountGroup) before the [Set SortOrder](ctp:api:type:DiscountGroupSetSortOrderAction) update action.
   *
   *
   */
  readonly oldSortOrder?: string
}
/**
 *	Generated after a successful [Create InventoryEntry](ctp:api:endpoint:/{projectKey}/inventory:POST) request.
 *
 */
export interface InventoryEntryCreatedMessage extends IMessage {
  readonly type: 'InventoryEntryCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[InventoryEntry](ctp:api:type:InventoryEntry) that was created.
   *
   *
   */
  readonly inventoryEntry: InventoryEntry
}
/**
 *	Generated after a successful [Delete InventoryEntry](/../api/projects/inventory#delete-inventoryentry) request.
 *
 */
export interface InventoryEntryDeletedMessage extends IMessage {
  readonly type: 'InventoryEntryDeleted'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The `sku` of the [InventoryEntry](ctp:api:type:InventoryEntry) that was deleted.
   *
   *
   */
  readonly sku: string
  /**
   *	[Reference](ctp:api:type:Reference) to the [Channel](ctp:api:type:Channel) where the [InventoryEntry](ctp:api:type:InventoryEntry) was deleted.
   *
   *
   */
  readonly supplyChannel?: ChannelReference
}
/**
 *	Generated after a successful [Add Quantity](ctp:api:type:InventoryEntryAddQuantityAction), [Remove Quantity](ctp:api:type:InventoryEntryRemoveQuantityAction) or [Change Quantity](ctp:api:type:InventoryEntryChangeQuantityAction) update action.
 *	Inventory changes as a result of [Order creation](ctp:api:endpoint:/{projectKey}/orders:POST) do not trigger this message.
 *
 */
export interface InventoryEntryQuantitySetMessage extends IMessage {
  readonly type: 'InventoryEntryQuantitySet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Quantity on stock for the [InventoryEntry](ctp:api:type:InventoryEntry) before the quantity was updated.
   *
   *
   */
  readonly oldQuantityOnStock: number
  /**
   *	Quantity on stock for the [InventoryEntry](ctp:api:type:InventoryEntry) after the quantity was updated.
   *
   *
   */
  readonly newQuantityOnStock: number
  /**
   *	Available quantity for the [InventoryEntry](ctp:api:type:InventoryEntry) before the quantity was updated.
   *
   *
   */
  readonly oldAvailableQuantity: number
  /**
   *	Available quantity for the [InventoryEntry](ctp:api:type:InventoryEntry) after the quantity was updated.
   *
   *
   */
  readonly newAvailableQuantity: number
  /**
   *	[Reference](ctp:api:type:Reference) to the [Channel](ctp:api:type:Channel) where the [InventoryEntry](ctp:api:type:InventoryEntry) quantity was set.
   *
   *
   */
  readonly supplyChannel?: ChannelReference
}
/**
 *	[PagedQueryResult](/../api/general-concepts#pagedqueryresult) with `results` containing an array of [Message](ctp:api:type:Message).
 *
 */
export interface MessagePagedQueryResponse {
  /**
   *	Number of [results requested](/../api/general-concepts#limit).
   *
   *
   */
  readonly limit: number
  /**
   *	Actual number of results returned.
   *
   *
   */
  readonly count: number
  /**
   *	Total number of results matching the query.
   *	This number is an estimation that is not [strongly consistent](/../api/general-concepts#strong-consistency).
   *	This field is returned by default.
   *	For improved performance, calculating this field can be deactivated by using the query parameter `withTotal=false`.
   *	When the results are filtered with a [Query Predicate](/../api/predicates/query), `total` is subject to a [limit](/../api/limits#queries).
   *
   *
   */
  readonly total?: number
  /**
   *	Number of [elements skipped](/../api/general-concepts#offset).
   *
   *
   */
  readonly offset: number
  /**
   *	[Messages](ctp:api:type:Message) matching the query.
   *
   *
   */
  readonly results: Message[]
}
/**
 *	Holds the configuration for the [Messages Query](/../api/projects/messages) feature for the Project.
 */
export interface MessagesConfiguration {
  /**
   *	When `true`, the [Messages Query](/../api/projects/messages) feature is active.
   *
   *
   */
  readonly enabled: boolean
  /**
   *	Specifies the number of days each Message should be available via the [Messages Query](/../api/projects/messages) API.
   *	For Messages older than the specified period, it is not guaranteed that they are still accessible via the API.
   *	This field may not be present on Projects created before 8 October 2018.
   *
   *
   */
  readonly deleteDaysAfterCreation?: number
}
/**
 *	Defines the configuration for the [Messages Query](/../api/projects/messages) feature for the Project.
 */
export interface MessagesConfigurationDraft {
  /**
   *	Setting to `true` activates the [Messages Query](/../api/projects/messages) feature.
   *
   *
   */
  readonly enabled: boolean
  /**
   *	Specifies the number of days each Message should be available via the [Messages Query](/../api/projects/messages) API. For Messages older than the specified period, it is not guaranteed that they are still accessible via the API.
   *
   *
   */
  readonly deleteDaysAfterCreation: number
}
export type OrderMessage =
  | CustomLineItemStateTransitionMessage
  | DeliveryAddedMessage
  | DeliveryAddressSetMessage
  | DeliveryCustomFieldAddedMessage
  | DeliveryCustomFieldChangedMessage
  | DeliveryCustomFieldRemovedMessage
  | DeliveryCustomTypeRemovedMessage
  | DeliveryCustomTypeSetMessage
  | DeliveryItemsUpdatedMessage
  | DeliveryRemovedMessage
  | LineItemStateTransitionMessage
  | OrderBillingAddressSetMessage
  | OrderBusinessUnitSetMessage
  | OrderCreatedMessage
  | OrderCustomFieldAddedMessage
  | OrderCustomFieldChangedMessage
  | OrderCustomFieldRemovedMessage
  | OrderCustomLineItemAddedMessage
  | OrderCustomLineItemDiscountSetMessage
  | OrderCustomLineItemQuantityChangedMessage
  | OrderCustomLineItemRemovedMessage
  | OrderCustomTypeRemovedMessage
  | OrderCustomTypeSetMessage
  | OrderCustomerEmailSetMessage
  | OrderCustomerGroupSetMessage
  | OrderCustomerSetMessage
  | OrderDeletedMessage
  | OrderDiscountCodeAddedMessage
  | OrderDiscountCodeRemovedMessage
  | OrderDiscountCodeStateSetMessage
  | OrderEditAppliedMessage
  | OrderImportedMessage
  | OrderLineItemAddedMessage
  | OrderLineItemDiscountSetMessage
  | OrderLineItemDistributionChannelSetMessage
  | OrderLineItemRemovedMessage
  | OrderPaymentStateChangedMessage
  | OrderPurchaseOrderNumberSetMessage
  | OrderReturnShipmentStateChangedMessage
  | OrderShipmentStateChangedMessage
  | OrderShippingAddressSetMessage
  | OrderShippingInfoSetMessage
  | OrderShippingRateInputSetMessage
  | OrderStateChangedMessage
  | OrderStateTransitionMessage
  | OrderStoreSetMessage
  | ParcelAddedToDeliveryMessage
  | ParcelItemsUpdatedMessage
  | ParcelMeasurementsUpdatedMessage
  | ParcelRemovedFromDeliveryMessage
  | ParcelTrackingDataUpdatedMessage
  | ReturnInfoAddedMessage
  | ReturnInfoSetMessage
export interface IOrderMessage {
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	[Message Type](/../api/projects/messages#message-types) of the Message.
   *
   *
   */
  readonly type: string
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
}
/**
 *	Generated after a successful [Transition CustomLineItem State](ctp:api:type:OrderTransitionCustomLineItemStateAction) update action.
 *
 */
export interface CustomLineItemStateTransitionMessage extends IOrderMessage {
  readonly type: 'CustomLineItemStateTransition'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Custom Line Item](ctp:api:type:CustomLineItem).
   *
   *
   */
  readonly customLineItemId: string
  /**
   *	User-defined unique identifier of the [Custom Line Item](ctp:api:type:CustomLineItem).
   *
   *
   */
  readonly customLineItemKey?: string
  /**
   *	Date and time (UTC) the transition of the [Custom Line Item](ctp:api:type:CustomLineItem) [State](ctp:api:type:State) was performed.
   *
   *
   */
  readonly transitionDate: string
  /**
   *	Number of [Custom Line Items](ctp:api:type:CustomLineItem) for which the [State](ctp:api:type:State) was transitioned.
   *
   *
   */
  readonly quantity: number
  /**
   *	[State](ctp:api:type:State) the [Custom Line Item](ctp:api:type:CustomLineItem) was transitioned from.
   *
   *
   */
  readonly fromState: StateReference
  /**
   *	[State](ctp:api:type:State) the [Custom Line Item](ctp:api:type:CustomLineItem) was transitioned to.
   *
   *
   */
  readonly toState: StateReference
}
/**
 *	Generated after a successful [Add Delivery](ctp:api:type:OrderAddDeliveryAction) update action.
 *
 */
export interface DeliveryAddedMessage extends IOrderMessage {
  readonly type: 'DeliveryAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Delivery](ctp:api:type:Delivery) that was added to the [Order](ctp:api:type:Order). The [Delivery](ctp:api:type:Delivery) in the Message body does not contain [Parcels](ctp:api:type:Parcel) if those were part of the initial [Add Delivery](ctp:api:type:OrderAddDeliveryAction) update action. In that case, the update action produces an additional [Parcel Added To Delivery](ctp:api:type:ParcelAddedToDeliveryMessage) Message containing information about the [Parcels](ctp:api:type:Parcel).
   *
   *
   */
  readonly delivery: Delivery
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multiple` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Set Delivery Address](ctp:api:type:OrderSetDeliveryAddressAction) update action.
 *
 */
export interface DeliveryAddressSetMessage extends IOrderMessage {
  readonly type: 'DeliveryAddressSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
  /**
   *	[Address](ctp:api:type:Address) after the [Set Delivery Address](ctp:api:type:OrderSetDeliveryAddressAction) update action.
   *
   *
   */
  readonly address?: Address
  /**
   *	[Address](ctp:api:type:Address) before the [Set Delivery Address](ctp:api:type:OrderSetDeliveryAddressAction) update action.
   *
   *
   */
  readonly oldAddress?: Address
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multiple` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after adding a Custom Field to a Delivery using the [Set CustomField](ctp:api:type:OrderSetDeliveryCustomFieldAction) update action.
 *
 */
export interface DeliveryCustomFieldAddedMessage extends IOrderMessage {
  readonly type: 'DeliveryCustomFieldAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Name of the Custom Field that was added.
   *
   *
   */
  readonly name: string
  /**
   *	The added [CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType).
   *
   */
  readonly value: any
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
}
/**
 *	Generated when an existing Custom Field on a Delivery has been changed using the [Set CustomField](ctp:api:type:OrderSetDeliveryCustomFieldAction) update action.
 *
 */
export interface DeliveryCustomFieldChangedMessage extends IOrderMessage {
  readonly type: 'DeliveryCustomFieldChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Name of the Custom Field that changed.
   *
   *
   */
  readonly name: string
  /**
   *	[CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType) after the [Set CustomField](ctp:api:type:OrderSetDeliveryCustomFieldAction) update action.
   *
   *
   */
  readonly value: any
  /**
   *	[CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType) before the [Set CustomField](ctp:api:type:OrderSetDeliveryCustomFieldAction) update action.
   *	When there has not been a Custom Field with the `name` on the Delivery before, a [Delivery Custom Field Added](ctp:api:type:DeliveryCustomFieldAddedMessage) Message is generated instead.
   *
   *
   */
  readonly previousValue?: any
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
}
/**
 *	Generated when a Custom Field has been removed from the Delivery using the [Set CustomField](ctp:api:type:OrderSetDeliveryCustomFieldAction) update action.
 *
 */
export interface DeliveryCustomFieldRemovedMessage extends IOrderMessage {
  readonly type: 'DeliveryCustomFieldRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Name of the Custom Field that was removed.
   *
   *
   */
  readonly name: string
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
}
/**
 *	Generated after removing a Custom Type from a Delivery using the [Set Custom Type](ctp:api:type:OrderSetDeliveryCustomTypeAction) update action with empty parameters.
 *
 */
export interface DeliveryCustomTypeRemovedMessage extends IOrderMessage {
  readonly type: 'DeliveryCustomTypeRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	`id` of the [Custom Type](ctp:api:type:Type) that was removed. Absent if there was no previous Custom Type present.
   *
   *
   */
  readonly previousTypeId?: string
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
}
/**
 *	Generated after adding a Custom Type to a Delivery using the [Set Custom Type](ctp:api:type:OrderSetDeliveryCustomTypeAction) update action.
 *
 */
export interface DeliveryCustomTypeSetMessage extends IOrderMessage {
  readonly type: 'DeliveryCustomTypeSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The Custom Fields that have been set.
   *
   */
  readonly customFields: CustomFields
  /**
   *	`id` of the previous [Custom Type](ctp:api:type:Type). Absent if there was no previous Custom Type present.
   *
   *
   */
  readonly previousTypeId?: string
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
}
/**
 *	Generated after a successful [Set Delivery Items](ctp:api:type:OrderSetDeliveryItemsAction) update action.
 *
 */
export interface DeliveryItemsUpdatedMessage extends IOrderMessage {
  readonly type: 'DeliveryItemsUpdated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
  /**
   *	[Delivery Items](ctp:api:type:DeliveryItem) after the [Set Delivery Items](ctp:api:type:OrderSetDeliveryItemsAction) update action.
   *
   *
   */
  readonly items: DeliveryItem[]
  /**
   *	[Delivery Items](ctp:api:type:DeliveryItem) before the [Set Delivery Items](ctp:api:type:OrderSetDeliveryItemsAction) update action.
   *
   *
   */
  readonly oldItems: DeliveryItem[]
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multiple` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Remove Delivery](ctp:api:type:OrderRemoveDeliveryAction) update action.
 *
 */
export interface DeliveryRemovedMessage extends IOrderMessage {
  readonly type: 'DeliveryRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The [Delivery](ctp:api:type:Delivery) that was removed from the [Order](ctp:api:type:Order).
   *
   *
   */
  readonly delivery: Delivery
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multiple` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Transition LineItem State](ctp:api:type:OrderTransitionLineItemStateAction) update action.
 *
 */
export interface LineItemStateTransitionMessage extends IOrderMessage {
  readonly type: 'LineItemStateTransition'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Line Item](ctp:api:type:LineItem).
   *
   *
   */
  readonly lineItemId: string
  /**
   *	User-defined unique identifier of the LineItem.
   *
   *
   */
  readonly lineItemKey?: string
  /**
   *	Date and time (UTC) the transition of the [Line Item](ctp:api:type:LineItem) [State](ctp:api:type:State) was performed.
   *
   *
   */
  readonly transitionDate: string
  /**
   *	Number of [Line Items](ctp:api:type:LineItem) for which the [State](ctp:api:type:State) was transitioned.
   *
   *
   */
  readonly quantity: number
  /**
   *	[State](ctp:api:type:State) the [Line Item](ctp:api:type:LineItem) was transitioned from.
   *
   *
   */
  readonly fromState: StateReference
  /**
   *	[State](ctp:api:type:State) the [Line Item](ctp:api:type:LineItem) was transitioned to.
   *
   *
   */
  readonly toState: StateReference
}
/**
 *	Generated after a successful [Set Billing Address](ctp:api:type:OrderSetBillingAddressAction) update action.
 *
 */
export interface OrderBillingAddressSetMessage extends IOrderMessage {
  readonly type: 'OrderBillingAddressSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Billing address on the Order after the [Set Billing Address](ctp:api:type:OrderSetBillingAddressAction) update action.
   *
   *
   */
  readonly address?: Address
  /**
   *	Billing address on the Order before the [Set Billing Address](ctp:api:type:OrderSetBillingAddressAction) update action.
   *
   *
   */
  readonly oldAddress?: Address
}
/**
 *	Generated after a successful [Set Business Unit](ctp:api:type:OrderSetBusinessUnitAction) update action on Orders or [Set Business Unit](ctp:api:type:StagedOrderSetBusinessUnitAction) update action on Order Edits.
 *
 */
export interface OrderBusinessUnitSetMessage extends IOrderMessage {
  readonly type: 'OrderBusinessUnitSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[BusinessUnit](ctp:api:type:BusinessUnit) on the [Order](ctp:api:type:Order) after the [Set Business Unit](ctp:api:type:OrderSetBusinessUnitAction) update action on Orders or [Set Business Unit](ctp:api:type:StagedOrderSetBusinessUnitAction) update action on Order Edits.
   *
   *
   */
  readonly businessUnit?: BusinessUnitKeyReference
  /**
   *	[BusinessUnit](ctp:api:type:BusinessUnit) on the [Order](ctp:api:type:Order) before the [Set Business Unit](ctp:api:type:OrderSetBusinessUnitAction) update action on Orders or [Set Business Unit](ctp:api:type:StagedOrderSetBusinessUnitAction) update action on Order Edits.
   *
   *
   */
  readonly oldbusinessUnit?: BusinessUnitKeyReference
}
/**
 *	Generated after a successful [Create Order](ctp:api:endpoint:/{projectKey}/orders:POST) request.
 *
 */
export interface OrderCreatedMessage extends IOrderMessage {
  readonly type: 'OrderCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Order](ctp:api:type:Order) that was created.
   *
   *
   */
  readonly order: _Order
}
/**
 *	Generated after adding a Custom Field using the [Set CustomField](ctp:api:type:OrderSetCustomFieldAction).
 *
 */
export interface OrderCustomFieldAddedMessage extends IOrderMessage {
  readonly type: 'OrderCustomFieldAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Name of the Custom Field that was added.
   *
   *
   */
  readonly name: string
  /**
   *	The added [CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType).
   *
   */
  readonly value: any
}
/**
 *	Generated when an existing Custom Field has been changed using the [Set CustomField](ctp:api:type:OrderSetCustomFieldAction) action.
 *
 */
export interface OrderCustomFieldChangedMessage extends IOrderMessage {
  readonly type: 'OrderCustomFieldChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Name of the Custom Field that changed.
   *
   *
   */
  readonly name: string
  /**
   *	[CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType) after the [Set CustomField](ctp:api:type:OrderSetCustomFieldAction) update action.
   *
   *
   */
  readonly value: any
  /**
   *	[CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType) before the [Set CustomField](ctp:api:type:OrderSetCustomFieldAction) update action.
   *	When there has not been a Custom Field with the `name` on the Order before, an [Order Custom Field Added](ctp:api:type:OrderCustomFieldAddedMessage) Message is generated instead.
   *
   *
   */
  readonly previousValue?: any
}
/**
 *	Generated when a Custom Field has been removed from the Order using the [Set CustomField](ctp:api:type:OrderSetCustomFieldAction) action.
 *
 */
export interface OrderCustomFieldRemovedMessage extends IOrderMessage {
  readonly type: 'OrderCustomFieldRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Name of the Custom Field that was removed.
   *
   *
   */
  readonly name: string
}
/**
 *	Generated after a successful [Add CustomLineItem](ctp:api:type:StagedOrderAddCustomLineItemAction) update action.
 *
 */
export interface OrderCustomLineItemAddedMessage extends IOrderMessage {
  readonly type: 'OrderCustomLineItemAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Custom Line Item](ctp:api:type:CustomLineItem) that was added to the [Order](ctp:api:type:Order).
   *
   *
   */
  readonly customLineItem: CustomLineItem
}
/**
 *	Generated after a successful recalculation of a Discount on a [Custom Line Item](ctp:api:type:CustomLineItem).
 *
 */
export interface OrderCustomLineItemDiscountSetMessage extends IOrderMessage {
  readonly type: 'OrderCustomLineItemDiscountSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier for the [Custom Line Item](ctp:api:type:CustomLineItem).
   *
   *
   */
  readonly customLineItemId: string
  /**
   *	User-defined unique identifier of the [Custom Line Item](ctp:api:type:CustomLineItem).
   *
   *
   */
  readonly customLineItemKey?: string
  /**
   *	Array of [DiscountedLineItemPriceForQuantity](ctp:api:type:DiscountedLineItemPriceForQuantity) after the Discount recalculation.
   *
   *
   */
  readonly discountedPricePerQuantity: DiscountedLineItemPriceForQuantity[]
  /**
   *	[TaxedItemPrice](ctp:api:type:TaxedItemPrice) of the [Custom Line Item](ctp:api:type:CustomLineItem) after the Discount recalculation.
   *
   *
   */
  readonly taxedPrice?: TaxedItemPrice
}
/**
 *	Generated after a successful [Change CustomLineItem Quantity](ctp:api:type:StagedOrderChangeCustomLineItemQuantityAction) update action.
 *
 */
export interface OrderCustomLineItemQuantityChangedMessage
  extends IOrderMessage {
  readonly type: 'OrderCustomLineItemQuantityChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Custom Line Item](ctp:api:type:CustomLineItem).
   *
   *
   */
  readonly customLineItemId: string
  /**
   *	User-defined unique identifier of the [Custom Line Item](ctp:api:type:CustomLineItem).
   *
   *
   */
  readonly customLineItemKey?: string
  /**
   *	[Custom Line Item](ctp:api:type:CustomLineItem) quantity after the [Change Custom Line Item Quantity](ctp:api:type:StagedOrderChangeCustomLineItemQuantityAction) update action.
   *
   *
   */
  readonly quantity: number
  /**
   *	[Custom Line Item](ctp:api:type:CustomLineItem) quantity before the [Change Custom Line Item Quantity](ctp:api:type:StagedOrderChangeCustomLineItemQuantityAction) update action.
   *
   *
   */
  readonly oldQuantity: number
}
/**
 *	Generated after a successful [Remove CustomLineItem](ctp:api:type:StagedOrderRemoveCustomLineItemAction) update action.
 *
 */
export interface OrderCustomLineItemRemovedMessage extends IOrderMessage {
  readonly type: 'OrderCustomLineItemRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Custom Line Item](ctp:api:type:CustomLineItem).
   *
   *
   */
  readonly customLineItemId: string
  /**
   *	User-defined unique identifier of the [Custom Line Item](ctp:api:type:CustomLineItem).
   *
   *
   */
  readonly customLineItemKey?: string
  /**
   *	[Custom Line Item](ctp:api:type:CustomLineItem) that was removed from the [Order](ctp:api:type:Order).
   *
   *
   */
  readonly customLineItem: CustomLineItem
}
/**
 *	Generated after a successful [Set Custom Type](ctp:api:type:OrderSetCustomTypeAction) with empty parameters.
 *
 */
export interface OrderCustomTypeRemovedMessage extends IOrderMessage {
  readonly type: 'OrderCustomTypeRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	`id` of the [Custom Type](ctp:api:type:Type) that was removed. Absent if there was no previous Custom Type present.
   *
   *
   */
  readonly previousTypeId?: string
}
/**
 *	Generated after a successful [Set Custom Type](ctp:api:type:OrderSetCustomTypeAction).
 *
 */
export interface OrderCustomTypeSetMessage extends IOrderMessage {
  readonly type: 'OrderCustomTypeSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The Custom Fields that have been set.
   *
   */
  readonly customFields: CustomFields
  /**
   *	`id` of the previous [Custom Type](ctp:api:type:Type). Absent if there was no previous Custom Type present.
   *
   *
   */
  readonly previousTypeId?: string
}
/**
 *	Generated after a successful [Set Customer Email](ctp:api:type:OrderSetCustomerEmailAction) update action.
 *
 */
export interface OrderCustomerEmailSetMessage extends IOrderMessage {
  readonly type: 'OrderCustomerEmailSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Email address on the [Order](ctp:api:type:Order) after the [Set Customer Email](ctp:api:type:OrderSetCustomerEmailAction) update action.
   *
   *
   */
  readonly email?: string
  /**
   *	Email address on the [Order](ctp:api:type:Order) before the [Set Customer Email](ctp:api:type:OrderSetCustomerEmailAction) update action.
   *
   *
   */
  readonly oldEmail?: string
}
/**
 *	Generated after a successful [Set Customer Group](ctp:api:type:StagedOrderSetCustomerGroupAction) update action.
 *
 */
export interface OrderCustomerGroupSetMessage extends IOrderMessage {
  readonly type: 'OrderCustomerGroupSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[CustomerGroup](ctp:api:type:CustomerGroup) on the [Order](ctp:api:type:Order) after the [Set Customer Group](ctp:api:type:StagedOrderSetCustomerGroupAction) update action.
   *
   *
   */
  readonly customerGroup?: CustomerGroupReference
  /**
   *	[CustomerGroup](ctp:api:type:CustomerGroup) on the [Order](ctp:api:type:Order) before the [Set Customer Group](ctp:api:type:StagedOrderSetCustomerGroupAction) update action.
   *
   *
   */
  readonly oldCustomerGroup?: CustomerGroupReference
}
/**
 *	Generated after a successful [Set Customer ID](ctp:api:type:OrderSetCustomerIdAction) update action.
 *
 */
export interface OrderCustomerSetMessage extends IOrderMessage {
  readonly type: 'OrderCustomerSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Customer](ctp:api:type:Customer) on the [Order](ctp:api:type:Order) after the [Set Customer ID](ctp:api:type:OrderSetCustomerIdAction) update action.
   *
   *
   */
  readonly customer?: CustomerReference
  /**
   *	[CustomerGroup](ctp:api:type:CustomerGroup) on the [Order](ctp:api:type:Order) after the [Set Customer ID](ctp:api:type:OrderSetCustomerIdAction) update action.
   *
   *
   */
  readonly customerGroup?: CustomerGroupReference
  /**
   *	[Customer](ctp:api:type:Customer) on the [Order](ctp:api:type:Order) before the [Set Customer ID](ctp:api:type:OrderSetCustomerIdAction) update action.
   *
   *
   */
  readonly oldCustomer?: CustomerReference
  /**
   *	[CustomerGroup](ctp:api:type:CustomerGroup) on the [Order](ctp:api:type:Order) before the [Set Customer ID](ctp:api:type:OrderSetCustomerIdAction) update action.
   *
   *
   */
  readonly oldCustomerGroup?: CustomerGroupReference
}
/**
 *	Generated after a successful [Delete Order](/../api/projects/orders#delete-order) request.
 *
 */
export interface OrderDeletedMessage extends IOrderMessage {
  readonly type: 'OrderDeleted'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Order](ctp:api:type:Order) that has been deleted.
   *
   *
   */
  readonly order: _Order
}
/**
 *	Generated after a successful [Add DiscountCode](ctp:api:type:StagedOrderAddDiscountCodeAction) update action.
 *
 */
export interface OrderDiscountCodeAddedMessage extends IOrderMessage {
  readonly type: 'OrderDiscountCodeAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[DiscountCode](ctp:api:type:DiscountCode) that was added.
   *
   *
   */
  readonly discountCode: DiscountCodeReference
}
/**
 *	Generated after a successful [Remove DiscountCode](ctp:api:type:StagedOrderRemoveDiscountCodeAction) update action.
 *
 */
export interface OrderDiscountCodeRemovedMessage extends IOrderMessage {
  readonly type: 'OrderDiscountCodeRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[DiscountCode](ctp:api:type:DiscountCode) that was removed.
   *
   *
   */
  readonly discountCode: DiscountCodeReference
}
/**
 *	Generated after the [DiscountCodeState](ctp:api:type:DiscountCodeState) changes due to a [recalculation](/../api/projects/carts#recalculate).
 *
 */
export interface OrderDiscountCodeStateSetMessage extends IOrderMessage {
  readonly type: 'OrderDiscountCodeStateSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[DiscountCode](ctp:api:type:DiscountCode) that changed due to the recalculation.
   *
   *
   */
  readonly discountCode: DiscountCodeReference
  /**
   *	[DiscountCodeState](ctp:api:type:DiscountCodeState) after the recalculation.
   *
   *
   */
  readonly state: DiscountCodeState
  /**
   *	[DiscountCodeState](ctp:api:type:DiscountCodeState) before the recalculation.
   *
   *
   */
  readonly oldState?: DiscountCodeState
}
/**
 *	Generated after successfully [applying an OrderEdit](ctp:api:endpoint:/{projectKey}/orders/edits/{id}/apply:POST).
 *
 */
export interface OrderEditAppliedMessage extends IOrderMessage {
  readonly type: 'OrderEditApplied'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[OrderEdit](ctp:api:type:OrderEdit) that was applied.
   *
   *
   */
  readonly edit: OrderEdit
  /**
   *	Information about a successfully applied [OrderEdit](ctp:api:type:OrderEdit).
   *
   *
   */
  readonly result: OrderEditApplied
}
/**
 *	Generated after a successful [Order Import](ctp:api:endpoint:/{projectKey}/orders/import:POST).
 *
 */
export interface OrderImportedMessage extends IOrderMessage {
  readonly type: 'OrderImported'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Order](ctp:api:type:Order) that was imported.
   *
   *
   */
  readonly order: _Order
}
/**
 *	Generated after a successful [Add LineItem](ctp:api:type:StagedOrderAddLineItemAction) update action.
 *
 */
export interface OrderLineItemAddedMessage extends IOrderMessage {
  readonly type: 'OrderLineItemAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Line Item](ctp:api:type:LineItem) that was added to the [Order](ctp:api:type:Order).
   *
   *
   */
  readonly lineItem: LineItem
  /**
   *	Quantity of [Line Items](ctp:api:type:LineItem) that were added to the [Order](ctp:api:type:Order).
   *
   *
   */
  readonly addedQuantity: number
}
/**
 *	Generated after a successful recalculation of a Discount on a [Line Item](ctp:api:type:LineItem).
 *
 */
export interface OrderLineItemDiscountSetMessage extends IOrderMessage {
  readonly type: 'OrderLineItemDiscountSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier for the [Line Item](ctp:api:type:LineItem).
   *
   *
   */
  readonly lineItemId: string
  /**
   *	User-defined unique identifier of the LineItem.
   *
   *
   */
  readonly lineItemKey?: string
  /**
   *	Array of [DiscountedLineItemPriceForQuantity](ctp:api:type:DiscountedLineItemPriceForQuantity) after the Discount recalculation.
   *
   *
   */
  readonly discountedPricePerQuantity: DiscountedLineItemPriceForQuantity[]
  /**
   *	Total Price of the [Line Item](ctp:api:type:LineItem) after the Discount recalculation.
   *
   *
   */
  readonly totalPrice: CentPrecisionMoney
  /**
   *	[TaxedItemPrice](ctp:api:type:TaxedItemPrice) of the [Line Item](ctp:api:type:LineItem) after the Discount recalculation.
   *
   *
   */
  readonly taxedPrice?: TaxedItemPrice
  /**
   *	Total taxed prices based on the quantity of Line Item assigned to each [Shipping Method](ctp:api:type:ShippingMethod). Only applicable for Carts with `Multiple` [ShippingMode](ctp:api:type:ShippingMode).
   *	Automatically set after `perMethodTaxRate` is set.
   *
   *
   */
  readonly taxedPricePortions: MethodTaxedPrice[]
}
/**
 *	Generated after a successful [Set LineItem DistributionChannel](/../api/projects/order-edits#set-lineitem-distributionchannel) update action.
 *
 */
export interface OrderLineItemDistributionChannelSetMessage
  extends IOrderMessage {
  readonly type: 'OrderLineItemDistributionChannelSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Line Item](ctp:api:type:LineItem).
   *
   *
   */
  readonly lineItemId: string
  /**
   *	User-defined unique identifier of the LineItem.
   *
   *
   */
  readonly lineItemKey?: string
  /**
   *	[Distribution Channel](ctp:api:type:Channel) that was set.
   *
   *
   */
  readonly distributionChannel?: ChannelReference
}
/**
 *	Generated after a successful [Remove LineItem](ctp:api:type:StagedOrderRemoveLineItemAction) update action.
 *
 */
export interface OrderLineItemRemovedMessage extends IOrderMessage {
  readonly type: 'OrderLineItemRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Line Item](ctp:api:type:LineItem).
   *
   *
   */
  readonly lineItemId: string
  /**
   *	User-defined unique identifier of the LineItem.
   *
   *
   */
  readonly lineItemKey?: string
  /**
   *	Quantity of [Line Items](ctp:api:type:LineItem) that were removed during the [Remove LineItem](ctp:api:type:StagedOrderRemoveLineItemAction) update action.
   *
   *
   */
  readonly removedQuantity: number
  /**
   *	[Line Item](ctp:api:type:LineItem) quantity after the [Remove LineItem](ctp:api:type:StagedOrderRemoveLineItemAction) update action.
   *
   *
   */
  readonly newQuantity: number
  /**
   *	[ItemStates](ctp:api:type:ItemState) after the [Remove LineItem](ctp:api:type:StagedOrderRemoveLineItemAction) update action.
   *
   *
   */
  readonly newState: ItemState[]
  /**
   *	`totalPrice` of the [Order](ctp:api:type:Order) after the [Remove LineItem](ctp:api:type:StagedOrderRemoveLineItemAction) update action.
   *
   *
   */
  readonly newTotalPrice: CentPrecisionMoney
  /**
   *	[TaxedItemPrice](ctp:api:type:TaxedItemPrice) of the [Order](ctp:api:type:Order) after the [Remove LineItem](ctp:api:type:StagedOrderRemoveLineItemAction) update action.
   *
   *
   */
  readonly newTaxedPrice?: TaxedItemPrice
  /**
   *	[Price](ctp:api:type:Price) of the [Order](ctp:api:type:Order) after the [Remove LineItem](ctp:api:type:StagedOrderRemoveLineItemAction) update action.
   *
   *
   */
  readonly newPrice?: Price
  /**
   *	[Shipping Details](ctp:api:type:ItemShippingDetails) of the [Order](ctp:api:type:Order) after the [Remove LineItem](ctp:api:type:StagedOrderRemoveLineItemAction) update action.
   *
   *
   */
  readonly newShippingDetail?: ItemShippingDetails
}
/**
 *	Generated after a successful [Add Payment](ctp:api:type:OrderAddPaymentAction) update action or when a [Payment](ctp:api:type:Payment) is added via [Order Edits](ctp:api:type:StagedOrderAddPaymentAction).
 *
 */
export interface OrderPaymentAddedMessage extends IMessage {
  readonly type: 'OrderPaymentAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Payment](ctp:api:type:Payment) that was added to the [Order](ctp:api:type:Order).
   *
   *
   */
  readonly payment: PaymentReference
}
/**
 *	Generated after a successful [Change PaymentState](ctp:api:type:OrderChangePaymentStateAction) update action.
 *
 */
export interface OrderPaymentStateChangedMessage extends IOrderMessage {
  readonly type: 'OrderPaymentStateChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[PaymentState](ctp:api:type:PaymentState) after the [Change Payment State](ctp:api:type:OrderChangePaymentStateAction) update action.
   *
   *
   */
  readonly paymentState: PaymentState
  /**
   *	[PaymentState](ctp:api:type:PaymentState) before the [Change Payment State](ctp:api:type:OrderChangePaymentStateAction) update action.
   *
   *
   */
  readonly oldPaymentState?: PaymentState
}
/**
 *	Generated after a successful [Set Purchase Order Number](ctp:api:type:OrderSetPurchaseOrderNumberAction) update action.
 *
 */
export interface OrderPurchaseOrderNumberSetMessage extends IOrderMessage {
  readonly type: 'OrderPurchaseOrderNumberSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Purchase order number on the [Order](ctp:api:type:Order) after the [Set Purchase Order Number](ctp:api:type:OrderSetPurchaseOrderNumberAction) update action.
   *
   *
   */
  readonly purchaseOrderNumber?: string
  /**
   *	Purchase order number on the [Order](ctp:api:type:Order) before the [Set Purchase Order Number](ctp:api:type:OrderSetPurchaseOrderNumberAction) update action.
   *
   *
   */
  readonly oldPurchaseOrderNumber?: string
}
/**
 *	Generated after a successful [Set ReturnShipmentState](ctp:api:type:OrderSetReturnShipmentStateAction) update action on [Orders](ctp:api:type:Order) and [Order Edits](ctp:api:type:OrderEdit).
 *
 */
export interface OrderReturnShipmentStateChangedMessage extends IOrderMessage {
  readonly type: 'OrderReturnShipmentStateChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [ReturnItem](ctp:api:type:ReturnItem).
   *
   *
   */
  readonly returnItemId: string
  /**
   *	State of the [ReturnItem](ctp:api:type:ReturnItem) after the [Set Return Shipment State](ctp:api:type:OrderSetReturnShipmentStateAction) update action.
   *
   *
   */
  readonly returnShipmentState: ReturnShipmentState
}
/**
 *	Generated after a successful [Change ShipmentState](ctp:api:type:OrderChangeShipmentStateAction) update action.
 *
 */
export interface OrderShipmentStateChangedMessage extends IOrderMessage {
  readonly type: 'OrderShipmentStateChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[ShipmentState](ctp:api:type:ShipmentState) after the [Change Shipment State](ctp:api:type:OrderChangeShipmentStateAction) update action.
   *
   *
   */
  readonly shipmentState: ShipmentState
  /**
   *	[ShipmentState](ctp:api:type:ShipmentState) before the [Change Shipment State](ctp:api:type:OrderChangeShipmentStateAction) update action.
   *
   *
   */
  readonly oldShipmentState?: ShipmentState
}
/**
 *	Generated after a successful [Set Shipping Address](ctp:api:type:OrderSetShippingAddressAction) update action.
 *
 */
export interface OrderShippingAddressSetMessage extends IOrderMessage {
  readonly type: 'OrderShippingAddressSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Shipping address on the Order after the [Set Shipping Address](ctp:api:type:OrderSetShippingAddressAction) update action.
   *
   *
   */
  readonly address?: Address
  /**
   *	Shipping address on the Order before the [Set Shipping Address](ctp:api:type:OrderSetShippingAddressAction) update action.
   *
   *
   */
  readonly oldAddress?: Address
}
/**
 *	Generated after a successful [Set ShippingMethod](ctp:api:type:StagedOrderSetShippingMethodAction) and [Set Custom ShippingMethod](ctp:api:type:StagedOrderSetCustomShippingMethodAction) update actions.
 *
 */
export interface OrderShippingInfoSetMessage extends IOrderMessage {
  readonly type: 'OrderShippingInfoSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[ShippingInfo](ctp:api:type:ShippingInfo) after the [Set Shipping Method](ctp:api:type:StagedOrderSetShippingMethodAction) or [Set Custom Shipping Method](ctp:api:type:StagedOrderSetCustomShippingMethodAction) update action.
   *
   *
   */
  readonly shippingInfo?: ShippingInfo
  /**
   *	[ShippingInfo](ctp:api:type:ShippingInfo) before the [Set Shipping Method](ctp:api:type:StagedOrderSetShippingMethodAction) or [Set Custom Shipping Method](ctp:api:type:StagedOrderSetCustomShippingMethodAction) update action.
   *
   *
   */
  readonly oldShippingInfo?: ShippingInfo
}
/**
 *	Generated after a successful [Set ShippingRateInput](ctp:api:type:StagedOrderSetShippingRateInputAction) update action.
 *
 */
export interface OrderShippingRateInputSetMessage extends IOrderMessage {
  readonly type: 'OrderShippingRateInputSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[ShippingRateInput](ctp:api:type:ShippingRateInput) after the [Set ShippingRateInput](ctp:api:type:StagedOrderSetShippingRateInputAction) update action.
   *
   *
   */
  readonly shippingRateInput?: ShippingRateInput
  /**
   *	[ShippingRateInput](ctp:api:type:ShippingRateInput) before the [Set ShippingRateInput](ctp:api:type:StagedOrderSetShippingRateInputAction) update action.
   *
   *
   */
  readonly oldShippingRateInput?: ShippingRateInput
}
/**
 *	Generated after a successful [Change OrderState](ctp:api:type:OrderChangeOrderStateAction) update action.
 *
 */
export interface OrderStateChangedMessage extends IOrderMessage {
  readonly type: 'OrderStateChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[OrderState](ctp:api:type:OrderState) after the [Change Order State](ctp:api:type:OrderChangeOrderStateAction) update action.
   *
   *
   */
  readonly orderState: OrderState
  /**
   *	[OrderState](ctp:api:type:OrderState) before the [Change Order State](ctp:api:type:OrderChangeOrderStateAction) update action.
   *
   *
   */
  readonly oldOrderState?: OrderState
}
/**
 *	Generated after a successful [Transition State](ctp:api:type:OrderTransitionStateAction) update action.
 *
 */
export interface OrderStateTransitionMessage extends IOrderMessage {
  readonly type: 'OrderStateTransition'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[OrderState](ctp:api:type:OrderState) after the [Transition State](ctp:api:type:OrderTransitionStateAction) update action.
   *
   *
   */
  readonly state: StateReference
  /**
   *	[OrderState](ctp:api:type:OrderState) before the [Transition State](ctp:api:type:OrderTransitionStateAction) update action.
   *
   *
   */
  readonly oldState?: StateReference
  /**
   *	Whether [State](ctp:api:type:State) transition validations were turned off during the [Transition State](ctp:api:type:OrderTransitionStateAction) update action.
   *
   *
   */
  readonly force: boolean
}
/**
 *	Generated after a successful [Set Store](ctp:api:type:OrderSetStoreAction) update action.
 *
 */
export interface OrderStoreSetMessage extends IOrderMessage {
  readonly type: 'OrderStoreSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Store](ctp:api:type:Store) that was set.
   *
   *
   */
  readonly store?: StoreKeyReference
}
/**
 *	Generated after a successful [Add Parcel to Delivery](ctp:api:type:OrderAddParcelToDeliveryAction) update action.
 *
 */
export interface ParcelAddedToDeliveryMessage extends IOrderMessage {
  readonly type: 'ParcelAddedToDelivery'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly delivery: Delivery
  /**
   *	[Parcel](ctp:api:type:Parcel) that was added to the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly parcel: Parcel
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multiple` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Set Parcel Items](ctp:api:type:OrderSetParcelItemsAction) update action.
 *
 */
export interface ParcelItemsUpdatedMessage extends IOrderMessage {
  readonly type: 'ParcelItemsUpdated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Parcel](ctp:api:type:Parcel).
   *
   *
   */
  readonly parcelId: string
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
  /**
   *	[Delivery Items](ctp:api:type:DeliveryItem) after the [Set Parcel Items](ctp:api:type:OrderSetParcelItemsAction) update action.
   *
   *
   */
  readonly items: DeliveryItem[]
  /**
   *	[Delivery Items](ctp:api:type:DeliveryItem) before the [Set Parcel Items](ctp:api:type:OrderSetParcelItemsAction) update action.
   *
   *
   */
  readonly oldItems: DeliveryItem[]
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multiple` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Set Parcel Measurements](ctp:api:type:OrderSetParcelMeasurementsAction) update action.
 *
 */
export interface ParcelMeasurementsUpdatedMessage extends IOrderMessage {
  readonly type: 'ParcelMeasurementsUpdated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
  /**
   *	Unique identifier of the [Parcel](ctp:api:type:Parcel).
   *
   *
   */
  readonly parcelId: string
  /**
   *	The [Parcel Measurements](ctp:api:type:ParcelMeasurements) that were set on the [Parcel](ctp:api:type:Parcel).
   *
   *
   */
  readonly measurements?: ParcelMeasurements
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multiple` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Remove Parcel from Delivery](ctp:api:type:OrderRemoveParcelFromDeliveryAction) update action.
 *
 */
export interface ParcelRemovedFromDeliveryMessage extends IOrderMessage {
  readonly type: 'ParcelRemovedFromDelivery'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
  /**
   *	[Parcel](ctp:api:type:Parcel) that was removed from the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly parcel: Parcel
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multiple` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Set Parcel Tracking Data](ctp:api:type:OrderSetParcelTrackingDataAction) update action.
 *
 */
export interface ParcelTrackingDataUpdatedMessage extends IOrderMessage {
  readonly type: 'ParcelTrackingDataUpdated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
  /**
   *	Unique identifier of the [Parcel](ctp:api:type:Parcel).
   *
   *
   */
  readonly parcelId: string
  /**
   *	The [Tracking Data](ctp:api:type:TrackingData) that was added to the [Parcel](ctp:api:type:Parcel).
   *
   *
   */
  readonly trackingData?: TrackingData
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multiple` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Create Payment](ctp:api:endpoint:/{projectKey}/payments:POST) request.
 *
 */
export interface PaymentCreatedMessage extends IMessage {
  readonly type: 'PaymentCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Payment](ctp:api:type:Payment) that was created.
   *
   *
   */
  readonly payment: Payment
}
/**
 *	Generated after a successful [Add InterfaceInteraction](ctp:api:type:PaymentAddInterfaceInteractionAction) update action.
 *
 */
export interface PaymentInteractionAddedMessage extends IMessage {
  readonly type: 'PaymentInteractionAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The interface interaction that was added to the [Payment](ctp:api:type:Payment).
   *
   *
   */
  readonly interaction: CustomFields
}
/**
 *	Generated after a successful [Set StatusInterfaceCode](ctp:api:type:PaymentSetStatusInterfaceCodeAction) update action.
 *
 */
export interface PaymentStatusInterfaceCodeSetMessage extends IMessage {
  readonly type: 'PaymentStatusInterfaceCodeSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The `interfaceCode` that was set during the [Set StatusInterfaceCode](ctp:api:type:PaymentSetStatusInterfaceCodeAction) update action.
   *
   *
   */
  readonly interfaceCode?: string
}
/**
 *	Generated after a successful [Transition State](ctp:api:type:PaymentTransitionStateAction) update action.
 *
 */
export interface PaymentStatusStateTransitionMessage extends IMessage {
  readonly type: 'PaymentStatusStateTransition'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[State](ctp:api:type:State) of the [Payment](ctp:api:type:Payment) after the [Transition State](ctp:api:type:PaymentTransitionStateAction) update action.
   *
   *
   */
  readonly state: StateReference
  /**
   *	Whether [State](ctp:api:type:State) transition validations were turned off during the [Change Transaction State](ctp:api:type:PaymentChangeTransactionStateAction) update action.
   *
   *
   */
  readonly force: boolean
}
/**
 *	Generated after a successful [Add Transaction](ctp:api:type:PaymentAddTransactionAction) update action.
 *
 */
export interface PaymentTransactionAddedMessage extends IMessage {
  readonly type: 'PaymentTransactionAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Transaction](ctp:api:type:Transaction) that was added to the [Payment](ctp:api:type:Payment).
   *
   *
   */
  readonly transaction: Transaction
}
/**
 *	Generated after a successful [Change TransactionState](ctp:api:type:PaymentChangeTransactionStateAction) update action.
 *
 */
export interface PaymentTransactionStateChangedMessage extends IMessage {
  readonly type: 'PaymentTransactionStateChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier for the [Transaction](ctp:api:type:Transaction) for which the [Transaction State](ctp:api:type:TransactionState) changed.
   *
   *
   */
  readonly transactionId: string
  /**
   *	[Transaction State](ctp:api:type:TransactionState) after the [Change Transaction State](ctp:api:type:PaymentChangeTransactionStateAction) update action.
   *
   *
   */
  readonly state: TransactionState
}
/**
 *	Generated after a successful [Add to Category](ctp:api:type:ProductAddToCategoryAction) update action.
 *
 */
export interface ProductAddedToCategoryMessage extends IMessage {
  readonly type: 'ProductAddedToCategory'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Category](ctp:api:type:Category) the [Product](ctp:api:type:Product) was added to.
   *
   *
   */
  readonly category: CategoryReference
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Create Product](ctp:api:endpoint:/{projectKey}/products:POST) request.
 *
 */
export interface ProductCreatedMessage extends IMessage {
  readonly type: 'ProductCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The staged [Product Projection](ctp:api:type:ProductProjection) of the [Product](ctp:api:type:Product) at the time of creation.
   *
   *
   */
  readonly productProjection: ProductProjection
}
/**
 *	Generated after a successful [Delete Product](/../api/projects/products#delete-product) request.
 *
 */
export interface ProductDeletedMessage extends IMessage {
  readonly type: 'ProductDeleted'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	List of image URLs that were removed during the [Delete Product](ctp:api:type:Product) request.
   *
   *
   */
  readonly removedImageUrls: string[]
  /**
   *	Current [Product Projection](ctp:api:type:ProductProjection) of the deleted [Product](ctp:api:type:Product).
   *
   *
   */
  readonly currentProjection?: ProductProjection
}
/**
 *	Generated after a successful [Add External Image](ctp:api:type:ProductAddExternalImageAction) update action or after the successful [upload of an image](/../api/projects/products#upload-product-image).
 *
 */
export interface ProductImageAddedMessage extends IMessage {
  readonly type: 'ProductImageAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Product Variant](ctp:api:type:ProductVariant) to which the [Image](ctp:api:type:Image) was added.
   *
   *
   */
  readonly variantId: number
  /**
   *	[Image](ctp:api:type:Image) that was added.
   *
   *
   */
  readonly image: Image
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Add Price](ctp:api:type:ProductAddPriceAction) update action.
 *
 */
export interface ProductPriceAddedMessage extends IMessage {
  readonly type: 'ProductPriceAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [ProductVariant](ctp:api:type:ProductVariant) for which the Price was added.
   *
   *
   */
  readonly variantId: number
  /**
   *	The Embedded Price that was added to the [ProductVariant](ctp:api:type:ProductVariant).
   *
   *
   */
  readonly price: Price
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Change Price](ctp:api:type:ProductChangePriceAction) update action.
 *
 */
export interface ProductPriceChangedMessage extends IMessage {
  readonly type: 'ProductPriceChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [ProductVariant](ctp:api:type:ProductVariant) for which the Price was changed.
   *
   *
   */
  readonly variantId: number
  /**
   *	The current Embedded Price before the [Change Embedded Price](ctp:api:type:ProductChangePriceAction) update action.
   *
   *
   */
  readonly oldPrice: Price
  /**
   *	The Embedded Price after the [Change Embedded Price](ctp:api:type:ProductChangePriceAction) update action.
   *
   *
   */
  readonly newPrice: Price
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
  /**
   *	The staged Embedded Price before the [Change Embedded Price](ctp:api:type:ProductChangePriceAction) update action.
   *
   *
   */
  readonly oldStagedPrice?: Price
}
/**
 *	Generated after adding a Custom Field to a Price using the [Set Price CustomField](ctp:api:type:ProductSetProductPriceCustomFieldAction) update action.
 *
 */
export interface ProductPriceCustomFieldAddedMessage extends IMessage {
  readonly type: 'ProductPriceCustomFieldAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Price](ctp:api:type:Price) to which the Custom Field was added.
   *
   *
   */
  readonly priceId: string
  /**
   *	Unique identifier of the [ProductVariant](ctp:api:type:ProductVariant) to which the Price belongs.
   *
   *
   */
  readonly variantId: number
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
  /**
   *	Name of the Custom Field that was added.
   *
   *
   */
  readonly name: string
  /**
   *	The added [CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType).
   *
   *
   */
  readonly value: any
}
/**
 *	Generated after changing an existing Custom Field on a Price using the [Set Price CustomField](ctp:api:type:ProductSetProductPriceCustomFieldAction) update action.
 *
 */
export interface ProductPriceCustomFieldChangedMessage extends IMessage {
  readonly type: 'ProductPriceCustomFieldChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Price](ctp:api:type:Price) of which the Custom Field was changed.
   *
   *
   */
  readonly priceId: string
  /**
   *	Unique identifier of the [ProductVariant](ctp:api:type:ProductVariant) to which the Price belongs.
   *
   *
   */
  readonly variantId: number
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
  /**
   *	Name of the Custom Field that was changed.
   *
   *
   */
  readonly name: string
  /**
   *	[CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType) after the [Set Price CustomField](ctp:api:type:ProductSetProductPriceCustomFieldAction) update action.
   *
   *
   */
  readonly value: any
}
/**
 *	Generated after removing a Custom Field from a Price using the [Set Price CustomField](ctp:api:type:ProductSetProductPriceCustomFieldAction) update action.
 *
 */
export interface ProductPriceCustomFieldRemovedMessage extends IMessage {
  readonly type: 'ProductPriceCustomFieldRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Price](ctp:api:type:Price) from which the Custom Field was removed.
   *
   *
   */
  readonly priceId: string
  /**
   *	Unique identifier of the [ProductVariant](ctp:api:type:ProductVariant) to which the Price belongs.
   *
   *
   */
  readonly variantId: number
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
  /**
   *	Name of the Custom Field that was removed.
   *
   *
   */
  readonly name: string
}
/**
 *	Generated after removing a Custom Type from a Price using the [Set Price Custom Type](ctp:api:type:ProductSetProductPriceCustomTypeAction) update action.
 *
 */
export interface ProductPriceCustomFieldsRemovedMessage extends IMessage {
  readonly type: 'ProductPriceCustomFieldsRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Price](ctp:api:type:Price) from which the Custom Type was removed.
   *
   *
   */
  readonly priceId: string
  /**
   *	Unique identifier of the [ProductVariant](ctp:api:type:ProductVariant) to which the Price belongs.
   *
   *
   */
  readonly variantId: number
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Set Price Custom Type](ctp:api:type:ProductSetProductPriceCustomTypeAction) update action.
 *
 */
export interface ProductPriceCustomFieldsSetMessage extends IMessage {
  readonly type: 'ProductPriceCustomFieldsSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Price](ctp:api:type:Price) on which the Custom Type was set.
   *
   *
   */
  readonly priceId: string
  /**
   *	Unique identifier of the [ProductVariant](ctp:api:type:ProductVariant) to which the Price belongs.
   *
   *
   */
  readonly variantId: number
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
  /**
   *	Custom Fields that were set.
   *
   *
   */
  readonly customField: CustomFields
  /**
   *	`id` of the previous [Custom Type](ctp:api:type:Type). Absent if there was no previous Custom Type present.
   *
   *
   */
  readonly oldTypeId?: string
}
/**
 *	Generated after a Price is updated due to a [Product Discount](ctp:api:type:ProductDiscount).
 *
 */
export interface ProductPriceDiscountsSetMessage extends IMessage {
  readonly type: 'ProductPriceDiscountsSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Array containing details about the [Embedded Prices](ctp:api:type:Price) that were updated.
   *
   *
   */
  readonly updatedPrices: ProductPriceDiscountsSetUpdatedPrice[]
}
/**
 *	Details about an [Embedded Price](ctp:api:type:Price) that was updated due to a Discount. Specific to [Product Price Discounts Set](ctp:api:type:ProductPriceDiscountsSetMessage) Message.
 *
 */
export interface ProductPriceDiscountsSetUpdatedPrice {
  /**
   *	Unique identifier of the [ProductVariant](ctp:api:type:ProductVariant) for which the Discount was set.
   *
   *
   */
  readonly variantId: number
  /**
   *	Key of the [ProductVariant](ctp:api:type:ProductVariant) for which Discount was set.
   *
   *
   */
  readonly variantKey?: string
  /**
   *	SKU of the [ProductVariant](ctp:api:type:ProductVariant) for which Discount was set.
   *
   *
   */
  readonly sku?: string
  /**
   *	Unique identifier of the [Price](ctp:api:type:Price).
   *
   *
   */
  readonly priceId: string
  /**
   *	Discounted Price for the [ProductVariant](ctp:api:type:ProductVariant) for which Discount was set.
   *
   *
   */
  readonly discounted?: DiscountedPrice
  /**
   *	Whether the update was only applied to the staged [ProductProjection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Set Discounted Price](ctp:api:type:ProductSetDiscountedPriceAction) update action.
 *
 */
export interface ProductPriceExternalDiscountSetMessage extends IMessage {
  readonly type: 'ProductPriceExternalDiscountSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Product Variant](ctp:api:type:ProductVariant) for which the Discount was set.
   *
   *
   */
  readonly variantId: number
  /**
   *	Key of the [Product Variant](ctp:api:type:ProductVariant) for which the Discount was set.
   *
   *
   */
  readonly variantKey?: string
  /**
   *	SKU of the [Product Variant](ctp:api:type:ProductVariant) for which Discount was set.
   *
   *
   */
  readonly sku?: string
  /**
   *	Unique identifier of the [Price](ctp:api:type:Price).
   *
   *
   */
  readonly priceId: string
  /**
   *	Discounted Price for the [Product Variant](ctp:api:type:ProductVariant) for which Discount was set.
   *
   *
   */
  readonly discounted?: DiscountedPrice
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Set Price Key](ctp:api:type:ProductSetPriceKeyAction) update action.
 *
 */
export interface ProductPriceKeySetMessage extends IMessage {
  readonly type: 'ProductPriceKeySet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *
   */
  readonly variantId: number
  /**
   *	Unique identifier of the [Price](ctp:api:type:Price).
   *
   *
   */
  readonly priceId?: string
  /**
   *	`key` value of the [Price](ctp:api:type:Price) before the [Set Price Key](ctp:api:type:ProductSetPriceKeyAction) update action.
   *
   *
   */
  readonly oldKey?: string
  /**
   *	`key` value of the [Price](ctp:api:type:Price) after the [Set Price Key](ctp:api:type:ProductSetPriceKeyAction) update action.
   *
   *
   */
  readonly key?: string
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Set PriceMode](ctp:api:type:ProductSetPriceModeAction) update action.
 *
 */
export interface ProductPriceModeSetMessage extends IMessage {
  readonly type: 'ProductPriceModeSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The [PriceMode](ctp:api:type:ProductPriceModeEnum) that was set.
   *
   *
   */
  readonly to: ProductPriceModeEnum
}
/**
 *	Generated after a successful [Remove Price](ctp:api:type:ProductRemovePriceAction) update action.
 *
 */
export interface ProductPriceRemovedMessage extends IMessage {
  readonly type: 'ProductPriceRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [ProductVariant](ctp:api:type:ProductVariant) for which the Price was removed.
   *
   *
   */
  readonly variantId: number
  /**
   *	The Embedded Price that was removed from the [ProductVariant](ctp:api:type:ProductVariant).
   *
   *
   */
  readonly price: Price
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Set Prices](ctp:api:type:ProductSetPricesAction) update action.
 *
 */
export interface ProductPricesSetMessage extends IMessage {
  readonly type: 'ProductPricesSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [ProductVariant](ctp:api:type:ProductVariant) for which the Price was set.
   *
   *
   */
  readonly variantId: number
  /**
   *	The [Embedded Prices](ctp:api:type:Price) that were set on the [ProductVariant](ctp:api:type:ProductVariant).
   *
   *
   */
  readonly prices: Price[]
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Publish](ctp:api:type:ProductPublishAction) update action.
 *
 */
export interface ProductPublishedMessage extends IMessage {
  readonly type: 'ProductPublished'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	List of image URLs which were removed during the [Publish](ctp:api:type:ProductPublishAction) update action.
   *
   *
   */
  readonly removedImageUrls: string[]
  /**
   *	Current [Product Projection](ctp:api:type:ProductProjection) of the [Product](ctp:api:type:Product) at the time of creation.
   *
   *
   */
  readonly productProjection: ProductProjection
  /**
   *	[Publishing Scope](ctp:api:type:ProductPublishScope) that was used during the [Publish](ctp:api:type:ProductPublishAction) update action.
   *
   *
   */
  readonly scope: ProductPublishScope
}
/**
 *	Generated after a successful [Remove from Category](ctp:api:type:ProductRemoveFromCategoryAction) update action.
 *
 */
export interface ProductRemovedFromCategoryMessage extends IMessage {
  readonly type: 'ProductRemovedFromCategory'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Category](ctp:api:type:Category) the [Product](ctp:api:type:Product) was removed from.
   *
   *
   */
  readonly category: CategoryReference
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Revert Staged Changes](ctp:api:type:ProductRevertStagedChangesAction) update action.
 *
 */
export interface ProductRevertedStagedChangesMessage extends IMessage {
  readonly type: 'ProductRevertedStagedChanges'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	List of image URLs that were removed during the [Revert Staged Changes](ctp:api:type:ProductRevertStagedChangesAction) update action.
   *
   *
   */
  readonly removedImageUrls: string[]
}
/**
 *	Generated after a successful [Create Product Selection](ctp:api:endpoint:/{projectKey}/product-selections:POST) request.
 *
 */
export interface ProductSelectionCreatedMessage extends IMessage {
  readonly type: 'ProductSelectionCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Product Selection](ctp:api:type:ProductSelection) that was created.
   *
   *
   */
  readonly productSelection: ProductSelection
}
/**
 *	Generated after a successful [Delete Product Selection](/../api/projects/product-selections#delete-productselection) request.
 *
 */
export interface ProductSelectionDeletedMessage extends IMessage {
  readonly type: 'ProductSelectionDeleted'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
}
/**
 *	Generated after a successful [Add Product](ctp:api:type:ProductSelectionAddProductAction) update action.
 *
 */
export interface ProductSelectionProductAddedMessage extends IMessage {
  readonly type: 'ProductSelectionProductAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Product](ctp:api:type:Product) that was added to the [Product Selection](ctp:api:type:ProductSelection).
   *
   *
   */
  readonly product: ProductReference
  /**
   *	Product Variant Selection after the [Add Product](ctp:api:type:ProductSelectionAddProductAction) update action.
   *
   *
   */
  readonly variantSelection: ProductVariantSelection
}
/**
 *	Generated after a successful [Exclude Product](ctp:api:type:ProductSelectionExcludeProductAction) update action.
 *
 */
export interface ProductSelectionProductExcludedMessage extends IMessage {
  readonly type: 'ProductSelectionProductExcluded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Product](ctp:api:type:Product) that was excluded from the [Product Selection](ctp:api:type:ProductSelection).
   *
   *
   */
  readonly product: ProductReference
  /**
   *	Product Variant Exclusion after the [Exclude Product](ctp:api:type:ProductSelectionExcludeProductAction) update action.
   *
   *
   */
  readonly variantExclusion: ProductVariantExclusion
}
/**
 *	Generated after a successful [Remove Product](ctp:api:type:ProductSelectionRemoveProductAction) update action.
 *
 */
export interface ProductSelectionProductRemovedMessage extends IMessage {
  readonly type: 'ProductSelectionProductRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Product](ctp:api:type:Product) that was removed from the Product Selection.
   *
   *
   */
  readonly product: ProductReference
}
/**
 *	Generated after a successful [Set Variant Exclusion](ctp:api:type:ProductSelectionSetVariantExclusionAction) update action.
 *
 */
export interface ProductSelectionVariantExclusionChangedMessage
  extends IMessage {
  readonly type: 'ProductSelectionVariantExclusionChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Product](ctp:api:type:Product) for which the Product Variant Exclusion changed.
   *
   *
   */
  readonly product: ProductReference
  /**
   *	Product Variant Exclusion before the [Set Variant Exclusion](ctp:api:type:ProductSelectionSetVariantExclusionAction) update action.
   *
   */
  readonly oldVariantExclusion: ProductVariantExclusion
  /**
   *	Product Variant Exclusion after the [Set Variant Exclusion](ctp:api:type:ProductSelectionSetVariantExclusionAction) update action.
   *
   */
  readonly newVariantExclusion: ProductVariantExclusion
}
/**
 *	Generated after a successful [Set Variant Selection](ctp:api:type:ProductSelectionSetVariantSelectionAction) update action.
 *
 */
export interface ProductSelectionVariantSelectionChangedMessage
  extends IMessage {
  readonly type: 'ProductSelectionVariantSelectionChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Product](ctp:api:type:Product) for which the Product Variant Selection changed.
   *
   *
   */
  readonly product: ProductReference
  /**
   *	Product Variant Selection before the [Set Variant Selection](ctp:api:type:ProductSelectionSetVariantSelectionAction) update action.
   *
   */
  readonly oldVariantSelection: ProductVariantSelection
  /**
   *	Product Variant Selection after the [Set Variant Selection](ctp:api:type:ProductSelectionSetVariantSelectionAction) update action.
   *
   */
  readonly newVariantSelection: ProductVariantSelection
}
/**
 *	Generated after a successful [Change Slug](ctp:api:type:ProductChangeSlugAction) update action.
 *
 */
export interface ProductSlugChangedMessage extends IMessage {
  readonly type: 'ProductSlugChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The slug of the [Product](ctp:api:type:Product) after the [Change Slug](ctp:api:type:ProductChangeSlugAction) update action.
   *
   *
   */
  readonly slug: LocalizedString
  /**
   *	The slug of the [Product](ctp:api:type:Product) before the [Change Slug](ctp:api:type:ProductChangeSlugAction) update action.
   *
   *
   */
  readonly oldSlug?: LocalizedString
}
/**
 *	Generated after a successful [Transition State](ctp:api:type:ProductTransitionStateAction) update action.
 *
 */
export interface ProductStateTransitionMessage extends IMessage {
  readonly type: 'ProductStateTransition'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Product [State](ctp:api:type:State) after the [Transition State](ctp:api:type:ProductTransitionStateAction) update action.
   *
   */
  readonly state: StateReference
  /**
   *	Whether [State](ctp:api:type:State) transition validations were turned off during the [Transition State](ctp:api:type:ProductTransitionStateAction) update action.
   *
   *
   */
  readonly force: boolean
}
/**
 *	Generated after a successful [Create Product Tailoring](/../api/projects/product-tailoring#create-producttailoring) or
 *	[Create Product Tailoring in Store](/../api/projects/product-tailoring#create-producttailoring-in-store) request.
 *
 */
export interface ProductTailoringCreatedMessage extends IMessage {
  readonly type: 'ProductTailoringCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	User-defined unique identifier of the Product Tailoring.
   *
   *
   */
  readonly key?: string
  /**
   *	The Store to which the Product Tailoring belongs.
   *
   *
   */
  readonly store: StoreKeyReference
  /**
   *	User-defined unique identifier of the Product this Product Tailoring belongs to.
   *
   *
   */
  readonly productKey?: string
  /**
   *	Reference to the Product the Product Tailoring belongs to.
   *
   *
   */
  readonly product: ProductReference
  /**
   *	The description of the [Product Tailoring](ctp:api:type:ProductTailoring) at the time of creation.
   *
   *
   */
  readonly description?: LocalizedString
  /**
   *	The name of the [Product Tailoring](ctp:api:type:ProductTailoring) at the time of creation.
   *
   *
   */
  readonly name?: LocalizedString
  /**
   *	The slug of the [Product Tailoring](ctp:api:type:ProductTailoring) at the time of creation.
   *
   *
   */
  readonly slug?: LocalizedString
  /**
   *	The metaTitle of the [Product Tailoring](ctp:api:type:ProductTailoring) at the time of creation.
   *
   *
   */
  readonly metaTitle?: LocalizedString
  /**
   *	The metaDescription of the [Product Tailoring](ctp:api:type:ProductTailoring) at the time of creation.
   *
   *
   */
  readonly metaDescription?: LocalizedString
  /**
   *	The metaKeywords of the [Product Tailoring](ctp:api:type:ProductTailoring) at the time of creation.
   *
   *
   */
  readonly metaKeywords?: LocalizedString
  /**
   *	The variants of the [Product Tailoring](ctp:api:type:ProductTailoring) at the time of creation.
   *
   *
   */
  readonly variants?: ProductVariantTailoring[]
  /**
   *	`true` if the ProductTailoring is published.
   *
   *
   */
  readonly published: boolean
}
/**
 *	Generated after a successful [Delete Product Tailoring](/../api/projects/product-tailoring#delete-producttailoring) or
 *	[Delete ProductTailoring assigned to Product in Store](/../api/projects/product-tailoring#delete-producttailoring-assigned-to-product-in-store) request.
 *
 */
export interface ProductTailoringDeletedMessage extends IMessage {
  readonly type: 'ProductTailoringDeleted'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The Store to which the Product Tailoring belongs.
   *
   *
   */
  readonly store: StoreKeyReference
  /**
   *	User-defined unique identifier of the Product this Product Tailoring belongs to.
   *
   *
   */
  readonly productKey?: string
  /**
   *	Reference to the Product the Product Tailoring belongs to.
   *
   *
   */
  readonly product: ProductReference
}
/**
 *	Generated after a successful Product Tailoring [Set Description](ctp:api:type:ProductTailoringSetDescriptionAction) update action.
 *
 */
export interface ProductTailoringDescriptionSetMessage extends IMessage {
  readonly type: 'ProductTailoringDescriptionSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The Store to which the Product Tailoring belongs.
   *
   *
   */
  readonly store: StoreKeyReference
  /**
   *	User-defined unique identifier of the Product this Product Tailoring belongs to.
   *
   *
   */
  readonly productKey?: string
  /**
   *	Reference to the Product the Product Tailoring belongs to.
   *
   *
   */
  readonly product: ProductReference
  /**
   *	The description of the [Product Tailoring](ctp:api:type:ProductTailoring) after the [Set Description](ctp:api:type:ProductTailoringSetDescriptionAction) update action.
   *
   *
   */
  readonly description?: LocalizedString
  /**
   *	The description of the [ProductTailoring](ctp:api:type:ProductTailoring) before the [Set Description](ctp:api:type:ProductTailoringSetDescriptionAction) update action.
   *
   *
   */
  readonly oldDescription?: LocalizedString
}
/**
 *	Generated after a successful [Add External Image](ctp:api:type:ProductTailoringAddExternalImageAction) update action
 *	or after a successful [Upload Product Tailoring image](/projects/product-tailoring#upload-product-tailoring-image) request.
 *
 */
export interface ProductTailoringImageAddedMessage extends IMessage {
  readonly type: 'ProductTailoringImageAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The Store to which the Product Tailoring belongs.
   *
   *
   */
  readonly store: StoreKeyReference
  /**
   *	`key` of the tailored Product.
   *
   *
   */
  readonly productKey?: string
  /**
   *	Reference to the tailored Product.
   *
   *
   */
  readonly product: ProductReference
  /**
   *	`id` of the tailored [ProductVariant](ctp:api:type:ProductVariant).
   *
   *
   */
  readonly variantId: number
  /**
   *	[Image](ctp:api:type:Image) that was added.
   *
   *
   */
  readonly image: Image
}
/**
 *	Generated after a successful [Set Images](ctp:api:type:ProductTailoringSetExternalImagesAction) update action.
 *
 */
export interface ProductTailoringImagesSetMessage extends IMessage {
  readonly type: 'ProductTailoringImagesSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The Store to which the Product Tailoring belongs.
   *
   *
   */
  readonly store: StoreKeyReference
  /**
   *	`key` of the tailored Product.
   *
   *
   */
  readonly productKey?: string
  /**
   *	Reference to the Product the Product Tailoring belongs to.
   *
   *
   */
  readonly product: ProductReference
  /**
   *	`id` of the tailored Product Variant.
   *
   *
   */
  readonly variantId: number
  /**
   *	[Images](ctp:api:type:Image) on the tailored [Product Variant](ctp:api:type:ProductVariantTailoring) before the [Set Images](ctp:api:type:ProductTailoringSetExternalImagesAction) update action.
   *
   *
   */
  readonly oldImages?: Image[]
  /**
   *	[Images](ctp:api:type:Image) on the tailored [Product Variant](ctp:api:type:ProductVariantTailoring) after the [Set Images](ctp:api:type:ProductTailoringSetExternalImagesAction) update action.
   *
   *
   */
  readonly images?: Image[]
}
/**
 *	Generated after a successful Product Tailoring [Set Name](ctp:api:type:ProductTailoringSetNameAction) update action.
 *
 */
export interface ProductTailoringNameSetMessage extends IMessage {
  readonly type: 'ProductTailoringNameSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The Store to which the Product Tailoring belongs.
   *
   *
   */
  readonly store: StoreKeyReference
  /**
   *	User-defined unique identifier of the Product this Product Tailoring belongs to.
   *
   *
   */
  readonly productKey?: string
  /**
   *	Reference to the Product the Product Tailoring belongs to.
   *
   *
   */
  readonly product: ProductReference
  /**
   *	The name of the [Product Tailoring](ctp:api:type:ProductTailoring) after the [Set Name](ctp:api:type:ProductTailoringSetNameAction) update action.
   *
   *
   */
  readonly name?: LocalizedString
  /**
   *	The name of the [ProductTailoring](ctp:api:type:ProductTailoring) before the [Set Name](ctp:api:type:ProductTailoringSetNameAction) update action.
   *
   *
   */
  readonly oldName?: LocalizedString
}
/**
 *	Generated after a successful [Product Tailoring Publish](ctp:api:type:ProductTailoringPublishAction) update action.
 *
 */
export interface ProductTailoringPublishedMessage extends IMessage {
  readonly type: 'ProductTailoringPublished'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The Store to which the Product Tailoring belongs.
   *
   *
   */
  readonly store: StoreKeyReference
  /**
   *	User-defined unique identifier of the Product this Product Tailoring belongs to.
   *
   *
   */
  readonly productKey?: string
  /**
   *	Reference to the Product the Product Tailoring belongs to.
   *
   *
   */
  readonly product: ProductReference
}
/**
 *	Generated after a successful Product Tailoring [Set Slug](ctp:api:type:ProductTailoringSetSlugAction) update action.
 *
 */
export interface ProductTailoringSlugSetMessage extends IMessage {
  readonly type: 'ProductTailoringSlugSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The Store to which the Product Tailoring belongs.
   *
   *
   */
  readonly store: StoreKeyReference
  /**
   *	User-defined unique identifier of the Product this Product Tailoring belongs to.
   *
   *
   */
  readonly productKey?: string
  /**
   *	Reference to the Product the Product Tailoring belongs to.
   *
   *
   */
  readonly product: ProductReference
  /**
   *	The slug of the [Product Tailoring](ctp:api:type:ProductTailoring) after the [Set Slug](ctp:api:type:ProductTailoringSetSlugAction) update action.
   *
   *
   */
  readonly slug?: LocalizedString
  /**
   *	The slug of the [ProductTailoring](ctp:api:type:ProductTailoring) before the [Set Slug](ctp:api:type:ProductTailoringSetSlugAction) update action.
   *
   *
   */
  readonly oldSlug?: LocalizedString
}
/**
 *	Generated after a successful [Product Tailoring Unpublish](ctp:api:type:ProductTailoringUnpublishAction) update action.
 *
 */
export interface ProductTailoringUnpublishedMessage extends IMessage {
  readonly type: 'ProductTailoringUnpublished'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The Store to which the Product Tailoring belongs.
   *
   *
   */
  readonly store: StoreKeyReference
  /**
   *	User-defined unique identifier of the Product this Product Tailoring belongs to.
   *
   *
   */
  readonly productKey?: string
  /**
   *	Reference to the Product the Product Tailoring belongs to.
   *
   *
   */
  readonly product: ProductReference
}
/**
 *	Generated after a successful [Unpublish Product](ctp:api:type:ProductUnpublishAction) update action.
 *
 */
export interface ProductUnpublishedMessage extends IMessage {
  readonly type: 'ProductUnpublished'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
}
/**
 *	Generated after a successful [Add ProductVariant](ctp:api:type:ProductAddVariantAction) update action.
 *
 */
export interface ProductVariantAddedMessage extends IMessage {
  readonly type: 'ProductVariantAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Product Variant](ctp:api:type:ProductVariant) that was added.
   *
   *
   */
  readonly variant: ProductVariant
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Remove ProductVariant](ctp:api:type:ProductRemoveVariantAction) update action.
 *
 */
export interface ProductVariantDeletedMessage extends IMessage {
  readonly type: 'ProductVariantDeleted'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Product Variant](ctp:api:type:ProductVariant) that was added.
   *
   *
   */
  readonly variant?: ProductVariant
  /**
   *	List of image URLs that were removed with the [Remove Product Variant](ctp:api:type:ProductRemoveVariantAction) update action.
   *
   *
   */
  readonly removedImageUrls: string[]
  /**
   *	If `true`, this message informs that only the staged ProductVariant has been removed by the update action.
   *	If `false`, both the current and staged ProductVariant have been removed.
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Add ProductVariant Tailoring](ctp:api:type:ProductTailoringAddVariantAction) update action.
 *
 */
export interface ProductVariantTailoringAddedMessage extends IMessage {
  readonly type: 'ProductVariantTailoringAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The Store to which the Product Tailoring belongs.
   *
   *
   */
  readonly store: StoreKeyReference
  /**
   *	`key` of the tailored Product.
   *
   *
   */
  readonly productKey?: string
  /**
   *	Reference to the tailored Product.
   *
   *
   */
  readonly product: ProductReference
  /**
   *	`id` of the [ProductVariant](ctp:api:type:ProductVariant) added to the Tailoring.
   *
   *
   */
  readonly variantId: number
  /**
   *	The [ProductVariantTailoring](ctp:api:type:ProductVariantTailoring) that was added to the ProductTailoring.
   *
   *
   */
  readonly variant: ProductVariantTailoring
}
/**
 *	Generated after a successful [Remove ProductVariant Tailoring](ctp:api:type:ProductTailoringRemoveVariantAction) update action.
 *
 */
export interface ProductVariantTailoringRemovedMessage extends IMessage {
  readonly type: 'ProductVariantTailoringRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The Store to which the Product Tailoring belongs.
   *
   *
   */
  readonly store: StoreKeyReference
  /**
   *	`key` of the tailored Product.
   *
   *
   */
  readonly productKey?: string
  /**
   *	Reference to the Product the Product Tailoring belongs to.
   *
   *
   */
  readonly product: ProductReference
  /**
   *	`id` of the [ProductVariant](ctp:api:type:ProductVariant) removed from the Tailoring.
   *
   *
   */
  readonly variantId: number
  /**
   *	The [ProductVariantTailoring](ctp:api:type:ProductVariantTailoring) that was removed from the ProductTailoring.
   *
   *
   */
  readonly variant: ProductVariantTailoring
}
/**
 *	Generated after a successful [Create Quote](ctp:api:endpoint:/{projectKey}/quotes:POST) request.
 *
 */
export interface QuoteCreatedMessage extends IMessage {
  readonly type: 'QuoteCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Quote](/../api/projects/quotes) that was created.
   *
   *
   */
  readonly quote: Quote
}
/**
 *	Generated after a successful [Change Customer](ctp:api:type:QuoteChangeCustomerAction) update action.
 *
 */
export interface QuoteCustomerChangedMessage extends IMessage {
  readonly type: 'QuoteCustomerChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The [Buyer](/../api/quotes-overview#buyer) who now owns the Quote.
   *
   *
   */
  readonly customer: CustomerReference
  /**
   *	The previous [Buyer](/../api/quotes-overview#buyer).
   *
   *
   */
  readonly previousCustomer: CustomerReference
}
/**
 *	Generated after a successful [Delete Quote](/../api/projects/quotes#delete-quote) request.
 *
 */
export interface QuoteDeletedMessage extends IMessage {
  readonly type: 'QuoteDeleted'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
}
/**
 *	Generated after a successful [Request Quote Renegotiation](ctp:api:type:QuoteRequestQuoteRenegotiationAction) update action.
 *
 */
export interface QuoteRenegotiationRequestedMessage extends IMessage {
  readonly type: 'QuoteRenegotiationRequested'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Message from the [Buyer](/api/quotes-overview#buyer) regarding the Quote renegotiation request.
   *
   *
   */
  readonly buyerComment?: string
}
/**
 *	Generated after a successful [Create QuoteRequest](ctp:api:endpoint:/{projectKey}/quote-requests:POST) request.
 *
 */
export interface QuoteRequestCreatedMessage extends IMessage {
  readonly type: 'QuoteRequestCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Quote Request](/../api/projects/quote-requests) that was created.
   *
   *
   */
  readonly quoteRequest: QuoteRequest
}
/**
 *	Generated after a successful [Change Customer](ctp:api:type:QuoteRequestChangeCustomerAction) update action.
 *
 */
export interface QuoteRequestCustomerChangedMessage extends IMessage {
  readonly type: 'QuoteRequestCustomerChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The [Buyer](/../api/quotes-overview#buyer) who now owns the Quote Request.
   *
   *
   */
  readonly customer: CustomerReference
  /**
   *	The previous [Buyer](/../api/quotes-overview#buyer).
   *
   *
   */
  readonly previousCustomer: CustomerReference
}
/**
 *	Generated after a successful [Delete QuoteRequest](/../api/projects/quote-requests#delete-quoterequest) request.
 *
 */
export interface QuoteRequestDeletedMessage extends IMessage {
  readonly type: 'QuoteRequestDeleted'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
}
/**
 *	Generated after a successful [Change Quote Request State](ctp:api:type:QuoteRequestChangeQuoteRequestStateAction) update action.
 *
 */
export interface QuoteRequestStateChangedMessage extends IMessage {
  readonly type: 'QuoteRequestStateChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	State of the Quote Request after the [Change Quote Request State](ctp:api:type:QuoteRequestChangeQuoteRequestStateAction) update action.
   *
   *
   */
  readonly quoteRequestState: QuoteRequestState
  /**
   *	State of the Quote Request before the [Change Quote Request State](ctp:api:type:QuoteRequestChangeQuoteRequestStateAction) update action.
   *
   *
   */
  readonly oldQuoteRequestState: QuoteRequestState
}
/**
 *	Generated after a successful [Transition State](ctp:api:type:QuoteRequestTransitionStateAction) update action.
 *
 */
export interface QuoteRequestStateTransitionMessage extends IMessage {
  readonly type: 'QuoteRequestStateTransition'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[State](ctp:api:type:State) of the [Quote](ctp:api:type:Quote) after the [Transition State](ctp:api:type:QuoteRequestTransitionStateAction) update action.
   *
   *
   */
  readonly state: StateReference
  /**
   *	[State](ctp:api:type:State) of the [Quote](ctp:api:type:Quote) before the [Transition State](ctp:api:type:QuoteRequestTransitionStateAction) update action.
   *
   *
   */
  readonly oldState?: StateReference
  /**
   *	Whether [State](ctp:api:type:State) transition validations were turned off during the [Transition State](ctp:api:type:QuoteRequestTransitionStateAction) update action.
   *
   *
   */
  readonly force: boolean
}
/**
 *	Generated after a successful [Change Quote State](ctp:api:type:QuoteChangeQuoteStateAction) update action.
 *
 */
export interface QuoteStateChangedMessage extends IMessage {
  readonly type: 'QuoteStateChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	State of the Quote after the [Change Quote State](ctp:api:type:QuoteChangeQuoteStateAction) update action.
   *
   *
   */
  readonly quoteState: QuoteState
  /**
   *	State of the Quote before the [Change Quote State](ctp:api:type:QuoteChangeQuoteStateAction) update action.
   *
   *
   */
  readonly oldQuoteState: QuoteState
}
/**
 *	Generated after a successful [Transition State](ctp:api:type:QuoteTransitionStateAction) update action.
 *
 */
export interface QuoteStateTransitionMessage extends IMessage {
  readonly type: 'QuoteStateTransition'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[State](ctp:api:type:State) of the [Quote](ctp:api:type:Quote) after the [Transition State](ctp:api:type:QuoteTransitionStateAction) update action.
   *
   *
   */
  readonly state: StateReference
  /**
   *	[State](ctp:api:type:State) of the [Quote](ctp:api:type:Quote) before the [Transition State](ctp:api:type:QuoteTransitionStateAction) update action.
   *
   *
   */
  readonly oldState?: StateReference
  /**
   *	Whether [State](ctp:api:type:State) transition validations were turned off during the [Transition State](ctp:api:type:QuoteTransitionStateAction) update action.
   *
   *
   */
  readonly force: boolean
}
/**
 *	Generated after a successful [Add ReturnInfo](ctp:api:type:OrderAddReturnInfoAction) update action.
 *
 */
export interface ReturnInfoAddedMessage extends IOrderMessage {
  readonly type: 'ReturnInfoAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The [ReturnInfo](ctp:api:type:ReturnInfo) that was added to the [Order](ctp:api:type:Order).
   *
   *
   */
  readonly returnInfo: ReturnInfo
}
/**
 *	Generated after a successful [Set ReturnInfo](ctp:api:type:OrderSetReturnInfoAction) update action on [Orders](ctp:api:type:Order) and [Order Edits](ctp:api:type:OrderEdit).
 *
 */
export interface ReturnInfoSetMessage extends IOrderMessage {
  readonly type: 'ReturnInfoSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The [ReturnInfo](ctp:api:type:ReturnInfo) that was set on the [Order](ctp:api:type:Order) or [Order Edit](ctp:api:type:OrderEdit).
   *
   *
   */
  readonly returnInfo?: ReturnInfo[]
}
/**
 *	Generated after a successful [Create Review](ctp:api:endpoint:/{projectKey}/reviews:POST) request.
 *
 */
export interface ReviewCreatedMessage extends IMessage {
  readonly type: 'ReviewCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Review](ctp:api:type:Review) that was created.
   *
   *
   */
  readonly review: Review
}
/**
 *	Generated after a successful [Set Rating](ctp:api:type:ReviewSetRatingAction) update action.
 *
 */
export interface ReviewRatingSetMessage extends IMessage {
  readonly type: 'ReviewRatingSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The `rating` of the [Review](ctp:api:type:Review) before the [Set Rating](ctp:api:type:ReviewSetRatingAction) update action.
   *
   *
   */
  readonly oldRating?: number
  /**
   *	The `rating` of the [Review](ctp:api:type:Review) after the [Set Rating](ctp:api:type:ReviewSetRatingAction) update action.
   *
   *
   */
  readonly newRating?: number
  /**
   *	Whether the [Review](ctp:api:type:Review) was taken into account in the ratings statistics of the target.
   *
   *
   */
  readonly includedInStatistics: boolean
  /**
   *	[Reference](ctp:api:type:Reference) to the resource that the [Review](ctp:api:type:Review) belongs to.
   *
   *
   */
  readonly target?: Reference
}
/**
 *	Generated after a successful [Transition State](ctp:api:type:ReviewTransitionStateAction) update action.
 *
 */
export interface ReviewStateTransitionMessage extends IMessage {
  readonly type: 'ReviewStateTransition'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[State](ctp:api:type:State) of the [Review](ctp:api:type:Review) before the [Transition State](ctp:api:type:ReviewTransitionStateAction) update action.
   *
   *
   */
  readonly oldState?: StateReference
  /**
   *	[State](ctp:api:type:State) of the [Review](ctp:api:type:Review) after the [Transition State](ctp:api:type:ReviewTransitionStateAction) update action.
   *
   *
   */
  readonly newState: StateReference
  /**
   *	Whether the old [Review](ctp:api:type:Review) was taken into account in the rating statistics of the target before the state transition.
   *
   *
   */
  readonly oldIncludedInStatistics: boolean
  /**
   *	Whether the new [Review](ctp:api:type:Review) was taken into account in the rating statistics of the target after the state transition.
   *
   *
   */
  readonly newIncludedInStatistics: boolean
  /**
   *	[Reference](ctp:api:type:Reference) to the resource that the [Review](ctp:api:type:Review) belongs to.
   *
   *
   */
  readonly target?: Reference
  /**
   *	Whether [State](ctp:api:type:State) transition validations were turned off during the [Transition State](ctp:api:type:ReviewTransitionStateAction) update action.
   *
   *
   */
  readonly force: boolean
}
export type ShoppingListMessage =
  | ShoppingListLineItemAddedMessage
  | ShoppingListLineItemRemovedMessage
export interface IShoppingListMessage {
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	[Message Type](/../api/projects/messages#message-types) of the Message.
   *
   *
   */
  readonly type: string
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
}
/**
 *	Generated after a successful [Add ShoppingListLineItem](ctp:api:type:ShoppingListAddLineItemAction) update action.
 *
 */
export interface ShoppingListLineItemAddedMessage extends IShoppingListMessage {
  readonly type: 'ShoppingListLineItemAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Line Item](ctp:api:type:ShoppingListLineItem) that was added to the [ShoppingList](ctp:api:type:ShoppingList).
   *
   *
   */
  readonly lineItem: ShoppingListLineItem
}
/**
 *	Generated after a successful [Remove ShoppingListLineItem](ctp:api:type:ShoppingListRemoveLineItemAction) update action.
 *
 */
export interface ShoppingListLineItemRemovedMessage
  extends IShoppingListMessage {
  readonly type: 'ShoppingListLineItemRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Line Item](ctp:api:type:ShoppingListLineItem) that was removed from the [ShoppingList](ctp:api:type:ShoppingList).
   *
   *
   */
  readonly lineItem: ShoppingListLineItem
}
/**
 *	Generated after a successful [Create StagedQuote](ctp:api:endpoint:/{projectKey}/staged-quotes:POST) request.
 *
 */
export interface StagedQuoteCreatedMessage extends IMessage {
  readonly type: 'StagedQuoteCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Staged Quote](/../api/projects/staged-quotes) that was created.
   *
   *
   */
  readonly stagedQuote: StagedQuote
}
/**
 *	Generated after a successful [Delete StagedQuote](/../api/projects/staged-quotes#delete-stagedquote) request.
 *
 */
export interface StagedQuoteDeletedMessage extends IMessage {
  readonly type: 'StagedQuoteDeleted'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
}
/**
 *	Generated after a successful [Set Seller Comment](ctp:api:type:StagedQuoteSetSellerCommentAction) update action.
 *
 */
export interface StagedQuoteSellerCommentSetMessage extends IMessage {
  readonly type: 'StagedQuoteSellerCommentSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	`sellerComment` on the [StagedQuote](ctp:api:type:StagedQuote) after a successful [Set Seller Comment](ctp:api:type:StagedQuoteSetSellerCommentAction) update action.
   *
   *
   */
  readonly sellerComment: string
}
/**
 *	Generated after a successful [Change Staged Quote State](ctp:api:type:StagedQuoteChangeStagedQuoteStateAction) update action.
 *
 */
export interface StagedQuoteStateChangedMessage extends IMessage {
  readonly type: 'StagedQuoteStateChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	State of the Staged Quote after the [Change Staged Quote State](ctp:api:type:StagedQuoteChangeStagedQuoteStateAction) update action.
   *
   *
   */
  readonly stagedQuoteState: StagedQuoteState
  /**
   *	State of the Staged Quote before the [Change Staged Quote State](ctp:api:type:StagedQuoteChangeStagedQuoteStateAction) update action.
   *
   *
   */
  readonly oldStagedQuoteState: StagedQuoteState
}
/**
 *	Generated after a successful [Transition State](ctp:api:type:StagedQuoteTransitionStateAction) update action.
 *
 */
export interface StagedQuoteStateTransitionMessage extends IMessage {
  readonly type: 'StagedQuoteStateTransition'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[State](ctp:api:type:State) of the [Quote](ctp:api:type:Quote) after the [Transition State](ctp:api:type:StagedQuoteTransitionStateAction) update action.
   *
   *
   */
  readonly state: StateReference
  /**
   *	[State](ctp:api:type:State) of the [Quote](ctp:api:type:Quote) before the [Transition State](ctp:api:type:StagedQuoteTransitionStateAction) update action.
   *
   *
   */
  readonly oldState?: StateReference
  /**
   *	Whether [State](ctp:api:type:State) transition validations were turned off during the [Transition State](ctp:api:type:StagedQuoteTransitionStateAction) update action.
   *
   *
   */
  readonly force: boolean
}
/**
 *	Generated after a successful [Set Valid To](ctp:api:type:StagedQuoteSetValidToAction) update action.
 *
 */
export interface StagedQuoteValidToSetMessage extends IMessage {
  readonly type: 'StagedQuoteValidToSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Expiration date for the Staged Quote after the [Set Valid To](ctp:api:type:StagedQuoteSetValidToAction) update action.
   *
   *
   */
  readonly validTo: string
}
/**
 *	Generated after a successful [Change Active](ctp:api:type:StandalonePriceChangeActiveAction) update action.
 *
 */
export interface StandalonePriceActiveChangedMessage extends IMessage {
  readonly type: 'StandalonePriceActiveChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Value of the `active` field of the StandalonePrice after the [Change Active](ctp:api:type:StandalonePriceChangeActiveAction) update action.
   *
   *
   */
  readonly active: boolean
  /**
   *	Value of the `active` field of the StandalonePrice before the [Change Active](ctp:api:type:StandalonePriceChangeActiveAction) update action.
   *
   *
   */
  readonly oldActive: boolean
}
/**
 *	Generated after a successful [Create StandalonePrice](ctp:api:endpoint:/{projectKey}/standalone-prices:POST) request.
 *
 */
export interface StandalonePriceCreatedMessage extends IMessage {
  readonly type: 'StandalonePriceCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Standalone Price](ctp:api:type:StandalonePrice) that was created.
   *
   *
   */
  readonly standalonePrice: StandalonePrice
}
/**
 *	Generated after a successful [Delete StandalonePrice](/../api/projects/standalone-prices#delete-standaloneprice) request.
 *
 */
export interface StandalonePriceDeletedMessage extends IMessage {
  readonly type: 'StandalonePriceDeleted'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	SKU of the [ProductVariant](ctp:api:type:ProductVariant) to which the deleted Standalone Price was associated.
   *
   *
   */
  readonly sku: string
}
/**
 *	Generated after a [Product Discount](ctp:api:type:ProductDiscount) is successfully applied to a StandalonePrice.
 *
 */
export interface StandalonePriceDiscountSetMessage extends IMessage {
  readonly type: 'StandalonePriceDiscountSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The new `discounted` value of the updated [StandalonePrice](ctp:api:type:StandalonePrice).
   *
   *
   */
  readonly discounted?: DiscountedPrice
}
/**
 *	Generated after a successful [Set Discounted Price](ctp:api:type:StandalonePriceSetDiscountedPriceAction) update action.
 *
 */
export interface StandalonePriceExternalDiscountSetMessage extends IMessage {
  readonly type: 'StandalonePriceExternalDiscountSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The `discounted` value of the [StandalonePrice](ctp:api:type:StandalonePrice) after the [Set Discounted Price](ctp:api:type:StandalonePriceSetDiscountedPriceAction) update action.
   *
   *
   */
  readonly discounted?: DiscountedPrice
}
/**
 *	Generated after a successful [Set Key](ctp:api:type:StandalonePriceSetKeyAction) update action.
 *
 */
export interface StandalonePriceKeySetMessage extends IMessage {
  readonly type: 'StandalonePriceKeySet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	`key` value of the [StandalonePrice](ctp:api:type:StandalonePrice) after the [Set Key](ctp:api:type:StandalonePriceSetKeyAction) update action.
   *
   *
   */
  readonly key?: string
  /**
   *	`key` value of the [StandalonePrice](ctp:api:type:StandalonePrice) before the [Set Key](ctp:api:type:StandalonePriceSetKeyAction) update action.
   *
   *
   */
  readonly oldKey?: string
}
/**
 *	Generated after a successful [Apply Staged Changes](ctp:api:type:StandalonePriceApplyStagedChangesAction) update action.
 *
 */
export interface StandalonePriceStagedChangesAppliedMessage extends IMessage {
  readonly type: 'StandalonePriceStagedChangesApplied'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Applied changes of the [StandalonePrice](/../api/projects/standalone-prices) after the [Apply Staged Changes](ctp:api:type:StandalonePriceApplyStagedChangesAction) update action.
   *
   *
   */
  readonly stagedChanges: StagedStandalonePrice
}
/**
 *	Generated after a successful [Remove Staged Changes](ctp:api:type:StandalonePriceRemoveStagedChangesAction) update action.
 *
 */
export interface StandalonePriceStagedChangesRemovedMessage extends IMessage {
  readonly type: 'StandalonePriceStagedChangesRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Removed changes of the [StandalonePrice](ctp:api:type:StandalonePrice) after the [Remove Staged Changes](ctp:api:type:StandalonePriceRemoveStagedChangesAction) update action.
   *
   *
   */
  readonly stagedChanges: StagedStandalonePrice
}
/**
 *	Generated after a successful [Add Price Tier](ctp:api:type:StandalonePriceAddPriceTierAction) update action
 *
 */
export interface StandalonePriceTierAddedMessage extends IMessage {
  readonly type: 'StandalonePriceTierAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The [Price Tier](ctp:api:type:PriceTier) that has been added to the array field `tiers` for the [StandalonePrice](ctp:api:type:StandalonePrice).
   *
   *
   */
  readonly tier: PriceTier
}
/**
 *	Generated after a successful [Remove Price Tier](ctp:api:type:StandalonePriceRemovePriceTierAction) update action
 *
 */
export interface StandalonePriceTierRemovedMessage extends IMessage {
  readonly type: 'StandalonePriceTierRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The [Price Tier](ctp:api:type:PriceTier) that has been removed from the array field `tiers` for the [StandalonePrice](ctp:api:type:StandalonePrice).
   *
   *
   */
  readonly removedTier: PriceTier
}
/**
 *	Generated after a successful [Set Price Tier](ctp:api:type:StandalonePriceSetPriceTiersAction) update action
 *
 */
export interface StandalonePriceTiersSetMessage extends IMessage {
  readonly type: 'StandalonePriceTiersSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The updated content of the field `tiers` of the affected [StandalonePrice](ctp:api:type:StandalonePrice).
   *
   *
   */
  readonly tiers: PriceTier[]
  /**
   *	The previous content of the field `tiers` of the affected [StandalonePrice](ctp:api:type:StandalonePrice).
   *
   *
   */
  readonly previousTiers: PriceTier[]
}
/**
 *	Generated after a successful [Set Valid From and Until](ctp:api:type:StandalonePriceSetValidFromAndUntilAction) update action.
 *
 */
export interface StandalonePriceValidFromAndUntilSetMessage extends IMessage {
  readonly type: 'StandalonePriceValidFromAndUntilSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Value of [StandalonePrice](ctp:api:type:StandalonePrice) `validFrom` after the [Set Valid From and Until](ctp:api:type:StandalonePriceSetValidFromAndUntilAction) update action.
   *
   *
   */
  readonly validFrom?: string
  /**
   *	Value of [StandalonePrice](ctp:api:type:StandalonePrice) `validFrom` before the [Set Valid From and Until](ctp:api:type:StandalonePriceSetValidFromAndUntilAction) update action.
   *
   *
   */
  readonly previousValidFrom?: string
  /**
   *	Value of [StandalonePrice](ctp:api:type:StandalonePrice) `validUntil` after the [Set Valid From and Until](ctp:api:type:StandalonePriceSetValidFromAndUntilAction) update action.
   *
   *
   */
  readonly validUntil?: string
  /**
   *	Value of [StandalonePrice](ctp:api:type:StandalonePrice) `validUntil` before the [Set Valid From and Until](ctp:api:type:StandalonePriceSetValidFromAndUntilAction) update action.
   *
   *
   */
  readonly previousValidUntil?: string
}
/**
 *	Generated after a successful [Set Valid From](ctp:api:type:StandalonePriceSetValidFromAction) update action.
 *
 */
export interface StandalonePriceValidFromSetMessage extends IMessage {
  readonly type: 'StandalonePriceValidFromSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Value of [StandalonePrice](ctp:api:type:StandalonePrice) `validFrom` after the [Set Valid From](ctp:api:type:StandalonePriceSetValidFromAction) update action.
   *
   *
   */
  readonly validFrom?: string
  /**
   *	Value of [StandalonePrice](ctp:api:type:StandalonePrice) `validFrom` before the [Set Valid From](ctp:api:type:StandalonePriceSetValidFromAction) update action.
   *
   *
   */
  readonly previousValidFrom?: string
}
/**
 *	Generated after a successful [Set Valid Until](ctp:api:type:StandalonePriceSetValidUntilAction) update action.
 *
 */
export interface StandalonePriceValidUntilSetMessage extends IMessage {
  readonly type: 'StandalonePriceValidUntilSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Value of [StandalonePrice](ctp:api:type:StandalonePrice) `validUntil` after the [Set Valid Until](ctp:api:type:StandalonePriceSetValidUntilAction) update action.
   *
   *
   */
  readonly validUntil?: string
  /**
   *	Value of [StandalonePrice](ctp:api:type:StandalonePrice) `validUntil` before the [Set Valid Until](ctp:api:type:StandalonePriceSetValidUntilAction) update action.
   *
   *
   */
  readonly previousValidUntil?: string
}
/**
 *	Generated after a successful [Change Value](ctp:api:type:StandalonePriceChangeValueAction) update action.
 *
 */
export interface StandalonePriceValueChangedMessage extends IMessage {
  readonly type: 'StandalonePriceValueChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The new value of the updated [StandalonePrice](ctp:api:type:StandalonePrice).
   *
   *
   */
  readonly value: TypedMoney
  /**
   *	Whether the new value was applied to the current or the staged representation of the StandalonePrice. Staged changes are stored on the [StagedStandalonePrice](ctp:api:type:StagedStandalonePrice).
   *
   *
   */
  readonly staged: boolean
  /**
   *	The old value of the updated [StandalonePrice](ctp:api:type:StandalonePrice).
   *	Present on Messages created after 3 February 2023. Optional for backwards compatibility.
   *
   *
   */
  readonly oldValue?: TypedMoney
}
/**
 *	Generated after a successful [Add Country](ctp:api:type:StoreAddCountryAction),
 *	[Remove Country](ctp:api:type:StoreRemoveCountryAction), or
 *	[Set Countries](ctp:api:type:StoreSetCountriesAction) update action.
 *
 */
export interface StoreCountriesChangedMessage extends IMessage {
  readonly type: 'StoreCountriesChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Countries](ctp:api:type:StoreCountry) added to the [Store](ctp:api:type:Store).
   *
   *
   */
  readonly addedCountries?: StoreCountry[]
  /**
   *	[Countries](ctp:api:type:StoreCountry) removed from the [Store](ctp:api:type:Store).
   *
   *
   */
  readonly removedCountries?: StoreCountry[]
}
/**
 *	Generated after a successful [Create Store](ctp:api:endpoint:/{projectKey}/stores:POST) request.
 *
 */
export interface StoreCreatedMessage extends IMessage {
  readonly type: 'StoreCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The `name` of the [Store](ctp:api:type:Store) that was created.
   *
   *
   */
  readonly name?: LocalizedString
  /**
   *	Languages of the [Store](ctp:api:type:Store) that was created. Languages are represented as [IETF language tags](https://en.wikipedia.org/wiki/IETF_language_tag).
   *
   *
   */
  readonly languages?: string[]
  /**
   *	[Countries](ctp:api:type:StoreCountry) of the [Store](ctp:api:type:Store) that was created.
   *
   *
   */
  readonly countries?: StoreCountry[]
  /**
   *	[Distribution Channels](ctp:api:type:ChannelRoleEnum) of the [Store](ctp:api:type:Store) that was created.
   *
   *
   */
  readonly distributionChannels: ChannelReference[]
  /**
   *	[Supply Channels](ctp:api:type:ChannelRoleEnum) of the [Store](ctp:api:type:Store) that was created.
   *
   *
   */
  readonly supplyChannels: ChannelReference[]
  /**
   *	[ProductSelectionSettings](ctp:api:type:ProductSelectionSetting) of the [Store](ctp:api:type:Store) that was created.
   *
   *
   */
  readonly productSelections: ProductSelectionSetting[]
  /**
   *	[Custom Fields](ctp:api:type:CustomFields) on the [Store](ctp:api:type:Store) that was created.
   *
   *
   */
  readonly custom?: CustomFields
}
/**
 *	Generated after a successful [Delete Store](/../api/projects/stores#delete-store) request.
 *
 */
export interface StoreDeletedMessage extends IMessage {
  readonly type: 'StoreDeleted'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
}
/**
 *	Generated after a successful [Add Distribution Channel](ctp:api:type:StoreAddDistributionChannelAction),
 *	[Remove Distribution Channel](ctp:api:type:StoreRemoveDistributionChannelAction), or
 *	[Set Distribution Channels](ctp:api:type:StoreSetDistributionChannelsAction) update action.
 *
 */
export interface StoreDistributionChannelsChangedMessage extends IMessage {
  readonly type: 'StoreDistributionChannelsChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Product distribution Channels that have been added to the [Store](ctp:api:type:Store).
   *
   */
  readonly addedDistributionChannels?: ChannelReference[]
  /**
   *	Product distribution Channels that have been removed from the [Store](ctp:api:type:Store).
   *
   *
   */
  readonly removedDistributionChannels?: ChannelReference[]
}
/**
 *	Generated after a successful [Set Languages](ctp:api:type:StoreSetLanguagesAction) update action.
 *
 */
export interface StoreLanguagesChangedMessage extends IMessage {
  readonly type: 'StoreLanguagesChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Locales](ctp:api:type:Locale) added to the [Store](ctp:api:type:Store) after the [Set Languages](ctp:api:type:StoreSetLanguagesAction) update action.
   *
   *
   */
  readonly addedLanguages?: string[]
  /**
   *	[Locales](ctp:api:type:Locale) removed from the [Store](ctp:api:type:Store) during the [Set Languages](ctp:api:type:StoreSetLanguagesAction) update action.
   *
   *
   */
  readonly removedLanguages?: string[]
}
/**
 *	Generated after a successful [Set Name](ctp:api:type:StoreSetNameAction) update action.
 *
 */
export interface StoreNameSetMessage extends IMessage {
  readonly type: 'StoreNameSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Name of the [Store](ctp:api:type:Store) set during the [Set Name](ctp:api:type:StoreSetNameAction) update action.
   *
   *
   */
  readonly name?: LocalizedString
  /**
   *	Names set for the [Store](ctp:api:type:Store) in different locales.
   *
   *
   */
  readonly nameAllLocales?: LocalizedString[]
}
/**
 *	Generated by a successful [Add Product Selection](ctp:api:type:StoreAddProductSelectionAction),
 *	[Remove Product Selection](ctp:api:type:StoreRemoveProductSelectionAction),
 *	[Set Product Selections](ctp:api:type:StoreSetProductSelectionsAction),
 *	or [Change Product Selections Active](ctp:api:type:StoreChangeProductSelectionAction) update action.
 *
 */
export interface StoreProductSelectionsChangedMessage extends IMessage {
  readonly type: 'StoreProductSelectionsChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[ProductSelectionSettings](ctp:api:type:ProductSelectionSetting) that were added to the [Store](ctp:api:type:Store).
   *
   *
   */
  readonly addedProductSelections?: ProductSelectionSetting[]
  /**
   *	[ProductSelectionSettings](ctp:api:type:ProductSelectionSetting) that were removed from the [Store](ctp:api:type:Store).
   *
   *
   */
  readonly removedProductSelections?: ProductSelectionSetting[]
  /**
   *	[ProductSelectionSettings](ctp:api:type:ProductSelectionSetting) that were updated in the [Store](ctp:api:type:Store).
   *
   *
   */
  readonly updatedProductSelections?: ProductSelectionSetting[]
}
/**
 *	Generated after a successful [Add Supply Channel](ctp:api:type:StoreAddSupplyChannelAction),
 *	[Remove Supply Channel](ctp:api:type:StoreRemoveSupplyChannelAction), or
 *	[Set Supply Channels](ctp:api:type:StoreSetSupplyChannelsAction) update action.
 *
 */
export interface StoreSupplyChannelsChangedMessage extends IMessage {
  readonly type: 'StoreSupplyChannelsChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	IDs and references that last modified the Message.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	IDs and references that created the Message.
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Inventory supply Channels that have been added to the [Store](ctp:api:type:Store).
   *
   */
  readonly addedSupplyChannels?: ChannelReference[]
  /**
   *	Inventory supply Channels that have been removed from the [Store](ctp:api:type:Store).
   *
   *
   */
  readonly removedSupplyChannels?: ChannelReference[]
}
/**
 *	User-provided identifiers present on the resource for which the Message is created. The value of the identifier stored in the Message corresponds to the one that was set on the resource at the version shown in `resourceVersion`.
 *
 */
export interface UserProvidedIdentifiers {
  /**
   *	User-provided unique identifier of the resource.
   *
   */
  readonly key?: string
  /**
   *	User-provided unique identifier of the resource.
   *
   */
  readonly externalId?: string
  /**
   *	User-provided unique identifier of an [Order](ctp:api:type:Order).
   *
   */
  readonly orderNumber?: string
  /**
   *	User-provided unique identifier of a [Customer](ctp:api:type:Customer).
   *
   */
  readonly customerNumber?: string
  /**
   *	Unique SKU of a [Product Variant](ctp:api:type:ProductVariant).
   *
   */
  readonly sku?: string
  /**
   *	Unique identifier usually used in deep-link URLs for a [Product](ctp:api:type:Product). The value corresponds to the slug in the `current` [Product Projection](ctp:api:type:ProductProjection).
   *
   */
  readonly slug?: LocalizedString
  /**
   *	Unique identifier of a [Custom Object](/../api/projects/custom-objects).
   *
   */
  readonly containerAndKey?: ContainerAndKey
}
export type MessagePayload =
  | ApprovalFlowApprovedMessagePayload
  | ApprovalFlowCompletedMessagePayload
  | ApprovalFlowCreatedMessagePayload
  | ApprovalFlowRejectedMessagePayload
  | ApprovalRuleApproversSetMessagePayload
  | ApprovalRuleCreatedMessagePayload
  | ApprovalRuleDescriptionSetMessagePayload
  | ApprovalRuleKeySetMessagePayload
  | ApprovalRuleNameSetMessagePayload
  | ApprovalRulePredicateSetMessagePayload
  | ApprovalRuleRequestersSetMessagePayload
  | ApprovalRuleStatusSetMessagePayload
  | AssociateRoleBuyerAssignableChangedMessagePayload
  | AssociateRoleCreatedMessagePayload
  | AssociateRoleDeletedMessagePayload
  | AssociateRoleNameSetMessagePayload
  | AssociateRolePermissionAddedMessagePayload
  | AssociateRolePermissionRemovedMessagePayload
  | AssociateRolePermissionsSetMessagePayload
  | BusinessUnitAddressAddedMessagePayload
  | BusinessUnitAddressChangedMessagePayload
  | BusinessUnitAddressCustomFieldAddedMessagePayload
  | BusinessUnitAddressCustomFieldChangedMessagePayload
  | BusinessUnitAddressCustomFieldRemovedMessagePayload
  | BusinessUnitAddressCustomTypeRemovedMessagePayload
  | BusinessUnitAddressCustomTypeSetMessagePayload
  | BusinessUnitAddressRemovedMessagePayload
  | BusinessUnitApprovalRuleModeChangedMessagePayload
  | BusinessUnitAssociateAddedMessagePayload
  | BusinessUnitAssociateChangedMessagePayload
  | BusinessUnitAssociateModeChangedMessagePayload
  | BusinessUnitAssociateRemovedMessagePayload
  | BusinessUnitAssociatesSetMessagePayload
  | BusinessUnitBillingAddressAddedMessagePayload
  | BusinessUnitBillingAddressRemovedMessagePayload
  | BusinessUnitContactEmailSetMessagePayload
  | BusinessUnitCreatedMessagePayload
  | BusinessUnitCustomFieldAddedMessagePayload
  | BusinessUnitCustomFieldChangedMessagePayload
  | BusinessUnitCustomFieldRemovedMessagePayload
  | BusinessUnitCustomTypeRemovedMessagePayload
  | BusinessUnitCustomTypeSetMessagePayload
  | BusinessUnitDefaultBillingAddressSetMessagePayload
  | BusinessUnitDefaultShippingAddressSetMessagePayload
  | BusinessUnitDeletedMessagePayload
  | BusinessUnitNameChangedMessagePayload
  | BusinessUnitParentChangedMessagePayload
  | BusinessUnitShippingAddressAddedMessagePayload
  | BusinessUnitShippingAddressRemovedMessagePayload
  | BusinessUnitStatusChangedMessagePayload
  | BusinessUnitStoreAddedMessagePayload
  | BusinessUnitStoreModeChangedMessagePayload
  | BusinessUnitStoreRemovedMessagePayload
  | BusinessUnitStoresSetMessagePayload
  | BusinessUnitTopLevelUnitSetMessagePayload
  | BusinessUnitTypeSetMessagePayload
  | CartDiscountCreatedMessagePayload
  | CartDiscountDeletedMessagePayload
  | CartDiscountStoreAddedMessagePayload
  | CartDiscountStoreRemovedMessagePayload
  | CartDiscountStoresSetMessagePayload
  | CategoryCreatedMessagePayload
  | CategorySlugChangedMessagePayload
  | CustomLineItemStateTransitionMessagePayload
  | CustomerAddressAddedMessagePayload
  | CustomerAddressChangedMessagePayload
  | CustomerAddressCustomFieldAddedMessagePayload
  | CustomerAddressCustomFieldChangedMessagePayload
  | CustomerAddressCustomFieldRemovedMessagePayload
  | CustomerAddressCustomTypeRemovedMessagePayload
  | CustomerAddressCustomTypeSetMessagePayload
  | CustomerAddressRemovedMessagePayload
  | CustomerCompanyNameSetMessagePayload
  | CustomerCreatedMessagePayload
  | CustomerCustomFieldAddedMessagePayload
  | CustomerCustomFieldChangedMessagePayload
  | CustomerCustomFieldRemovedMessagePayload
  | CustomerCustomTypeRemovedMessagePayload
  | CustomerCustomTypeSetMessagePayload
  | CustomerDateOfBirthSetMessagePayload
  | CustomerDeletedMessagePayload
  | CustomerEmailChangedMessagePayload
  | CustomerEmailTokenCreatedMessagePayload
  | CustomerEmailVerifiedMessagePayload
  | CustomerFirstNameSetMessagePayload
  | CustomerGroupAssignmentAddedMessagePayload
  | CustomerGroupAssignmentRemovedMessagePayload
  | CustomerGroupAssignmentsSetMessagePayload
  | CustomerGroupCustomFieldAddedMessagePayload
  | CustomerGroupCustomFieldChangedMessagePayload
  | CustomerGroupCustomFieldRemovedMessagePayload
  | CustomerGroupCustomTypeRemovedMessagePayload
  | CustomerGroupCustomTypeSetMessagePayload
  | CustomerGroupSetMessagePayload
  | CustomerLastNameSetMessagePayload
  | CustomerPasswordTokenCreatedMessagePayload
  | CustomerPasswordUpdatedMessagePayload
  | CustomerTitleSetMessagePayload
  | DeliveryAddedMessagePayload
  | DeliveryAddressSetMessagePayload
  | DeliveryCustomFieldAddedMessagePayload
  | DeliveryCustomFieldChangedMessagePayload
  | DeliveryCustomFieldRemovedMessagePayload
  | DeliveryCustomTypeRemovedMessagePayload
  | DeliveryCustomTypeSetMessagePayload
  | DeliveryItemsUpdatedMessagePayload
  | DeliveryRemovedMessagePayload
  | DiscountCodeCreatedMessagePayload
  | DiscountCodeDeletedMessagePayload
  | DiscountCodeKeySetMessagePayload
  | DiscountGroupCreatedMessagePayload
  | DiscountGroupDeletedMessagePayload
  | DiscountGroupKeySetMessagePayload
  | DiscountGroupSortOrderSetMessagePayload
  | InventoryEntryCreatedMessagePayload
  | InventoryEntryDeletedMessagePayload
  | InventoryEntryQuantitySetMessagePayload
  | LineItemStateTransitionMessagePayload
  | OrderBillingAddressSetMessagePayload
  | OrderBusinessUnitSetMessagePayload
  | OrderCreatedMessagePayload
  | OrderCustomFieldAddedMessagePayload
  | OrderCustomFieldChangedMessagePayload
  | OrderCustomFieldRemovedMessagePayload
  | OrderCustomLineItemAddedMessagePayload
  | OrderCustomLineItemDiscountSetMessagePayload
  | OrderCustomLineItemQuantityChangedMessagePayload
  | OrderCustomLineItemRemovedMessagePayload
  | OrderCustomTypeRemovedMessagePayload
  | OrderCustomTypeSetMessagePayload
  | OrderCustomerEmailSetMessagePayload
  | OrderCustomerGroupSetMessagePayload
  | OrderCustomerSetMessagePayload
  | OrderDeletedMessagePayload
  | OrderDiscountCodeAddedMessagePayload
  | OrderDiscountCodeRemovedMessagePayload
  | OrderDiscountCodeStateSetMessagePayload
  | OrderEditAppliedMessagePayload
  | OrderImportedMessagePayload
  | OrderLineItemAddedMessagePayload
  | OrderLineItemDiscountSetMessagePayload
  | OrderLineItemDistributionChannelSetMessagePayload
  | OrderLineItemRemovedMessagePayload
  | OrderMessagePayload
  | OrderPaymentAddedMessagePayload
  | OrderPaymentStateChangedMessagePayload
  | OrderPurchaseOrderNumberSetMessagePayload
  | OrderReturnShipmentStateChangedMessagePayload
  | OrderShipmentStateChangedMessagePayload
  | OrderShippingAddressSetMessagePayload
  | OrderShippingInfoSetMessagePayload
  | OrderShippingRateInputSetMessagePayload
  | OrderStateChangedMessagePayload
  | OrderStateTransitionMessagePayload
  | OrderStoreSetMessagePayload
  | ParcelAddedToDeliveryMessagePayload
  | ParcelItemsUpdatedMessagePayload
  | ParcelMeasurementsUpdatedMessagePayload
  | ParcelRemovedFromDeliveryMessagePayload
  | ParcelTrackingDataUpdatedMessagePayload
  | PaymentCreatedMessagePayload
  | PaymentInteractionAddedMessagePayload
  | PaymentStatusInterfaceCodeSetMessagePayload
  | PaymentStatusStateTransitionMessagePayload
  | PaymentTransactionAddedMessagePayload
  | PaymentTransactionStateChangedMessagePayload
  | ProductAddedToCategoryMessagePayload
  | ProductCreatedMessagePayload
  | ProductDeletedMessagePayload
  | ProductImageAddedMessagePayload
  | ProductPriceAddedMessagePayload
  | ProductPriceChangedMessagePayload
  | ProductPriceCustomFieldAddedMessagePayload
  | ProductPriceCustomFieldChangedMessagePayload
  | ProductPriceCustomFieldRemovedMessagePayload
  | ProductPriceCustomFieldsRemovedMessagePayload
  | ProductPriceCustomFieldsSetMessagePayload
  | ProductPriceDiscountsSetMessagePayload
  | ProductPriceExternalDiscountSetMessagePayload
  | ProductPriceKeySetMessagePayload
  | ProductPriceModeSetMessagePayload
  | ProductPriceRemovedMessagePayload
  | ProductPricesSetMessagePayload
  | ProductPublishedMessagePayload
  | ProductRemovedFromCategoryMessagePayload
  | ProductRevertedStagedChangesMessagePayload
  | ProductSelectionCreatedMessagePayload
  | ProductSelectionDeletedMessagePayload
  | ProductSelectionProductAddedMessagePayload
  | ProductSelectionProductExcludedMessagePayload
  | ProductSelectionProductRemovedMessagePayload
  | ProductSelectionVariantExclusionChangedMessagePayload
  | ProductSelectionVariantSelectionChangedMessagePayload
  | ProductSlugChangedMessagePayload
  | ProductStateTransitionMessagePayload
  | ProductTailoringCreatedMessagePayload
  | ProductTailoringDeletedMessagePayload
  | ProductTailoringDescriptionSetMessagePayload
  | ProductTailoringImageAddedMessagePayload
  | ProductTailoringImagesSetMessagePayload
  | ProductTailoringNameSetMessagePayload
  | ProductTailoringPublishedMessagePayload
  | ProductTailoringSlugSetMessagePayload
  | ProductTailoringUnpublishedMessagePayload
  | ProductUnpublishedMessagePayload
  | ProductVariantAddedMessagePayload
  | ProductVariantDeletedMessagePayload
  | ProductVariantTailoringAddedMessagePayload
  | ProductVariantTailoringRemovedMessagePayload
  | QuoteCreatedMessagePayload
  | QuoteCustomerChangedMessagePayload
  | QuoteDeletedMessagePayload
  | QuoteRenegotiationRequestedMessagePayload
  | QuoteRequestCreatedMessagePayload
  | QuoteRequestCustomerChangedMessagePayload
  | QuoteRequestDeletedMessagePayload
  | QuoteRequestStateChangedMessagePayload
  | QuoteRequestStateTransitionMessagePayload
  | QuoteStateChangedMessagePayload
  | QuoteStateTransitionMessagePayload
  | ReturnInfoAddedMessagePayload
  | ReturnInfoSetMessagePayload
  | ReviewCreatedMessagePayload
  | ReviewRatingSetMessagePayload
  | ReviewStateTransitionMessagePayload
  | ShoppingListLineItemAddedMessagePayload
  | ShoppingListLineItemRemovedMessagePayload
  | ShoppingListMessagePayload
  | ShoppingListStoreSetMessagePayload
  | StagedQuoteCreatedMessagePayload
  | StagedQuoteDeletedMessagePayload
  | StagedQuoteSellerCommentSetMessagePayload
  | StagedQuoteStateChangedMessagePayload
  | StagedQuoteStateTransitionMessagePayload
  | StagedQuoteValidToSetMessagePayload
  | StandalonePriceActiveChangedMessagePayload
  | StandalonePriceCreatedMessagePayload
  | StandalonePriceDeletedMessagePayload
  | StandalonePriceDiscountSetMessagePayload
  | StandalonePriceExternalDiscountSetMessagePayload
  | StandalonePriceKeySetMessagePayload
  | StandalonePriceStagedChangesAppliedMessagePayload
  | StandalonePriceStagedChangesRemovedMessagePayload
  | StandalonePriceTierAddedMessagePayload
  | StandalonePriceTierRemovedMessagePayload
  | StandalonePriceTiersSetMessagePayload
  | StandalonePriceValidFromAndUntilSetMessagePayload
  | StandalonePriceValidFromSetMessagePayload
  | StandalonePriceValidUntilSetMessagePayload
  | StandalonePriceValueChangedMessagePayload
  | StoreCountriesChangedMessagePayload
  | StoreCreatedMessagePayload
  | StoreDeletedMessagePayload
  | StoreDistributionChannelsChangedMessagePayload
  | StoreLanguagesChangedMessagePayload
  | StoreNameSetMessagePayload
  | StoreProductSelectionsChangedMessagePayload
  | StoreSupplyChannelsChangedMessagePayload
export interface IMessagePayload {
  /**
   *
   */
  readonly type: string
}
/**
 *	Generated after an [approval in the Approval Flow](/projects/approval-flows#approve).
 *
 */
export interface ApprovalFlowApprovedMessagePayload extends IMessagePayload {
  readonly type: 'ApprovalFlowApproved'
  /**
   *	[Reference](ctp:api:type:Reference) to the [Customer](ctp:api:type:Customer) who approved the [Approval Flow](/projects/approval-flows).
   *
   *
   */
  readonly associate: CustomerReference
  /**
   *	[Reference](ctp:api:type:Reference) to the [Order](ctp:api:type:Order) that received the approval.
   *
   *
   */
  readonly order: OrderReference
}
/**
 *	Generated after an [Approval Flow](ctp:api:type:ApprovalFlow) is completed and reaches a final status.
 *
 */
export interface ApprovalFlowCompletedMessagePayload extends IMessagePayload {
  readonly type: 'ApprovalFlowCompleted'
  /**
   *	Final status of the [Approval Flow](ctp:api:type:ApprovalFlow).
   *
   *
   */
  readonly status: ApprovalFlowStatus
  /**
   *	[Reference](ctp:api:type:Reference) to the [Order](ctp:api:type:Order) related to the completed [Approval Flow](ctp:api:type:ApprovalFlow).
   *
   *
   */
  readonly order: OrderReference
}
/**
 *	Generated after an [Approval Flow](ctp:api:type:ApprovalFlow) is created.
 *
 */
export interface ApprovalFlowCreatedMessagePayload extends IMessagePayload {
  readonly type: 'ApprovalFlowCreated'
  /**
   *	The [Approval Flow](ctp:api:type:ApprovalFlow) that was created.
   *
   *
   */
  readonly approvalFlow: ApprovalFlow
}
/**
 *	Generated after an [Approval Flow is rejected](/projects/approval-flows#reject).
 *
 */
export interface ApprovalFlowRejectedMessagePayload extends IMessagePayload {
  readonly type: 'ApprovalFlowRejected'
  /**
   *	[Reference](ctp:api:type:Reference) to the [Customer](ctp:api:type:Customer) who rejected the [Approval Flow](/projects/approval-flows).
   *
   *
   */
  readonly associate: CustomerReference
  /**
   *	Description of the reason why the [Approval Flow](ctp:api:type:ApprovalFlow) was rejected.
   *
   *
   */
  readonly rejectionReason?: string
  /**
   *	[Reference](ctp:api:type:Reference) to the [Order](ctp:api:type:Order) that received the rejection.
   *
   *
   */
  readonly order: OrderReference
}
/**
 *	Generated after a successful [Set Approvers](ctp:api:type:ApprovalRuleSetApproversAction) update action.
 *
 */
export interface ApprovalRuleApproversSetMessagePayload
  extends IMessagePayload {
  readonly type: 'ApprovalRuleApproversSet'
  /**
   *	Approver hierarchy of the [ApprovalRule](ctp:api:type:ApprovalRule) after the [Set Approvers](ctp:api:type:ApprovalRuleSetApproversAction) update action.
   *
   *
   */
  readonly approvers: ApproverHierarchy
  /**
   *	Approver hierarchy of the [ApprovalRule](ctp:api:type:ApprovalRule) before the [Set Approvers](ctp:api:type:ApprovalRuleSetApproversAction) update action.
   *
   *
   */
  readonly oldApprovers: ApproverHierarchy
}
/**
 *	Generated after an [Approval Rule](ctp:api:type:ApprovalRule) is created.
 *
 */
export interface ApprovalRuleCreatedMessagePayload extends IMessagePayload {
  readonly type: 'ApprovalRuleCreated'
  /**
   *	The [Approval Rule](ctp:api:type:ApprovalRule) that was created.
   *
   *
   */
  readonly approvalRule: ApprovalRule
}
/**
 *	Generated after a successful [Set Description](ctp:api:type:ApprovalRuleSetDescriptionAction) update action.
 *
 */
export interface ApprovalRuleDescriptionSetMessagePayload
  extends IMessagePayload {
  readonly type: 'ApprovalRuleDescriptionSet'
  /**
   *	Description of the [ApprovalRule](ctp:api:type:ApprovalRule) after the [Set Description](ctp:api:type:ApprovalRuleSetDescriptionAction) update action.
   *
   *
   */
  readonly description?: string
  /**
   *	Description of the [ApprovalRule](ctp:api:type:ApprovalRule) before the [Set Description](ctp:api:type:ApprovalRuleSetDescriptionAction) update action.
   *
   *
   */
  readonly oldDescription?: string
}
/**
 *	Generated after a successful [Set Key](ctp:api:type:ApprovalRuleSetKeyAction) update action.
 *
 */
export interface ApprovalRuleKeySetMessagePayload extends IMessagePayload {
  readonly type: 'ApprovalRuleKeySet'
  /**
   *	`key` value of the [ApprovalRule](ctp:api:type:ApprovalRule) after the [Set Key](ctp:api:type:ApprovalRuleSetKeyAction) update action.
   *
   *
   */
  readonly key?: string
  /**
   *	`key` value of the [ApprovalRule](ctp:api:type:ApprovalRule) before the [Set Key](ctp:api:type:ApprovalRuleSetKeyAction) update action.
   *
   *
   */
  readonly oldKey?: string
}
/**
 *	Generated after a successful [Set Name](ctp:api:type:ApprovalRuleSetNameAction) update action.
 *
 */
export interface ApprovalRuleNameSetMessagePayload extends IMessagePayload {
  readonly type: 'ApprovalRuleNameSet'
  /**
   *	Name of the [ApprovalRule](ctp:api:type:ApprovalRule) after the [Set Name](ctp:api:type:ApprovalRuleSetNameAction) update action.
   *
   *
   */
  readonly name: string
  /**
   *	Name of the [ApprovalRule](ctp:api:type:ApprovalRule) before the [Set Name](ctp:api:type:ApprovalRuleSetNameAction) update action.
   *
   *
   */
  readonly oldName: string
}
/**
 *	Generated after a successful [Set Predicate](ctp:api:type:ApprovalRuleSetPredicateAction) update action.
 *
 */
export interface ApprovalRulePredicateSetMessagePayload
  extends IMessagePayload {
  readonly type: 'ApprovalRulePredicateSet'
  /**
   *	Name of the [ApprovalRule](ctp:api:type:ApprovalRule) after the [Set Predicate](ctp:api:type:ApprovalRuleSetPredicateAction) update action.
   *
   *
   */
  readonly predicate: string
  /**
   *	Name of the [ApprovalRule](ctp:api:type:ApprovalRule) before the [Set Predicate](ctp:api:type:ApprovalRuleSetPredicateAction) update action.
   *
   *
   */
  readonly oldPredicate: string
}
/**
 *	Generated after a successful [Set Requester](ctp:api:type:ApprovalRuleSetRequestersAction) update action.
 *
 */
export interface ApprovalRuleRequestersSetMessagePayload
  extends IMessagePayload {
  readonly type: 'ApprovalRuleRequestersSet'
  /**
   *	RuleRequester of the [ApprovalRule](ctp:api:type:ApprovalRule) after the [Set Requester](ctp:api:type:ApprovalRuleSetRequestersAction) update action.
   *
   *
   */
  readonly requesters: RuleRequester[]
  /**
   *	RuleRequester of the [ApprovalRule](ctp:api:type:ApprovalRule) after the [Set Requester](ctp:api:type:ApprovalRuleSetRequestersAction) update action.
   *
   *
   */
  readonly oldRequesters: RuleRequester[]
}
/**
 *	Generated after a successful [Set Status](ctp:api:type:ApprovalRuleSetStatusAction) update action.
 *
 */
export interface ApprovalRuleStatusSetMessagePayload extends IMessagePayload {
  readonly type: 'ApprovalRuleStatusSet'
  /**
   *	Status of the [ApprovalRule](ctp:api:type:ApprovalRule) after the [Set Status](ctp:api:type:ApprovalRuleSetStatusAction) update action.
   *
   *
   */
  readonly status: ApprovalRuleStatus
  /**
   *	Status of the [ApprovalRule](ctp:api:type:ApprovalRule) before the [Set Status](ctp:api:type:ApprovalRuleSetStatusAction) update action.
   *
   *
   */
  readonly oldStatus: ApprovalRuleStatus
}
/**
 *	Generated after a successful [Change BuyerAssignable](ctp:api:type:AssociateRoleChangeBuyerAssignableAction) update action.
 *
 */
export interface AssociateRoleBuyerAssignableChangedMessagePayload
  extends IMessagePayload {
  readonly type: 'AssociateRoleBuyerAssignableChanged'
  /**
   *	The new value of the `buyerAssignable` field of the AssociateRole.
   *
   *
   */
  readonly buyerAssignable: boolean
}
/**
 *	Generated after a successful [Create AssociateRole](ctp:api:endpoint:/{projectKey}/associate-roles:POST) request.
 *
 */
export interface AssociateRoleCreatedMessagePayload extends IMessagePayload {
  readonly type: 'AssociateRoleCreated'
  /**
   *	The [AssociateRole](ctp:api:type:AssociateRole) that was created.
   *
   *
   */
  readonly associateRole: AssociateRole
}
/**
 *	Generated after a successful [Delete AssociateRole](/projects/associate-roles#delete-associaterole) request.
 *
 */
export interface AssociateRoleDeletedMessagePayload extends IMessagePayload {
  readonly type: 'AssociateRoleDeleted'
}
/**
 *	Generated after a successful [Set Name](ctp:api:type:AssociateRoleSetNameAction) update action.
 *
 */
export interface AssociateRoleNameSetMessagePayload extends IMessagePayload {
  readonly type: 'AssociateRoleNameSet'
  /**
   *	Updated name of the [AssociateRole](ctp:api:type:AssociateRole).
   *
   *
   */
  readonly name: string
}
/**
 *	Generated after a successful [Add Permissions](ctp:api:type:AssociateRoleAddPermissionAction) update action.
 *
 */
export interface AssociateRolePermissionAddedMessagePayload
  extends IMessagePayload {
  readonly type: 'AssociateRolePermissionAdded'
  /**
   *	The Permission that was added to the AssociateRole.
   *
   *
   */
  readonly permission: Permission
}
/**
 *	Generated after a successful [Remove Permissions](ctp:api:type:AssociateRoleRemovePermissionAction) update action.
 *
 */
export interface AssociateRolePermissionRemovedMessagePayload
  extends IMessagePayload {
  readonly type: 'AssociateRolePermissionRemoved'
  /**
   *	The Permission that was removed from the AssociateRole.
   *
   *
   */
  readonly permission: Permission
}
/**
 *	Generated after a successful [Set Permissions](ctp:api:type:AssociateRoleSetPermissionsAction) update action.
 *
 */
export interface AssociateRolePermissionsSetMessagePayload
  extends IMessagePayload {
  readonly type: 'AssociateRolePermissionsSet'
  /**
   *	Permission assigned to the AssociateRole.
   *
   *
   */
  readonly permissions: Permission[]
}
/**
 *	Generated after a successful [Add Address](ctp:api:type:BusinessUnitAddAddressAction) update action.
 *
 */
export interface BusinessUnitAddressAddedMessagePayload
  extends IMessagePayload {
  readonly type: 'BusinessUnitAddressAdded'
  /**
   *	The address that was added to the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Change Address](ctp:api:type:BusinessUnitChangeAddressAction) update action.
 *
 */
export interface BusinessUnitAddressChangedMessagePayload
  extends IMessagePayload {
  readonly type: 'BusinessUnitAddressChanged'
  /**
   *	Updated address of the Business Unit.
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after adding a Custom Field to an address of a Business Unit using the [Set Address CustomField](ctp:api:type:BusinessUnitSetAddressCustomFieldAction) update action. If a Custom Field already exists with the same name, a [BusinessUnitAddressCustomFieldChanged](ctp:api:type:BusinessUnitAddressCustomFieldChangedMessage) Message is generated instead.
 *
 */
export interface BusinessUnitAddressCustomFieldAddedMessagePayload
  extends IMessagePayload {
  readonly type: 'BusinessUnitAddressCustomFieldAdded'
  /**
   *	Name of the Custom Field that was added.
   *
   *
   */
  readonly name: string
  /**
   *	The added [CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType).
   *
   */
  readonly value: any
  /**
   *	`id` of the [Address](ctp:api:type:Address) to which the Custom Field was added.
   *
   *
   */
  readonly addressId?: string
}
/**
 *	Generated after changing an existing Custom Field on an address of a Business Unit using the [Set Address CustomField](ctp:api:type:BusinessUnitSetAddressCustomFieldAction) update action.
 *
 */
export interface BusinessUnitAddressCustomFieldChangedMessagePayload
  extends IMessagePayload {
  readonly type: 'BusinessUnitAddressCustomFieldChanged'
  /**
   *	Name of the Custom Field that changed.
   *
   *
   */
  readonly name: string
  /**
   *	[CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType) after the [Set CustomField](ctp:api:type:BusinessUnitSetAddressCustomFieldAction) update action.
   *
   *
   */
  readonly value: any
  /**
   *	[CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType) before the [Set CustomField](ctp:api:type:BusinessUnitSetAddressCustomFieldAction) update action.
   *
   *
   */
  readonly oldValue?: any
  /**
   *	`id` of the [Address](ctp:api:type:Address) of which the Custom Field was changed.
   *
   *
   */
  readonly addressId?: string
}
/**
 *	Generated after removing a Custom Field from an address of a Business Unit using the [Set Address CustomField](ctp:api:type:BusinessUnitSetAddressCustomFieldAction) update action.
 *
 */
export interface BusinessUnitAddressCustomFieldRemovedMessagePayload
  extends IMessagePayload {
  readonly type: 'BusinessUnitAddressCustomFieldRemoved'
  /**
   *	Name of the Custom Field that was removed.
   *
   *
   */
  readonly name: string
  /**
   *	`id` of the [Address](ctp:api:type:Address) from which the Custom Field was removed.
   *
   *
   */
  readonly addressId?: string
}
/**
 *	Generated after removing a Custom Type from an address of a Business Unit using the [Set Custom Type in Address](ctp:api:type:BusinessUnitSetAddressCustomTypeAction) update action.
 *
 */
export interface BusinessUnitAddressCustomTypeRemovedMessagePayload
  extends IMessagePayload {
  readonly type: 'BusinessUnitAddressCustomTypeRemoved'
  /**
   *	`id` of the [Custom Type](ctp:api:type:Type) that was removed. Absent if there was no previous Custom Type present.
   *
   *
   */
  readonly oldTypeId?: string
  /**
   *	`id` of the [Address](ctp:api:type:Address) from which the Custom Type was removed.
   *
   *
   */
  readonly addressId?: string
}
/**
 *	Generated after adding a Custom Type to an address of a Business Unit using the [Set Custom Type in Address](ctp:api:type:BusinessUnitSetAddressCustomTypeAction) update action.
 *
 */
export interface BusinessUnitAddressCustomTypeSetMessagePayload
  extends IMessagePayload {
  readonly type: 'BusinessUnitAddressCustomTypeSet'
  /**
   *	The Custom Fields that were set.
   *
   */
  readonly customFields: CustomFields
  /**
   *	`id` of the previous [Custom Type](ctp:api:type:Type). Absent if there was no previous Custom Type present.
   *
   *
   */
  readonly oldTypeId?: string
  /**
   *	`id` of the [Address](ctp:api:type:Address) on which the Custom Field was set.
   *
   *
   */
  readonly addressId?: string
}
/**
 *	Generated after a successful [Remove Address](ctp:api:type:BusinessUnitRemoveAddressAction) update action.
 *
 */
export interface BusinessUnitAddressRemovedMessagePayload
  extends IMessagePayload {
  readonly type: 'BusinessUnitAddressRemoved'
  /**
   *	The address that was removed from the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Change Approval Rule Mode](ctp:api:type:BusinessUnitChangeApprovalRuleModeAction) update action.
 *
 */
export interface BusinessUnitApprovalRuleModeChangedMessagePayload
  extends IMessagePayload {
  readonly type: 'BusinessUnitApprovalRuleModeChanged'
  /**
   *	[BusinessUnitApprovalRuleMode](ctp:api:type:BusinessUnitApprovalRuleMode) of the Business Unit after the [Change Approval Rule Mode](ctp:api:type:BusinessUnitChangeApprovalRuleModeAction) update action.
   *
   *
   */
  readonly approvalRuleMode: BusinessUnitApprovalRuleMode
  /**
   *	[BusinessUnitApprovalRuleMode](ctp:api:type:BusinessUnitApprovalRuleMode) of the Business Unit before the [Change Approval Rule Mode](ctp:api:type:BusinessUnitChangeApprovalRuleModeAction) update action.
   *
   *
   */
  readonly oldApprovalRuleMode?: BusinessUnitApprovalRuleMode
}
/**
 *	Generated after a successful [Add Associate](ctp:api:type:BusinessUnitAddAssociateAction) update action.
 *
 */
export interface BusinessUnitAssociateAddedMessagePayload
  extends IMessagePayload {
  readonly type: 'BusinessUnitAssociateAdded'
  /**
   *	The [Associate](ctp:api:type:Associate) that was added to the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly associate: Associate
}
/**
 *	Generated after a successful [Change Associate](ctp:api:type:BusinessUnitChangeAssociateAction) update action.
 *
 */
export interface BusinessUnitAssociateChangedMessagePayload
  extends IMessagePayload {
  readonly type: 'BusinessUnitAssociateChanged'
  /**
   *	The [Associate](ctp:api:type:Associate) that was updated.
   *
   *
   */
  readonly associate: Associate
}
/**
 *	Generated after a successful [Change Associate Mode](ctp:api:type:BusinessUnitChangeAssociateModeAction) update action.
 *
 */
export interface BusinessUnitAssociateModeChangedMessagePayload
  extends IMessagePayload {
  readonly type: 'BusinessUnitAssociateModeChanged'
  /**
   *	[BusinessUnitAssociateMode](ctp:api:type:BusinessUnitAssociateMode) of the Business Unit after the [Change Associate Mode](ctp:api:type:BusinessUnitChangeAssociateModeAction) update action.
   *
   *
   */
  readonly associateMode: BusinessUnitAssociateMode
  /**
   *	[BusinessUnitAssociateMode](ctp:api:type:BusinessUnitAssociateMode) of the Business Unit before the [Change Associate Mode](ctp:api:type:BusinessUnitChangeAssociateModeAction) update action.
   *
   *
   */
  readonly oldAssociateMode: BusinessUnitAssociateMode
}
/**
 *	Generated after a successful [Remove Associate](ctp:api:type:BusinessUnitRemoveAssociateAction) update action.
 *
 */
export interface BusinessUnitAssociateRemovedMessagePayload
  extends IMessagePayload {
  readonly type: 'BusinessUnitAssociateRemoved'
  /**
   *	The [Associate](ctp:api:type:Associate) that was removed from the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly associate: Associate
}
/**
 *	Generated after a successful [Set Associates](ctp:api:type:BusinessUnitSetAssociatesAction) update action.
 *
 */
export interface BusinessUnitAssociatesSetMessagePayload
  extends IMessagePayload {
  readonly type: 'BusinessUnitAssociatesSet'
  /**
   *	The list of [Associates](ctp:api:type:Associate) that was updated on the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly associates: Associate[]
}
/**
 *	Generated after a successful [Add Billing Address Identifier](ctp:api:type:BusinessUnitAddBillingAddressIdAction) update action.
 *
 */
export interface BusinessUnitBillingAddressAddedMessagePayload
  extends IMessagePayload {
  readonly type: 'BusinessUnitBillingAddressAdded'
  /**
   *	The address that was added to the [Business Unit](ctp:api:type:BusinessUnit) as billing address.
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Remove Billing Address Identifier](ctp:api:type:BusinessUnitRemoveBillingAddressIdAction) update action.
 *
 */
export interface BusinessUnitBillingAddressRemovedMessagePayload
  extends IMessagePayload {
  readonly type: 'BusinessUnitBillingAddressRemoved'
  /**
   *	The address that was removed from the billing addresses of the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Set Contact Email](ctp:api:type:BusinessUnitSetContactEmailAction) update action.
 *
 */
export interface BusinessUnitContactEmailSetMessagePayload
  extends IMessagePayload {
  readonly type: 'BusinessUnitContactEmailSet'
  /**
   *	The contact email that was updated on the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly contactEmail?: string
}
/**
 *	Generated after a successful [Create BusinessUnit](ctp:api:endpoint:/{projectKey}/business-units:POST) request.
 *
 */
export interface BusinessUnitCreatedMessagePayload extends IMessagePayload {
  readonly type: 'BusinessUnitCreated'
  /**
   *	The [Business Unit](ctp:api:type:BusinessUnit) that was created.
   *
   *
   */
  readonly businessUnit: BusinessUnit
}
/**
 *	Generated after adding a Custom Field to a Business Unit using the [Set CustomField](ctp:api:type:BusinessUnitSetCustomFieldAction) update action. If a Custom Field already exists with the same name, a [BusinessUnitCustomFieldChanged](ctp:api:type:BusinessUnitCustomFieldChangedMessage) Message is generated instead.
 *
 */
export interface BusinessUnitCustomFieldAddedMessagePayload
  extends IMessagePayload {
  readonly type: 'BusinessUnitCustomFieldAdded'
  /**
   *	Name of the Custom Field that was added.
   *
   *
   */
  readonly name: string
  /**
   *	The added [CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType).
   *
   */
  readonly value: any
}
/**
 *	Generated after changing an existing Custom Field on a Business Unit using the [Set CustomField](ctp:api:type:BusinessUnitSetCustomFieldAction) update action.
 *
 */
export interface BusinessUnitCustomFieldChangedMessagePayload
  extends IMessagePayload {
  readonly type: 'BusinessUnitCustomFieldChanged'
  /**
   *	Name of the Custom Field that changed.
   *
   *
   */
  readonly name: string
  /**
   *	[CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType) after the [Set CustomField](ctp:api:type:BusinessUnitSetCustomFieldAction) update action.
   *
   *
   */
  readonly value: any
  /**
   *	[CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType) before the [Set CustomField](ctp:api:type:BusinessUnitSetCustomFieldAction) update action.
   *
   *
   */
  readonly oldValue?: any
}
/**
 *	Generated after removing a Custom Field from a Business Unit using the [Set CustomField](ctp:api:type:BusinessUnitSetCustomFieldAction) update action.
 *
 */
export interface BusinessUnitCustomFieldRemovedMessagePayload
  extends IMessagePayload {
  readonly type: 'BusinessUnitCustomFieldRemoved'
  /**
   *	Name of the Custom Field that was removed.
   *
   *
   */
  readonly name: string
}
/**
 *	Generated after removing a Custom Type from a Business Unit using the [Set Custom Type](ctp:api:type:BusinessUnitSetCustomTypeAction) update action.
 *
 */
export interface BusinessUnitCustomTypeRemovedMessagePayload
  extends IMessagePayload {
  readonly type: 'BusinessUnitCustomTypeRemoved'
  /**
   *	`id` of the [Custom Type](ctp:api:type:Type) that was removed. Absent if there was no previous Custom Type present.
   *
   *
   */
  readonly oldTypeId?: string
}
/**
 *	Generated after adding a Custom Type to a Business Unit using the [Set Custom Type](ctp:api:type:BusinessUnitSetCustomTypeAction) update action.
 *
 */
export interface BusinessUnitCustomTypeSetMessagePayload
  extends IMessagePayload {
  readonly type: 'BusinessUnitCustomTypeSet'
  /**
   *	The Custom Fields that were set.
   *
   */
  readonly customFields: CustomFields
  /**
   *	`id` of the previous [Custom Type](ctp:api:type:Type). Absent if there was no previous Custom Type present.
   *
   *
   */
  readonly oldTypeId?: string
}
/**
 *	Generated after a successful [Set Default Billing Address](ctp:api:type:BusinessUnitSetDefaultBillingAddressAction) update action.
 *
 */
export interface BusinessUnitDefaultBillingAddressSetMessagePayload
  extends IMessagePayload {
  readonly type: 'BusinessUnitDefaultBillingAddressSet'
  /**
   *	The address that was set as the default billing address.
   *
   *
   */
  readonly address?: Address
}
/**
 *	Generated after a successful [Set Default Shipping Address](ctp:api:type:BusinessUnitSetDefaultShippingAddressAction) update action.
 *
 */
export interface BusinessUnitDefaultShippingAddressSetMessagePayload
  extends IMessagePayload {
  readonly type: 'BusinessUnitDefaultShippingAddressSet'
  /**
   *	The address that was set as the default shipping address.
   *
   *
   */
  readonly address?: Address
}
/**
 *	Generated after a successful [Delete BusinessUnit](/projects/business-units#delete-businessunit) request.
 *
 */
export interface BusinessUnitDeletedMessagePayload extends IMessagePayload {
  readonly type: 'BusinessUnitDeleted'
}
/**
 *	Generated after a successful [Change Name](ctp:api:type:BusinessUnitChangeNameAction) update action.
 *
 */
export interface BusinessUnitNameChangedMessagePayload extends IMessagePayload {
  readonly type: 'BusinessUnitNameChanged'
  /**
   *	Updated name of the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly name: string
}
/**
 *	Generated after a successful [Change Parent Unit](ctp:api:type:BusinessUnitChangeParentUnitAction) update action.
 *
 */
export interface BusinessUnitParentChangedMessagePayload
  extends IMessagePayload {
  readonly type: 'BusinessUnitParentChanged'
  /**
   *	Parent unit of the [Business Unit](ctp:api:type:BusinessUnit) before the [Change Parent Unit](ctp:api:type:BusinessUnitChangeParentUnitAction) update action.
   *
   *
   */
  readonly oldParentUnit?: BusinessUnitKeyReference
  /**
   *	Parent unit of the [Business Unit](ctp:api:type:BusinessUnit) after the [Change Parent Unit](ctp:api:type:BusinessUnitChangeParentUnitAction) update action.
   *
   *
   */
  readonly newParentUnit?: BusinessUnitKeyReference
}
/**
 *	Generated after a successful [Add Shipping Address Identifier](ctp:api:type:BusinessUnitAddShippingAddressIdAction) update action.
 *
 */
export interface BusinessUnitShippingAddressAddedMessagePayload
  extends IMessagePayload {
  readonly type: 'BusinessUnitShippingAddressAdded'
  /**
   *	The address that was added to the [Business Unit](ctp:api:type:BusinessUnit) as shipping address.
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Remove Shipping Address Identifier](ctp:api:type:BusinessUnitRemoveShippingAddressIdAction) update action.
 *
 */
export interface BusinessUnitShippingAddressRemovedMessagePayload
  extends IMessagePayload {
  readonly type: 'BusinessUnitShippingAddressRemoved'
  /**
   *	The address that was removed from shipping addresses of the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Change Status](ctp:api:type:BusinessUnitChangeStatusAction) update action.
 *
 */
export interface BusinessUnitStatusChangedMessagePayload
  extends IMessagePayload {
  readonly type: 'BusinessUnitStatusChanged'
  /**
   *	Updated status of the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly active: BusinessUnitStatus
}
/**
 *	Generated after a successful [Add Store](ctp:api:type:BusinessUnitAddStoreAction) update action.
 *
 */
export interface BusinessUnitStoreAddedMessagePayload extends IMessagePayload {
  readonly type: 'BusinessUnitStoreAdded'
  /**
   *	The [Store](ctp:api:type:Store) that was added to the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly store: StoreKeyReference
}
/**
 *	Generated after a successful [Set Store Mode](ctp:api:type:BusinessUnitSetStoreModeAction) update action.
 *
 */
export interface BusinessUnitStoreModeChangedMessagePayload
  extends IMessagePayload {
  readonly type: 'BusinessUnitStoreModeChanged'
  /**
   *	[Stores](ctp:api:type:Store) of the [Business Unit](ctp:api:type:BusinessUnit) after the [Set Store Mode](ctp:api:type:BusinessUnitSetStoreModeAction) update action.
   *
   *
   */
  readonly stores: StoreKeyReference[]
  /**
   *	[BusinessUnitStoreMode](ctp:api:type:BusinessUnitStoreMode) of the Business Unit after the [Set Store Mode](ctp:api:type:BusinessUnitSetStoreModeAction) update action.
   *
   *
   */
  readonly storeMode: BusinessUnitStoreMode
  /**
   *	[Stores](ctp:api:type:Store) of the [Business Unit](ctp:api:type:BusinessUnit) before the [Set Store Mode](ctp:api:type:BusinessUnitSetStoreModeAction) update action.
   *
   *
   */
  readonly oldStores: StoreKeyReference[]
  /**
   *	[BusinessUnitStoreMode](ctp:api:type:BusinessUnitStoreMode) of the Business Unit before the [Set Store Mode](ctp:api:type:BusinessUnitSetStoreModeAction) update action.
   *
   *
   */
  readonly oldStoreMode: BusinessUnitStoreMode
}
/**
 *	Generated after a successful [Remove Store](ctp:api:type:BusinessUnitRemoveStoreAction) update action.
 *
 */
export interface BusinessUnitStoreRemovedMessagePayload
  extends IMessagePayload {
  readonly type: 'BusinessUnitStoreRemoved'
  /**
   *	The [Store](ctp:api:type:Store) that was removed from the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly store: StoreKeyReference
}
/**
 *	Generated after a successful [Set Stores](ctp:api:type:BusinessUnitSetStoresAction) update action.
 *
 */
export interface BusinessUnitStoresSetMessagePayload extends IMessagePayload {
  readonly type: 'BusinessUnitStoresSet'
  /**
   *	[Stores](ctp:api:type:Store) of the [Business Unit](ctp:api:type:BusinessUnit) after the [Set Stores](ctp:api:type:BusinessUnitSetStoresAction) update action.
   *
   *
   */
  readonly stores: StoreKeyReference[]
}
/**
 *	Generated when a [Business Unit](ctp:api:type:BusinessUnit) `topLevelUnit` is modified due to a hierarchy change after a successful [Set Unit Type](ctp:api:type:BusinessUnitSetUnitTypeAction) or [Change Parent Unit](ctp:api:type:BusinessUnitChangeParentUnitAction) update action.
 *
 */
export interface BusinessUnitTopLevelUnitSetMessagePayload
  extends IMessagePayload {
  readonly type: 'BusinessUnitTopLevelUnitSet'
  /**
   *	Top-level unit of the [Business Unit](ctp:api:type:BusinessUnit) after the [Set Unit Type](ctp:api:type:BusinessUnitSetUnitTypeAction) or [Change Parent Unit](ctp:api:type:BusinessUnitChangeParentUnitAction) update action.
   *
   *
   */
  readonly topLevelUnit: BusinessUnitKeyReference
  /**
   *	Top-level unit of the [Business Unit](ctp:api:type:BusinessUnit) before the [Set Unit Type](ctp:api:type:BusinessUnitSetUnitTypeAction) or [Change Parent Unit](ctp:api:type:BusinessUnitChangeParentUnitAction) update action.
   *
   *
   */
  readonly oldTopLevelUnit: BusinessUnitKeyReference
}
/**
 *	Generated after a successful [Set Unit Type](ctp:api:type:BusinessUnitSetUnitTypeAction) update action.
 *
 */
export interface BusinessUnitTypeSetMessagePayload extends IMessagePayload {
  readonly type: 'BusinessUnitTypeSet'
  /**
   *	Parent unit of the [Business Unit](ctp:api:type:BusinessUnit) after the [Set Unit Type](ctp:api:type:BusinessUnitSetUnitTypeAction) update action.
   *
   *
   */
  readonly parentUnit?: BusinessUnitKeyReference
  /**
   *	Parent unit of the [Business Unit](ctp:api:type:BusinessUnit) before the [Set Unit Type](ctp:api:type:BusinessUnitSetUnitTypeAction) update action.
   *
   *
   */
  readonly oldParentUnit?: BusinessUnitKeyReference
  /**
   *	Type of the [Business Unit](ctp:api:type:BusinessUnit) after the [Set Unit Type](ctp:api:type:BusinessUnitSetUnitTypeAction) update action.
   *
   *
   */
  readonly unitType: BusinessUnitType
  /**
   *	Type of the [Business Unit](ctp:api:type:BusinessUnit) before the [Set Unit Type](ctp:api:type:BusinessUnitSetUnitTypeAction) update action.
   *
   *
   */
  readonly oldUnitType: BusinessUnitType
}
/**
 *	Generated after a successful [Create CartDiscount](ctp:api:endpoint:/{projectKey}/cart-discounts:POST) request.
 *
 */
export interface CartDiscountCreatedMessagePayload extends IMessagePayload {
  readonly type: 'CartDiscountCreated'
  /**
   *	The [Cart Discount](ctp:api:type:CartDiscount) that was created.
   *
   *
   */
  readonly cartDiscount: CartDiscount
}
/**
 *	Generated after a successful [Delete CartDiscount](ctp:api:endpoint:/{projectKey}/cart-discounts/{id}:DELETE) request.
 *
 */
export interface CartDiscountDeletedMessagePayload extends IMessagePayload {
  readonly type: 'CartDiscountDeleted'
}
/**
 *	Generated after a successful [Add Store](ctp:api:type:CartDiscountAddStoreAction) update action.
 *
 */
export interface CartDiscountStoreAddedMessagePayload extends IMessagePayload {
  readonly type: 'CartDiscountStoreAdded'
  /**
   *	The [Store](ctp:api:type:Store) that was added to the [Cart Discount](ctp:api:type:CartDiscount).
   *
   *
   */
  readonly store: StoreKeyReference
}
/**
 *	Generated after a successful [Remove Store](ctp:api:type:CartDiscountRemoveStoreAction) update action.
 *
 */
export interface CartDiscountStoreRemovedMessagePayload
  extends IMessagePayload {
  readonly type: 'CartDiscountStoreRemoved'
  /**
   *	The [Store](ctp:api:type:Store) that was removed from the [Cart Discount](ctp:api:type:CartDiscount).
   *
   *
   */
  readonly store: StoreKeyReference
}
/**
 *	Generated after a successful [Set Stores](ctp:api:type:CartDiscountSetStoresAction) update action.
 *
 */
export interface CartDiscountStoresSetMessagePayload extends IMessagePayload {
  readonly type: 'CartDiscountStoresSet'
  /**
   *	[Stores](ctp:api:type:Store) of the [Cart Discount](ctp:api:type:CartDiscount) after the [Set Stores](ctp:api:type:CartDiscountSetStoresAction) update action.
   *
   *
   */
  readonly stores: StoreKeyReference[]
}
/**
 *	Generated after a successful [Create Category](ctp:api:endpoint:/{projectKey}/categories:POST) request.
 *
 */
export interface CategoryCreatedMessagePayload extends IMessagePayload {
  readonly type: 'CategoryCreated'
  /**
   *	[Category](ctp:api:type:Category) that was created.
   *
   *
   */
  readonly category: Category
}
/**
 *	Generated after a successful [Change Slug](ctp:api:type:CategoryChangeSlugAction) update action.
 *
 */
export interface CategorySlugChangedMessagePayload extends IMessagePayload {
  readonly type: 'CategorySlugChanged'
  /**
   *	The slug of the [Category](ctp:api:type:Category) after the [Change Slug](ctp:api:type:CategoryChangeSlugAction) update action.
   *
   *
   */
  readonly slug: LocalizedString
  /**
   *	The slug of the [Category](ctp:api:type:Category) before the [Change Slug](ctp:api:type:CategoryChangeSlugAction) update action.
   *
   *
   */
  readonly oldSlug?: LocalizedString
}
/**
 *	Generated after a successful [Add Address](ctp:api:type:CustomerAddAddressAction) update action.
 *
 */
export interface CustomerAddressAddedMessagePayload extends IMessagePayload {
  readonly type: 'CustomerAddressAdded'
  /**
   *	[Address](ctp:api:type:Address) that was added during the [Add Address](ctp:api:type:CustomerAddAddressAction) update action.
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Change Address](ctp:api:type:CustomerChangeAddressAction) update action.
 *
 */
export interface CustomerAddressChangedMessagePayload extends IMessagePayload {
  readonly type: 'CustomerAddressChanged'
  /**
   *	[Address](ctp:api:type:Address) that was set during the [Change Address](ctp:api:type:CustomerChangeAddressAction) update action.
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after adding a Custom Field to an Address of a Customer using the [Set CustomField in Address](ctp:api:type:CustomerSetAddressCustomFieldAction) update action.
 *	If a Custom Field already exists with the same name, a [CustomerAddressCustomFieldChanged](ctp:api:type:CustomerAddressCustomFieldChangedMessage) Message is generated instead.
 *
 */
export interface CustomerAddressCustomFieldAddedMessagePayload
  extends IMessagePayload {
  readonly type: 'CustomerAddressCustomFieldAdded'
  /**
   *	Name of the Custom Field that was added.
   *
   *
   */
  readonly name: string
  /**
   *	The added [CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType).
   *
   */
  readonly value: any
  /**
   *	`id` of the [Address](ctp:api:type:Address) to which the Custom Field was added.
   *
   *
   */
  readonly addressId?: string
}
/**
 *	Generated after changing an existing Custom Field on an Address of a Customer using the [Set CustomField in Address](ctp:api:type:CustomerSetAddressCustomFieldAction) update action.
 *
 */
export interface CustomerAddressCustomFieldChangedMessagePayload
  extends IMessagePayload {
  readonly type: 'CustomerAddressCustomFieldChanged'
  /**
   *	Name of the Custom Field that changed.
   *
   *
   */
  readonly name: string
  /**
   *	[CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType) after the [Set CustomField](ctp:api:type:CustomerSetAddressCustomFieldAction) update action.
   *
   *
   */
  readonly value: any
  /**
   *	[CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType) before the [Set CustomField](ctp:api:type:CustomerSetAddressCustomFieldAction) update action.
   *	When there has not been a Custom Field with the `name` on the Customer Address before, a [Customer Address Custom Field Added](ctp:api:type:CustomerAddressCustomFieldAddedMessage) Message is generated instead.
   *
   *
   */
  readonly previousValue?: any
  /**
   *	`id` of the [Address](ctp:api:type:Address) of which the Custom Field was changed.
   *
   *
   */
  readonly addressId?: string
}
/**
 *	Generated after removing a Custom Field from an Address of a Customer using the [Set CustomField in Address](ctp:api:type:CustomerSetAddressCustomFieldAction) update action.
 *
 */
export interface CustomerAddressCustomFieldRemovedMessagePayload
  extends IMessagePayload {
  readonly type: 'CustomerAddressCustomFieldRemoved'
  /**
   *	Name of the Custom Field that was removed.
   *
   *
   */
  readonly name: string
  /**
   *	`id` of the [Address](ctp:api:type:Address) from which the Custom Field was removed.
   *
   *
   */
  readonly addressId?: string
}
/**
 *	Generated after removing a Custom Type from an Address of a Customer using the [Set Custom Type in Address](ctp:api:type:CustomerSetAddressCustomTypeAction) update action.
 *
 */
export interface CustomerAddressCustomTypeRemovedMessagePayload
  extends IMessagePayload {
  readonly type: 'CustomerAddressCustomTypeRemoved'
  /**
   *	`id` of the [Custom Type](ctp:api:type:Type) that was removed. Absent if there was no previous Custom Type present.
   *
   *
   */
  readonly previousTypeId?: string
  /**
   *	`id` of the [Address](ctp:api:type:Address) from which the Custom Type was removed.
   *
   *
   */
  readonly addressId?: string
}
/**
 *	Generated after adding a Custom Type to an Address of a Customer using the [Set Custom Type in Address](ctp:api:type:CustomerSetAddressCustomTypeAction) update action.
 *
 */
export interface CustomerAddressCustomTypeSetMessagePayload
  extends IMessagePayload {
  readonly type: 'CustomerAddressCustomTypeSet'
  /**
   *	The Custom Fields that have been set.
   *
   */
  readonly customFields: CustomFields
  /**
   *	`id` of the previous [Custom Type](ctp:api:type:Type). Absent if there was no previous Custom Type present.
   *
   *
   */
  readonly previousTypeId?: string
  /**
   *	`id` of the [Address](ctp:api:type:Address) on which the Custom Field was set.
   *
   *
   */
  readonly addressId?: string
}
/**
 *	Generated after a successful [Remove Address](ctp:api:type:CustomerRemoveAddressAction) update action.
 *
 */
export interface CustomerAddressRemovedMessagePayload extends IMessagePayload {
  readonly type: 'CustomerAddressRemoved'
  /**
   *	[Address](ctp:api:type:Address) that was removed during the [Remove Address](ctp:api:type:CustomerRemoveAddressAction) update action.
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Set Company Name](ctp:api:type:CustomerSetCompanyNameAction) update action.
 *
 */
export interface CustomerCompanyNameSetMessagePayload extends IMessagePayload {
  readonly type: 'CustomerCompanyNameSet'
  /**
   *	The `companyName` that was set during the [Set Company Name](ctp:api:type:CustomerSetCompanyNameAction) update action.
   *
   *
   */
  readonly companyName?: string
}
/**
 *	Generated after a successful [Create Customer](ctp:api:endpoint:/{projectKey}/customers:POST) request.
 *
 */
export interface CustomerCreatedMessagePayload extends IMessagePayload {
  readonly type: 'CustomerCreated'
  /**
   *	[Customer](ctp:api:type:Customer) that was created.
   *
   *
   */
  readonly customer: Customer
}
/**
 *	Generated after adding a Custom Field to a Customer using the [Set CustomField](ctp:api:type:CustomerSetCustomFieldAction) update action.
 *	If a Custom Field already exists with the same name, a [CustomerCustomFieldChanged](ctp:api:type:CustomerCustomFieldChangedMessage) Message is generated instead.
 *
 */
export interface CustomerCustomFieldAddedMessagePayload
  extends IMessagePayload {
  readonly type: 'CustomerCustomFieldAdded'
  /**
   *	Name of the Custom Field that was added.
   *
   *
   */
  readonly name: string
  /**
   *	The added [CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType).
   *
   */
  readonly value: any
}
/**
 *	Generated after changing an existing Custom Field on a Customer using the [Set CustomField](ctp:api:type:CustomerSetCustomFieldAction) update action.
 *
 */
export interface CustomerCustomFieldChangedMessagePayload
  extends IMessagePayload {
  readonly type: 'CustomerCustomFieldChanged'
  /**
   *	Name of the Custom Field that changed.
   *
   *
   */
  readonly name: string
  /**
   *	[CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType) after the [Set CustomField](ctp:api:type:CustomerSetCustomFieldAction) update action.
   *
   *
   */
  readonly value: any
  /**
   *	[CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType) before the [Set CustomField](ctp:api:type:CustomerSetCustomFieldAction) update action.
   *	When there has not been a Custom Field with the `name` on the Customer before, a [Customer Custom Field Added](ctp:api:type:CustomerCustomFieldAddedMessage) Message is generated instead.
   *
   *
   */
  readonly previousValue?: any
}
/**
 *	Generated after removing a Custom Field from a Customer using the [Set CustomField](ctp:api:type:CustomerSetCustomFieldAction) update action.
 *
 */
export interface CustomerCustomFieldRemovedMessagePayload
  extends IMessagePayload {
  readonly type: 'CustomerCustomFieldRemoved'
  /**
   *	Name of the Custom Field that was removed.
   *
   *
   */
  readonly name: string
}
/**
 *	Generated after removing a Custom Type from a Customer using the [Set Custom Type](ctp:api:type:CustomerSetCustomTypeAction) update action with empty parameters.
 *
 */
export interface CustomerCustomTypeRemovedMessagePayload
  extends IMessagePayload {
  readonly type: 'CustomerCustomTypeRemoved'
  /**
   *	`id` of the [Custom Type](ctp:api:type:Type) that was removed. Absent if there was no previous Custom Type present.
   *
   *
   */
  readonly previousTypeId?: string
}
/**
 *	Generated after adding a Custom Type to a Customer using the [Set Custom Type](ctp:api:type:CustomerSetCustomTypeAction) update action.
 *
 */
export interface CustomerCustomTypeSetMessagePayload extends IMessagePayload {
  readonly type: 'CustomerCustomTypeSet'
  /**
   *	The Custom Fields that have been set.
   *
   */
  readonly customFields: CustomFields
  /**
   *	`id` of the previous [Custom Type](ctp:api:type:Type). Absent if there was no previous Custom Type present.
   *
   *
   */
  readonly previousTypeId?: string
}
/**
 *	Generated after a successful [Set Date of Birth](ctp:api:type:CustomerSetDateOfBirthAction) update action.
 *
 */
export interface CustomerDateOfBirthSetMessagePayload extends IMessagePayload {
  readonly type: 'CustomerDateOfBirthSet'
  /**
   *	The `dateOfBirth` that was set during the [Set Date of Birth](ctp:api:type:CustomerSetDateOfBirthAction) update action.
   *
   *
   */
  readonly dateOfBirth?: string
}
/**
 *	Generated after a successful [Delete Customer](/../api/projects/customers#delete-customer) request.
 *
 */
export interface CustomerDeletedMessagePayload extends IMessagePayload {
  readonly type: 'CustomerDeleted'
}
/**
 *	Generated after a successful [Change Email](ctp:api:type:CustomerChangeEmailAction) update action.
 *
 */
export interface CustomerEmailChangedMessagePayload extends IMessagePayload {
  readonly type: 'CustomerEmailChanged'
  /**
   *	The `email` that was set during the [Change Email](ctp:api:type:CustomerChangeEmailAction) update action.
   *
   *
   */
  readonly email: string
}
/**
 *	Generated after a successful [Create email token for Customer](ctp:api:endpoint:/{projectKey}/customers/email-token:POST) or [Create email token for Customer in Store](ctp:api:endpoint:/{projectKey}/in-store/key={storeKey}/customers/email-token:POST) request. The `resource` property of the Message is a [CustomerEmailTokenReference](ctp:api:type:CustomerEmailTokenReference).
 *
 */
export interface CustomerEmailTokenCreatedMessagePayload
  extends IMessagePayload {
  readonly type: 'CustomerEmailTokenCreated'
  /**
   *	Unique identifier of the Customer.
   *
   *
   */
  readonly customerId: string
  /**
   *	Date and time (UTC) the email token expires.
   *
   *
   */
  readonly expiresAt: string
  /**
   *	Value of the token, present only if the token's validity is 60 minutes or less.
   *
   *
   */
  readonly value?: string
  /**
   *	If `true`, all email tokens issued previously for the Customer are invalidated.
   *
   *
   */
  readonly invalidateOlderTokens: boolean
}
/**
 *	Generated after a successful [Verify Customer's Email](ctp:api:endpoint:/{projectKey}/customers/email/confirm:POST) request.
 *
 */
export interface CustomerEmailVerifiedMessagePayload extends IMessagePayload {
  readonly type: 'CustomerEmailVerified'
}
/**
 *	Generated after a successful [Set First Name](ctp:api:type:CustomerSetFirstNameAction) update action.
 *
 */
export interface CustomerFirstNameSetMessagePayload extends IMessagePayload {
  readonly type: 'CustomerFirstNameSet'
  /**
   *	The `firstName` that was set during the [Set First Name](ctp:api:type:CustomerSetFirstNameAction) update action.
   *
   *
   */
  readonly firstName?: string
}
/**
 *	Generated after a successful [Add CustomerGroupAssignment](ctp:api:type:CustomerAddCustomerGroupAssignmentAction) update action.
 *
 */
export interface CustomerGroupAssignmentAddedMessagePayload
  extends IMessagePayload {
  readonly type: 'CustomerGroupAssignmentAdded'
  /**
   *	Customer Group assigned to the Customer during the [Add CustomerGroupAssignment](ctp:api:type:CustomerAddCustomerGroupAssignmentAction) update action.
   *
   *
   */
  readonly customerGroupAssignment: CustomerGroupAssignment
}
/**
 *	Generated after a successful [Remove CustomerGroupAssignment](ctp:api:type:CustomerRemoveCustomerGroupAssignmentAction) update action.
 *
 */
export interface CustomerGroupAssignmentRemovedMessagePayload
  extends IMessagePayload {
  readonly type: 'CustomerGroupAssignmentRemoved'
  /**
   *	Customer Group removed during the [Remove CustomerGroupAssignment](ctp:api:type:CustomerRemoveCustomerGroupAssignmentAction) update action.
   *
   *
   */
  readonly customerGroupAssignment: CustomerGroupAssignment
}
/**
 *	Generated after a successful [Set CustomerGroupAssignments](ctp:api:type:CustomerSetCustomerGroupAssignmentsAction) update action.
 *
 */
export interface CustomerGroupAssignmentsSetMessagePayload
  extends IMessagePayload {
  readonly type: 'CustomerGroupAssignmentsSet'
  /**
   *	Customer Groups assigned to the Customer during the [Set CustomerGroupAssignments](ctp:api:type:CustomerSetCustomerGroupAssignmentsAction) update action.
   *
   *
   */
  readonly customerGroupAssignments?: CustomerGroupAssignment[]
}
/**
 *	Generated after adding a Custom Field to a Customer Group using the [Set CustomField](ctp:api:type:CustomerGroupSetCustomFieldAction) update action.
 *	If a Custom Field already exists with the same name, a [CustomerGroupCustomFieldChanged](ctp:api:type:CustomerGroupCustomFieldChangedMessage) Message is generated instead.
 *
 */
export interface CustomerGroupCustomFieldAddedMessagePayload
  extends IMessagePayload {
  readonly type: 'CustomerGroupCustomFieldAdded'
  /**
   *	Name of the Custom Field that was added.
   *
   *
   */
  readonly name: string
  /**
   *	The added [CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType).
   *
   */
  readonly value: any
}
/**
 *	Generated after changing an existing Custom Field on a Customer Group using the [Set CustomField](ctp:api:type:CustomerGroupSetCustomFieldAction) update action.
 *
 */
export interface CustomerGroupCustomFieldChangedMessagePayload
  extends IMessagePayload {
  readonly type: 'CustomerGroupCustomFieldChanged'
  /**
   *	Name of the Custom Field that changed.
   *
   *
   */
  readonly name: string
  /**
   *	[CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType) after the [Set CustomField](ctp:api:type:CustomerGroupSetCustomFieldAction) update action.
   *
   *
   */
  readonly value: any
  /**
   *	[CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType) before the [Set CustomField](ctp:api:type:CustomerGroupSetCustomFieldAction) update action.
   *
   *
   */
  readonly oldValue?: any
}
/**
 *	Generated after removing a Custom Field from a Customer Group using the [Set CustomField](ctp:api:type:CustomerGroupSetCustomFieldAction) update action.
 *
 */
export interface CustomerGroupCustomFieldRemovedMessagePayload
  extends IMessagePayload {
  readonly type: 'CustomerGroupCustomFieldRemoved'
  /**
   *	Name of the Custom Field that was removed.
   *
   *
   */
  readonly name: string
}
/**
 *	Generated after removing a Custom Type from a Customer Group using the [Set Custom Type](ctp:api:type:CustomerGroupSetCustomTypeAction) update action with empty parameters.
 *
 */
export interface CustomerGroupCustomTypeRemovedMessagePayload
  extends IMessagePayload {
  readonly type: 'CustomerGroupCustomTypeRemoved'
  /**
   *	`id` of the [Custom Type](ctp:api:type:Type) that was removed. Absent if there was no previous Custom Type present.
   *
   *
   */
  readonly oldTypeId?: string
}
/**
 *	Generated after adding a Custom Type to a Customer Group using the [Set Custom Type](ctp:api:type:CustomerGroupSetCustomTypeAction) update action.
 *
 */
export interface CustomerGroupCustomTypeSetMessagePayload
  extends IMessagePayload {
  readonly type: 'CustomerGroupCustomTypeSet'
  /**
   *	The Custom Fields that have been set.
   *
   */
  readonly customFields: CustomFields
  /**
   *	`id` of the previous [Custom Type](ctp:api:type:Type). Absent if there was no previous Custom Type present.
   *
   *
   */
  readonly oldTypeId?: string
}
/**
 *	Generated after a successful [Set Customer Group](ctp:api:type:CustomerSetCustomerGroupAction) update action.
 *
 */
export interface CustomerGroupSetMessagePayload extends IMessagePayload {
  readonly type: 'CustomerGroupSet'
  /**
   *	[Customer Group](ctp:api:type:CustomerGroup) that was set during the [Set Customer Group](ctp:api:type:CustomerSetCustomerGroupAction) update action.
   *
   *
   */
  readonly customerGroup?: CustomerGroupReference
}
/**
 *	Generated after a successful [Set Last Name](ctp:api:type:CustomerSetLastNameAction) update action.
 *
 */
export interface CustomerLastNameSetMessagePayload extends IMessagePayload {
  readonly type: 'CustomerLastNameSet'
  /**
   *	The `lastName` that was set during the [Set Last Name](ctp:api:type:CustomerSetLastNameAction) update action.
   *
   *
   */
  readonly lastName?: string
}
/**
 *	Generated after a successful [Create password reset token for Customer](ctp:api:endpoint:/{projectKey}/customers/password-token:POST) or [Create password reset token for Customer in Store](ctp:api:endpoint:/{projectKey}/in-store/key={storeKey}/customers/password-token:POST) request. The `resource` property of the Message is a [CustomerPasswordTokenReference](ctp:api:type:CustomerPasswordTokenReference).
 *
 */
export interface CustomerPasswordTokenCreatedMessagePayload
  extends IMessagePayload {
  readonly type: 'CustomerPasswordTokenCreated'
  /**
   *	Unique identifier of the Customer.
   *
   *
   */
  readonly customerId: string
  /**
   *	Date and time (UTC) the password token expires.
   *
   *
   */
  readonly expiresAt: string
  /**
   *	Value of the token, present only if the token's validity is 60 minutes or less.
   *
   *
   */
  readonly value?: string
  /**
   *	If `true`, all password tokens issued previously for the Customer are invalidated.
   *
   *
   */
  readonly invalidateOlderTokens: boolean
}
/**
 *	Generated after a successful [Reset Customer's Password](ctp:api:endpoint:/{projectKey}/customers/password/reset:POST), [Reset Customer's Password in a Store](ctp:api:endpoint:/{projectKey}/in-store/key={storeKey}/customers/password/reset:POST), [Change Customer's Password](ctp:api:endpoint:/{projectKey}/customers/password:POST), or [Change Customer's Password in a Store](ctp:api:endpoint:/{projectKey}/in-store/key={storeKey}/customers/password:POST) request. This Message is also produced during equivalent requests to the [My Customer Profile](/../api/projects/me-profile) endpoint.
 *
 */
export interface CustomerPasswordUpdatedMessagePayload extends IMessagePayload {
  readonly type: 'CustomerPasswordUpdated'
  /**
   *	Whether the Customer's password was updated during the [Reset password](ctp:api:endpoint:/{projectKey}/customers/password/reset:POST) or [Change password](ctp:api:endpoint:/{projectKey}/customers/password:POST) flow.
   *
   *
   */
  readonly reset: boolean
}
/**
 *	Generated after a successful [Set Title](ctp:api:type:CustomerSetTitleAction) update action.
 *
 */
export interface CustomerTitleSetMessagePayload extends IMessagePayload {
  readonly type: 'CustomerTitleSet'
  /**
   *	The `title` that was set during the [Set Title](ctp:api:type:CustomerSetTitleAction) update action.
   *
   *
   */
  readonly title?: string
}
/**
 *	Generated after a successful [Create DiscountCode](ctp:api:endpoint:/{projectKey}/discount-codes:POST) request.
 *
 */
export interface DiscountCodeCreatedMessagePayload extends IMessagePayload {
  readonly type: 'DiscountCodeCreated'
  /**
   *	The [Discount Code](ctp:api:type:DiscountCode) that was created.
   *
   *
   */
  readonly discountCode: DiscountCode
}
/**
 *	Generated after a successful [Delete DiscountCode](ctp:api:endpoint:/{projectKey}/discount-codes/{id}:DELETE) request.
 *
 */
export interface DiscountCodeDeletedMessagePayload extends IMessagePayload {
  readonly type: 'DiscountCodeDeleted'
}
/**
 *	Generated after a successful [Set Key](ctp:api:type:DiscountCodeSetKeyAction) update action.
 *
 */
export interface DiscountCodeKeySetMessagePayload extends IMessagePayload {
  readonly type: 'DiscountCodeKeySet'
  /**
   *	`key` value of the [Discount Code](ctp:api:type:DiscountCode) after the [Set Key](ctp:api:type:DiscountCodeSetKeyAction) update action.
   *
   *
   */
  readonly key?: string
  /**
   *	`key` value of the [Discount Code](ctp:api:type:DiscountCode) before the [Set Key](ctp:api:type:DiscountCodeSetKeyAction) update action.
   *
   *
   */
  readonly oldKey?: string
}
/**
 *	Generated after a successful [Create DiscountGroup](ctp:api:endpoint:/{projectKey}/discount-groups:POST) request.
 *
 */
export interface DiscountGroupCreatedMessagePayload extends IMessagePayload {
  readonly type: 'DiscountGroupCreated'
  /**
   *	The DiscountGroup that was created.
   *
   *
   */
  readonly discountGroup: DiscountGroup
}
/**
 *	Generated after a successful [Delete DiscountGroup](ctp:api:endpoint:/{projectKey}/discount-groups/{id}:DELETE) request.
 *
 */
export interface DiscountGroupDeletedMessagePayload extends IMessagePayload {
  readonly type: 'DiscountGroupDeleted'
}
/**
 *	Generated after a successful [Set Key](ctp:api:type:DiscountGroupSetKeyAction) update action.
 *
 */
export interface DiscountGroupKeySetMessagePayload extends IMessagePayload {
  readonly type: 'DiscountGroupKeySet'
  /**
   *	`key` value of the [DiscountGroup](ctp:api:type:DiscountGroup) after the [Set Key](ctp:api:type:DiscountGroupSetKeyAction) update action.
   *
   *
   */
  readonly key?: string
  /**
   *	`key` value of the [DiscountGroup](ctp:api:type:DiscountGroup) before the [Set Key](ctp:api:type:DiscountGroupSetKeyAction) update action.
   *
   *
   */
  readonly oldKey?: string
}
/**
 *	Generated after a successful [Set SortOrder](ctp:api:type:DiscountGroupSetSortOrderAction) update action.
 *
 */
export interface DiscountGroupSortOrderSetMessagePayload
  extends IMessagePayload {
  readonly type: 'DiscountGroupSortOrderSet'
  /**
   *	`sortOrder` value of the [DiscountGroup](ctp:api:type:DiscountGroup) after the [Set SortOrder](ctp:api:type:DiscountGroupSetSortOrderAction) update action.
   *
   *
   */
  readonly sortOrder?: string
  /**
   *	`sortOrder` value of the [DiscountGroup](ctp:api:type:DiscountGroup) before the [Set SortOrder](ctp:api:type:DiscountGroupSetSortOrderAction) update action.
   *
   *
   */
  readonly oldSortOrder?: string
}
/**
 *	Generated after a successful [Create InventoryEntry](ctp:api:endpoint:/{projectKey}/inventory:POST) request.
 *
 */
export interface InventoryEntryCreatedMessagePayload extends IMessagePayload {
  readonly type: 'InventoryEntryCreated'
  /**
   *	[InventoryEntry](ctp:api:type:InventoryEntry) that was created.
   *
   *
   */
  readonly inventoryEntry: InventoryEntry
}
/**
 *	Generated after a successful [Delete InventoryEntry](/../api/projects/inventory#delete-inventoryentry) request.
 *
 */
export interface InventoryEntryDeletedMessagePayload extends IMessagePayload {
  readonly type: 'InventoryEntryDeleted'
  /**
   *	The `sku` of the [InventoryEntry](ctp:api:type:InventoryEntry) that was deleted.
   *
   *
   */
  readonly sku: string
  /**
   *	[Reference](ctp:api:type:Reference) to the [Channel](ctp:api:type:Channel) where the [InventoryEntry](ctp:api:type:InventoryEntry) was deleted.
   *
   *
   */
  readonly supplyChannel?: ChannelReference
}
/**
 *	Generated after a successful [Add Quantity](ctp:api:type:InventoryEntryAddQuantityAction), [Remove Quantity](ctp:api:type:InventoryEntryRemoveQuantityAction) or [Change Quantity](ctp:api:type:InventoryEntryChangeQuantityAction) update action.
 *	Inventory changes as a result of [Order creation](ctp:api:endpoint:/{projectKey}/orders:POST) do not trigger this message.
 *
 */
export interface InventoryEntryQuantitySetMessagePayload
  extends IMessagePayload {
  readonly type: 'InventoryEntryQuantitySet'
  /**
   *	Quantity on stock for the [InventoryEntry](ctp:api:type:InventoryEntry) before the quantity was updated.
   *
   *
   */
  readonly oldQuantityOnStock: number
  /**
   *	Quantity on stock for the [InventoryEntry](ctp:api:type:InventoryEntry) after the quantity was updated.
   *
   *
   */
  readonly newQuantityOnStock: number
  /**
   *	Available quantity for the [InventoryEntry](ctp:api:type:InventoryEntry) before the quantity was updated.
   *
   *
   */
  readonly oldAvailableQuantity: number
  /**
   *	Available quantity for the [InventoryEntry](ctp:api:type:InventoryEntry) after the quantity was updated.
   *
   *
   */
  readonly newAvailableQuantity: number
  /**
   *	[Reference](ctp:api:type:Reference) to the [Channel](ctp:api:type:Channel) where the [InventoryEntry](ctp:api:type:InventoryEntry) quantity was set.
   *
   *
   */
  readonly supplyChannel?: ChannelReference
}
export type OrderMessagePayload =
  | CustomLineItemStateTransitionMessagePayload
  | DeliveryAddedMessagePayload
  | DeliveryAddressSetMessagePayload
  | DeliveryCustomFieldAddedMessagePayload
  | DeliveryCustomFieldChangedMessagePayload
  | DeliveryCustomFieldRemovedMessagePayload
  | DeliveryCustomTypeRemovedMessagePayload
  | DeliveryCustomTypeSetMessagePayload
  | DeliveryItemsUpdatedMessagePayload
  | DeliveryRemovedMessagePayload
  | LineItemStateTransitionMessagePayload
  | OrderBillingAddressSetMessagePayload
  | OrderBusinessUnitSetMessagePayload
  | OrderCreatedMessagePayload
  | OrderCustomFieldAddedMessagePayload
  | OrderCustomFieldChangedMessagePayload
  | OrderCustomFieldRemovedMessagePayload
  | OrderCustomLineItemAddedMessagePayload
  | OrderCustomLineItemDiscountSetMessagePayload
  | OrderCustomLineItemQuantityChangedMessagePayload
  | OrderCustomLineItemRemovedMessagePayload
  | OrderCustomTypeRemovedMessagePayload
  | OrderCustomTypeSetMessagePayload
  | OrderCustomerEmailSetMessagePayload
  | OrderCustomerGroupSetMessagePayload
  | OrderCustomerSetMessagePayload
  | OrderDeletedMessagePayload
  | OrderDiscountCodeAddedMessagePayload
  | OrderDiscountCodeRemovedMessagePayload
  | OrderDiscountCodeStateSetMessagePayload
  | OrderEditAppliedMessagePayload
  | OrderImportedMessagePayload
  | OrderLineItemAddedMessagePayload
  | OrderLineItemDiscountSetMessagePayload
  | OrderLineItemDistributionChannelSetMessagePayload
  | OrderLineItemRemovedMessagePayload
  | OrderPaymentStateChangedMessagePayload
  | OrderPurchaseOrderNumberSetMessagePayload
  | OrderReturnShipmentStateChangedMessagePayload
  | OrderShipmentStateChangedMessagePayload
  | OrderShippingAddressSetMessagePayload
  | OrderShippingInfoSetMessagePayload
  | OrderShippingRateInputSetMessagePayload
  | OrderStateChangedMessagePayload
  | OrderStateTransitionMessagePayload
  | OrderStoreSetMessagePayload
  | ParcelAddedToDeliveryMessagePayload
  | ParcelItemsUpdatedMessagePayload
  | ParcelMeasurementsUpdatedMessagePayload
  | ParcelRemovedFromDeliveryMessagePayload
  | ParcelTrackingDataUpdatedMessagePayload
  | ReturnInfoAddedMessagePayload
  | ReturnInfoSetMessagePayload
export interface IOrderMessagePayload {
  /**
   *
   */
  readonly type: string
}
/**
 *	Generated after a successful [Transition CustomLineItem State](ctp:api:type:OrderTransitionCustomLineItemStateAction) update action.
 *
 */
export interface CustomLineItemStateTransitionMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'CustomLineItemStateTransition'
  /**
   *	Unique identifier of the [Custom Line Item](ctp:api:type:CustomLineItem).
   *
   *
   */
  readonly customLineItemId: string
  /**
   *	User-defined unique identifier of the [Custom Line Item](ctp:api:type:CustomLineItem).
   *
   *
   */
  readonly customLineItemKey?: string
  /**
   *	Date and time (UTC) the transition of the [Custom Line Item](ctp:api:type:CustomLineItem) [State](ctp:api:type:State) was performed.
   *
   *
   */
  readonly transitionDate: string
  /**
   *	Number of [Custom Line Items](ctp:api:type:CustomLineItem) for which the [State](ctp:api:type:State) was transitioned.
   *
   *
   */
  readonly quantity: number
  /**
   *	[State](ctp:api:type:State) the [Custom Line Item](ctp:api:type:CustomLineItem) was transitioned from.
   *
   *
   */
  readonly fromState: StateReference
  /**
   *	[State](ctp:api:type:State) the [Custom Line Item](ctp:api:type:CustomLineItem) was transitioned to.
   *
   *
   */
  readonly toState: StateReference
}
/**
 *	Generated after a successful [Add Delivery](ctp:api:type:OrderAddDeliveryAction) update action.
 *
 */
export interface DeliveryAddedMessagePayload extends IOrderMessagePayload {
  readonly type: 'DeliveryAdded'
  /**
   *	[Delivery](ctp:api:type:Delivery) that was added to the [Order](ctp:api:type:Order). The [Delivery](ctp:api:type:Delivery) in the Message body does not contain [Parcels](ctp:api:type:Parcel) if those were part of the initial [Add Delivery](ctp:api:type:OrderAddDeliveryAction) update action. In that case, the update action produces an additional [Parcel Added To Delivery](ctp:api:type:ParcelAddedToDeliveryMessage) Message containing information about the [Parcels](ctp:api:type:Parcel).
   *
   *
   */
  readonly delivery: Delivery
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multiple` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Set Delivery Address](ctp:api:type:OrderSetDeliveryAddressAction) update action.
 *
 */
export interface DeliveryAddressSetMessagePayload extends IOrderMessagePayload {
  readonly type: 'DeliveryAddressSet'
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
  /**
   *	[Address](ctp:api:type:Address) after the [Set Delivery Address](ctp:api:type:OrderSetDeliveryAddressAction) update action.
   *
   *
   */
  readonly address?: Address
  /**
   *	[Address](ctp:api:type:Address) before the [Set Delivery Address](ctp:api:type:OrderSetDeliveryAddressAction) update action.
   *
   *
   */
  readonly oldAddress?: Address
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multiple` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after adding a Custom Field to a Delivery using the [Set CustomField](ctp:api:type:OrderSetDeliveryCustomFieldAction) update action.
 *
 */
export interface DeliveryCustomFieldAddedMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'DeliveryCustomFieldAdded'
  /**
   *	Name of the Custom Field that was added.
   *
   *
   */
  readonly name: string
  /**
   *	The added [CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType).
   *
   */
  readonly value: any
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
}
/**
 *	Generated when an existing Custom Field on a Delivery has been changed using the [Set CustomField](ctp:api:type:OrderSetDeliveryCustomFieldAction) update action.
 *
 */
export interface DeliveryCustomFieldChangedMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'DeliveryCustomFieldChanged'
  /**
   *	Name of the Custom Field that changed.
   *
   *
   */
  readonly name: string
  /**
   *	[CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType) after the [Set CustomField](ctp:api:type:OrderSetDeliveryCustomFieldAction) update action.
   *
   *
   */
  readonly value: any
  /**
   *	[CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType) before the [Set CustomField](ctp:api:type:OrderSetDeliveryCustomFieldAction) update action.
   *	When there has not been a Custom Field with the `name` on the Delivery before, a [Delivery Custom Field Added](ctp:api:type:DeliveryCustomFieldAddedMessage) Message is generated instead.
   *
   *
   */
  readonly previousValue?: any
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
}
/**
 *	Generated when a Custom Field has been removed from the Delivery using the [Set CustomField](ctp:api:type:OrderSetDeliveryCustomFieldAction) update action.
 *
 */
export interface DeliveryCustomFieldRemovedMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'DeliveryCustomFieldRemoved'
  /**
   *	Name of the Custom Field that was removed.
   *
   *
   */
  readonly name: string
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
}
/**
 *	Generated after removing a Custom Type from a Delivery using the [Set Custom Type](ctp:api:type:OrderSetDeliveryCustomTypeAction) update action with empty parameters.
 *
 */
export interface DeliveryCustomTypeRemovedMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'DeliveryCustomTypeRemoved'
  /**
   *	`id` of the [Custom Type](ctp:api:type:Type) that was removed. Absent if there was no previous Custom Type present.
   *
   *
   */
  readonly previousTypeId?: string
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
}
/**
 *	Generated after adding a Custom Type to a Delivery using the [Set Custom Type](ctp:api:type:OrderSetDeliveryCustomTypeAction) update action.
 *
 */
export interface DeliveryCustomTypeSetMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'DeliveryCustomTypeSet'
  /**
   *	The Custom Fields that have been set.
   *
   */
  readonly customFields: CustomFields
  /**
   *	`id` of the previous [Custom Type](ctp:api:type:Type). Absent if there was no previous Custom Type present.
   *
   *
   */
  readonly previousTypeId?: string
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
}
/**
 *	Generated after a successful [Set Delivery Items](ctp:api:type:OrderSetDeliveryItemsAction) update action.
 *
 */
export interface DeliveryItemsUpdatedMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'DeliveryItemsUpdated'
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
  /**
   *	[Delivery Items](ctp:api:type:DeliveryItem) after the [Set Delivery Items](ctp:api:type:OrderSetDeliveryItemsAction) update action.
   *
   *
   */
  readonly items: DeliveryItem[]
  /**
   *	[Delivery Items](ctp:api:type:DeliveryItem) before the [Set Delivery Items](ctp:api:type:OrderSetDeliveryItemsAction) update action.
   *
   *
   */
  readonly oldItems: DeliveryItem[]
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multiple` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Remove Delivery](ctp:api:type:OrderRemoveDeliveryAction) update action.
 *
 */
export interface DeliveryRemovedMessagePayload extends IOrderMessagePayload {
  readonly type: 'DeliveryRemoved'
  /**
   *	The [Delivery](ctp:api:type:Delivery) that was removed from the [Order](ctp:api:type:Order).
   *
   *
   */
  readonly delivery: Delivery
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multiple` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Transition LineItem State](ctp:api:type:OrderTransitionLineItemStateAction) update action.
 *
 */
export interface LineItemStateTransitionMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'LineItemStateTransition'
  /**
   *	Unique identifier of the [Line Item](ctp:api:type:LineItem).
   *
   *
   */
  readonly lineItemId: string
  /**
   *	User-defined unique identifier of the LineItem.
   *
   *
   */
  readonly lineItemKey?: string
  /**
   *	Date and time (UTC) the transition of the [Line Item](ctp:api:type:LineItem) [State](ctp:api:type:State) was performed.
   *
   *
   */
  readonly transitionDate: string
  /**
   *	Number of [Line Items](ctp:api:type:LineItem) for which the [State](ctp:api:type:State) was transitioned.
   *
   *
   */
  readonly quantity: number
  /**
   *	[State](ctp:api:type:State) the [Line Item](ctp:api:type:LineItem) was transitioned from.
   *
   *
   */
  readonly fromState: StateReference
  /**
   *	[State](ctp:api:type:State) the [Line Item](ctp:api:type:LineItem) was transitioned to.
   *
   *
   */
  readonly toState: StateReference
}
/**
 *	Generated after a successful [Set Billing Address](ctp:api:type:OrderSetBillingAddressAction) update action.
 *
 */
export interface OrderBillingAddressSetMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'OrderBillingAddressSet'
  /**
   *	Billing address on the Order after the [Set Billing Address](ctp:api:type:OrderSetBillingAddressAction) update action.
   *
   *
   */
  readonly address?: Address
  /**
   *	Billing address on the Order before the [Set Billing Address](ctp:api:type:OrderSetBillingAddressAction) update action.
   *
   *
   */
  readonly oldAddress?: Address
}
/**
 *	Generated after a successful [Set Business Unit](ctp:api:type:OrderSetBusinessUnitAction) update action on Orders or [Set Business Unit](ctp:api:type:StagedOrderSetBusinessUnitAction) update action on Order Edits.
 *
 */
export interface OrderBusinessUnitSetMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'OrderBusinessUnitSet'
  /**
   *	[BusinessUnit](ctp:api:type:BusinessUnit) on the [Order](ctp:api:type:Order) after the [Set Business Unit](ctp:api:type:OrderSetBusinessUnitAction) update action on Orders or [Set Business Unit](ctp:api:type:StagedOrderSetBusinessUnitAction) update action on Order Edits.
   *
   *
   */
  readonly businessUnit?: BusinessUnitKeyReference
  /**
   *	[BusinessUnit](ctp:api:type:BusinessUnit) on the [Order](ctp:api:type:Order) before the [Set Business Unit](ctp:api:type:OrderSetBusinessUnitAction) update action on Orders or [Set Business Unit](ctp:api:type:StagedOrderSetBusinessUnitAction) update action on Order Edits.
   *
   *
   */
  readonly oldbusinessUnit?: BusinessUnitKeyReference
}
/**
 *	Generated after a successful [Create Order](ctp:api:endpoint:/{projectKey}/orders:POST) request.
 *
 */
export interface OrderCreatedMessagePayload extends IOrderMessagePayload {
  readonly type: 'OrderCreated'
  /**
   *	[Order](ctp:api:type:Order) that was created.
   *
   *
   */
  readonly order: _Order
}
/**
 *	Generated after adding a Custom Field using the [Set CustomField](ctp:api:type:OrderSetCustomFieldAction).
 *
 */
export interface OrderCustomFieldAddedMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'OrderCustomFieldAdded'
  /**
   *	Name of the Custom Field that was added.
   *
   *
   */
  readonly name: string
  /**
   *	The added [CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType).
   *
   */
  readonly value: any
}
/**
 *	Generated when an existing Custom Field has been changed using the [Set CustomField](ctp:api:type:OrderSetCustomFieldAction) action.
 *
 */
export interface OrderCustomFieldChangedMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'OrderCustomFieldChanged'
  /**
   *	Name of the Custom Field that changed.
   *
   *
   */
  readonly name: string
  /**
   *	[CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType) after the [Set CustomField](ctp:api:type:OrderSetCustomFieldAction) update action.
   *
   *
   */
  readonly value: any
  /**
   *	[CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType) before the [Set CustomField](ctp:api:type:OrderSetCustomFieldAction) update action.
   *	When there has not been a Custom Field with the `name` on the Order before, an [Order Custom Field Added](ctp:api:type:OrderCustomFieldAddedMessage) Message is generated instead.
   *
   *
   */
  readonly previousValue?: any
}
/**
 *	Generated when a Custom Field has been removed from the Order using the [Set CustomField](ctp:api:type:OrderSetCustomFieldAction) action.
 *
 */
export interface OrderCustomFieldRemovedMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'OrderCustomFieldRemoved'
  /**
   *	Name of the Custom Field that was removed.
   *
   *
   */
  readonly name: string
}
/**
 *	Generated after a successful [Add CustomLineItem](ctp:api:type:StagedOrderAddCustomLineItemAction) update action.
 *
 */
export interface OrderCustomLineItemAddedMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'OrderCustomLineItemAdded'
  /**
   *	[Custom Line Item](ctp:api:type:CustomLineItem) that was added to the [Order](ctp:api:type:Order).
   *
   *
   */
  readonly customLineItem: CustomLineItem
}
/**
 *	Generated after a successful recalculation of a Discount on a [Custom Line Item](ctp:api:type:CustomLineItem).
 *
 */
export interface OrderCustomLineItemDiscountSetMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'OrderCustomLineItemDiscountSet'
  /**
   *	Unique identifier for the [Custom Line Item](ctp:api:type:CustomLineItem).
   *
   *
   */
  readonly customLineItemId: string
  /**
   *	User-defined unique identifier of the [Custom Line Item](ctp:api:type:CustomLineItem).
   *
   *
   */
  readonly customLineItemKey?: string
  /**
   *	Array of [DiscountedLineItemPriceForQuantity](ctp:api:type:DiscountedLineItemPriceForQuantity) after the Discount recalculation.
   *
   *
   */
  readonly discountedPricePerQuantity: DiscountedLineItemPriceForQuantity[]
  /**
   *	[TaxedItemPrice](ctp:api:type:TaxedItemPrice) of the [Custom Line Item](ctp:api:type:CustomLineItem) after the Discount recalculation.
   *
   *
   */
  readonly taxedPrice?: TaxedItemPrice
}
/**
 *	Generated after a successful [Change CustomLineItem Quantity](ctp:api:type:StagedOrderChangeCustomLineItemQuantityAction) update action.
 *
 */
export interface OrderCustomLineItemQuantityChangedMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'OrderCustomLineItemQuantityChanged'
  /**
   *	Unique identifier of the [Custom Line Item](ctp:api:type:CustomLineItem).
   *
   *
   */
  readonly customLineItemId: string
  /**
   *	User-defined unique identifier of the [Custom Line Item](ctp:api:type:CustomLineItem).
   *
   *
   */
  readonly customLineItemKey?: string
  /**
   *	[Custom Line Item](ctp:api:type:CustomLineItem) quantity after the [Change Custom Line Item Quantity](ctp:api:type:StagedOrderChangeCustomLineItemQuantityAction) update action.
   *
   *
   */
  readonly quantity: number
  /**
   *	[Custom Line Item](ctp:api:type:CustomLineItem) quantity before the [Change Custom Line Item Quantity](ctp:api:type:StagedOrderChangeCustomLineItemQuantityAction) update action.
   *
   *
   */
  readonly oldQuantity: number
}
/**
 *	Generated after a successful [Remove CustomLineItem](ctp:api:type:StagedOrderRemoveCustomLineItemAction) update action.
 *
 */
export interface OrderCustomLineItemRemovedMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'OrderCustomLineItemRemoved'
  /**
   *	Unique identifier of the [Custom Line Item](ctp:api:type:CustomLineItem).
   *
   *
   */
  readonly customLineItemId: string
  /**
   *	User-defined unique identifier of the [Custom Line Item](ctp:api:type:CustomLineItem).
   *
   *
   */
  readonly customLineItemKey?: string
  /**
   *	[Custom Line Item](ctp:api:type:CustomLineItem) that was removed from the [Order](ctp:api:type:Order).
   *
   *
   */
  readonly customLineItem: CustomLineItem
}
/**
 *	Generated after a successful [Set Custom Type](ctp:api:type:OrderSetCustomTypeAction) with empty parameters.
 *
 */
export interface OrderCustomTypeRemovedMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'OrderCustomTypeRemoved'
  /**
   *	`id` of the [Custom Type](ctp:api:type:Type) that was removed. Absent if there was no previous Custom Type present.
   *
   *
   */
  readonly previousTypeId?: string
}
/**
 *	Generated after a successful [Set Custom Type](ctp:api:type:OrderSetCustomTypeAction).
 *
 */
export interface OrderCustomTypeSetMessagePayload extends IOrderMessagePayload {
  readonly type: 'OrderCustomTypeSet'
  /**
   *	The Custom Fields that have been set.
   *
   */
  readonly customFields: CustomFields
  /**
   *	`id` of the previous [Custom Type](ctp:api:type:Type). Absent if there was no previous Custom Type present.
   *
   *
   */
  readonly previousTypeId?: string
}
/**
 *	Generated after a successful [Set Customer Email](ctp:api:type:OrderSetCustomerEmailAction) update action.
 *
 */
export interface OrderCustomerEmailSetMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'OrderCustomerEmailSet'
  /**
   *	Email address on the [Order](ctp:api:type:Order) after the [Set Customer Email](ctp:api:type:OrderSetCustomerEmailAction) update action.
   *
   *
   */
  readonly email?: string
  /**
   *	Email address on the [Order](ctp:api:type:Order) before the [Set Customer Email](ctp:api:type:OrderSetCustomerEmailAction) update action.
   *
   *
   */
  readonly oldEmail?: string
}
/**
 *	Generated after a successful [Set Customer Group](ctp:api:type:StagedOrderSetCustomerGroupAction) update action.
 *
 */
export interface OrderCustomerGroupSetMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'OrderCustomerGroupSet'
  /**
   *	[CustomerGroup](ctp:api:type:CustomerGroup) on the [Order](ctp:api:type:Order) after the [Set Customer Group](ctp:api:type:StagedOrderSetCustomerGroupAction) update action.
   *
   *
   */
  readonly customerGroup?: CustomerGroupReference
  /**
   *	[CustomerGroup](ctp:api:type:CustomerGroup) on the [Order](ctp:api:type:Order) before the [Set Customer Group](ctp:api:type:StagedOrderSetCustomerGroupAction) update action.
   *
   *
   */
  readonly oldCustomerGroup?: CustomerGroupReference
}
/**
 *	Generated after a successful [Set Customer ID](ctp:api:type:OrderSetCustomerIdAction) update action.
 *
 */
export interface OrderCustomerSetMessagePayload extends IOrderMessagePayload {
  readonly type: 'OrderCustomerSet'
  /**
   *	[Customer](ctp:api:type:Customer) on the [Order](ctp:api:type:Order) after the [Set Customer ID](ctp:api:type:OrderSetCustomerIdAction) update action.
   *
   *
   */
  readonly customer?: CustomerReference
  /**
   *	[CustomerGroup](ctp:api:type:CustomerGroup) on the [Order](ctp:api:type:Order) after the [Set Customer ID](ctp:api:type:OrderSetCustomerIdAction) update action.
   *
   *
   */
  readonly customerGroup?: CustomerGroupReference
  /**
   *	[Customer](ctp:api:type:Customer) on the [Order](ctp:api:type:Order) before the [Set Customer ID](ctp:api:type:OrderSetCustomerIdAction) update action.
   *
   *
   */
  readonly oldCustomer?: CustomerReference
  /**
   *	[CustomerGroup](ctp:api:type:CustomerGroup) on the [Order](ctp:api:type:Order) before the [Set Customer ID](ctp:api:type:OrderSetCustomerIdAction) update action.
   *
   *
   */
  readonly oldCustomerGroup?: CustomerGroupReference
}
/**
 *	Generated after a successful [Delete Order](/../api/projects/orders#delete-order) request.
 *
 */
export interface OrderDeletedMessagePayload extends IOrderMessagePayload {
  readonly type: 'OrderDeleted'
  /**
   *	[Order](ctp:api:type:Order) that has been deleted.
   *
   *
   */
  readonly order: _Order
}
/**
 *	Generated after a successful [Add DiscountCode](ctp:api:type:StagedOrderAddDiscountCodeAction) update action.
 *
 */
export interface OrderDiscountCodeAddedMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'OrderDiscountCodeAdded'
  /**
   *	[DiscountCode](ctp:api:type:DiscountCode) that was added.
   *
   *
   */
  readonly discountCode: DiscountCodeReference
}
/**
 *	Generated after a successful [Remove DiscountCode](ctp:api:type:StagedOrderRemoveDiscountCodeAction) update action.
 *
 */
export interface OrderDiscountCodeRemovedMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'OrderDiscountCodeRemoved'
  /**
   *	[DiscountCode](ctp:api:type:DiscountCode) that was removed.
   *
   *
   */
  readonly discountCode: DiscountCodeReference
}
/**
 *	Generated after the [DiscountCodeState](ctp:api:type:DiscountCodeState) changes due to a [recalculation](/../api/projects/carts#recalculate).
 *
 */
export interface OrderDiscountCodeStateSetMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'OrderDiscountCodeStateSet'
  /**
   *	[DiscountCode](ctp:api:type:DiscountCode) that changed due to the recalculation.
   *
   *
   */
  readonly discountCode: DiscountCodeReference
  /**
   *	[DiscountCodeState](ctp:api:type:DiscountCodeState) after the recalculation.
   *
   *
   */
  readonly state: DiscountCodeState
  /**
   *	[DiscountCodeState](ctp:api:type:DiscountCodeState) before the recalculation.
   *
   *
   */
  readonly oldState?: DiscountCodeState
}
/**
 *	Generated after successfully [applying an OrderEdit](ctp:api:endpoint:/{projectKey}/orders/edits/{id}/apply:POST).
 *
 */
export interface OrderEditAppliedMessagePayload extends IOrderMessagePayload {
  readonly type: 'OrderEditApplied'
  /**
   *	[OrderEdit](ctp:api:type:OrderEdit) that was applied.
   *
   *
   */
  readonly edit: OrderEdit
  /**
   *	Information about a successfully applied [OrderEdit](ctp:api:type:OrderEdit).
   *
   *
   */
  readonly result: OrderEditApplied
}
/**
 *	Generated after a successful [Order Import](ctp:api:endpoint:/{projectKey}/orders/import:POST).
 *
 */
export interface OrderImportedMessagePayload extends IOrderMessagePayload {
  readonly type: 'OrderImported'
  /**
   *	[Order](ctp:api:type:Order) that was imported.
   *
   *
   */
  readonly order: _Order
}
/**
 *	Generated after a successful [Add LineItem](ctp:api:type:StagedOrderAddLineItemAction) update action.
 *
 */
export interface OrderLineItemAddedMessagePayload extends IOrderMessagePayload {
  readonly type: 'OrderLineItemAdded'
  /**
   *	[Line Item](ctp:api:type:LineItem) that was added to the [Order](ctp:api:type:Order).
   *
   *
   */
  readonly lineItem: LineItem
  /**
   *	Quantity of [Line Items](ctp:api:type:LineItem) that were added to the [Order](ctp:api:type:Order).
   *
   *
   */
  readonly addedQuantity: number
}
/**
 *	Generated after a successful recalculation of a Discount on a [Line Item](ctp:api:type:LineItem).
 *
 */
export interface OrderLineItemDiscountSetMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'OrderLineItemDiscountSet'
  /**
   *	Unique identifier for the [Line Item](ctp:api:type:LineItem).
   *
   *
   */
  readonly lineItemId: string
  /**
   *	User-defined unique identifier of the LineItem.
   *
   *
   */
  readonly lineItemKey?: string
  /**
   *	Array of [DiscountedLineItemPriceForQuantity](ctp:api:type:DiscountedLineItemPriceForQuantity) after the Discount recalculation.
   *
   *
   */
  readonly discountedPricePerQuantity: DiscountedLineItemPriceForQuantity[]
  /**
   *	Total Price of the [Line Item](ctp:api:type:LineItem) after the Discount recalculation.
   *
   *
   */
  readonly totalPrice: CentPrecisionMoney
  /**
   *	[TaxedItemPrice](ctp:api:type:TaxedItemPrice) of the [Line Item](ctp:api:type:LineItem) after the Discount recalculation.
   *
   *
   */
  readonly taxedPrice?: TaxedItemPrice
  /**
   *	Total taxed prices based on the quantity of Line Item assigned to each [Shipping Method](ctp:api:type:ShippingMethod). Only applicable for Carts with `Multiple` [ShippingMode](ctp:api:type:ShippingMode).
   *	Automatically set after `perMethodTaxRate` is set.
   *
   *
   */
  readonly taxedPricePortions: MethodTaxedPrice[]
}
/**
 *	Generated after a successful [Set LineItem DistributionChannel](/../api/projects/order-edits#set-lineitem-distributionchannel) update action.
 *
 */
export interface OrderLineItemDistributionChannelSetMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'OrderLineItemDistributionChannelSet'
  /**
   *	Unique identifier of the [Line Item](ctp:api:type:LineItem).
   *
   *
   */
  readonly lineItemId: string
  /**
   *	User-defined unique identifier of the LineItem.
   *
   *
   */
  readonly lineItemKey?: string
  /**
   *	[Distribution Channel](ctp:api:type:Channel) that was set.
   *
   *
   */
  readonly distributionChannel?: ChannelReference
}
/**
 *	Generated after a successful [Remove LineItem](ctp:api:type:StagedOrderRemoveLineItemAction) update action.
 *
 */
export interface OrderLineItemRemovedMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'OrderLineItemRemoved'
  /**
   *	Unique identifier of the [Line Item](ctp:api:type:LineItem).
   *
   *
   */
  readonly lineItemId: string
  /**
   *	User-defined unique identifier of the LineItem.
   *
   *
   */
  readonly lineItemKey?: string
  /**
   *	Quantity of [Line Items](ctp:api:type:LineItem) that were removed during the [Remove LineItem](ctp:api:type:StagedOrderRemoveLineItemAction) update action.
   *
   *
   */
  readonly removedQuantity: number
  /**
   *	[Line Item](ctp:api:type:LineItem) quantity after the [Remove LineItem](ctp:api:type:StagedOrderRemoveLineItemAction) update action.
   *
   *
   */
  readonly newQuantity: number
  /**
   *	[ItemStates](ctp:api:type:ItemState) after the [Remove LineItem](ctp:api:type:StagedOrderRemoveLineItemAction) update action.
   *
   *
   */
  readonly newState: ItemState[]
  /**
   *	`totalPrice` of the [Order](ctp:api:type:Order) after the [Remove LineItem](ctp:api:type:StagedOrderRemoveLineItemAction) update action.
   *
   *
   */
  readonly newTotalPrice: CentPrecisionMoney
  /**
   *	[TaxedItemPrice](ctp:api:type:TaxedItemPrice) of the [Order](ctp:api:type:Order) after the [Remove LineItem](ctp:api:type:StagedOrderRemoveLineItemAction) update action.
   *
   *
   */
  readonly newTaxedPrice?: TaxedItemPrice
  /**
   *	[Price](ctp:api:type:Price) of the [Order](ctp:api:type:Order) after the [Remove LineItem](ctp:api:type:StagedOrderRemoveLineItemAction) update action.
   *
   *
   */
  readonly newPrice?: Price
  /**
   *	[Shipping Details](ctp:api:type:ItemShippingDetails) of the [Order](ctp:api:type:Order) after the [Remove LineItem](ctp:api:type:StagedOrderRemoveLineItemAction) update action.
   *
   *
   */
  readonly newShippingDetail?: ItemShippingDetails
}
/**
 *	Generated after a successful [Add Payment](ctp:api:type:OrderAddPaymentAction) update action or when a [Payment](ctp:api:type:Payment) is added via [Order Edits](ctp:api:type:StagedOrderAddPaymentAction).
 *
 */
export interface OrderPaymentAddedMessagePayload extends IMessagePayload {
  readonly type: 'OrderPaymentAdded'
  /**
   *	[Payment](ctp:api:type:Payment) that was added to the [Order](ctp:api:type:Order).
   *
   *
   */
  readonly payment: PaymentReference
}
/**
 *	Generated after a successful [Change PaymentState](ctp:api:type:OrderChangePaymentStateAction) update action.
 *
 */
export interface OrderPaymentStateChangedMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'OrderPaymentStateChanged'
  /**
   *	[PaymentState](ctp:api:type:PaymentState) after the [Change Payment State](ctp:api:type:OrderChangePaymentStateAction) update action.
   *
   *
   */
  readonly paymentState: PaymentState
  /**
   *	[PaymentState](ctp:api:type:PaymentState) before the [Change Payment State](ctp:api:type:OrderChangePaymentStateAction) update action.
   *
   *
   */
  readonly oldPaymentState?: PaymentState
}
/**
 *	Generated after a successful [Set Purchase Order Number](ctp:api:type:OrderSetPurchaseOrderNumberAction) update action.
 *
 */
export interface OrderPurchaseOrderNumberSetMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'OrderPurchaseOrderNumberSet'
  /**
   *	Purchase order number on the [Order](ctp:api:type:Order) after the [Set Purchase Order Number](ctp:api:type:OrderSetPurchaseOrderNumberAction) update action.
   *
   *
   */
  readonly purchaseOrderNumber?: string
  /**
   *	Purchase order number on the [Order](ctp:api:type:Order) before the [Set Purchase Order Number](ctp:api:type:OrderSetPurchaseOrderNumberAction) update action.
   *
   *
   */
  readonly oldPurchaseOrderNumber?: string
}
/**
 *	Generated after a successful [Set ReturnShipmentState](ctp:api:type:OrderSetReturnShipmentStateAction) update action on [Orders](ctp:api:type:Order) and [Order Edits](ctp:api:type:OrderEdit).
 *
 */
export interface OrderReturnShipmentStateChangedMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'OrderReturnShipmentStateChanged'
  /**
   *	Unique identifier of the [ReturnItem](ctp:api:type:ReturnItem).
   *
   *
   */
  readonly returnItemId: string
  /**
   *	State of the [ReturnItem](ctp:api:type:ReturnItem) after the [Set Return Shipment State](ctp:api:type:OrderSetReturnShipmentStateAction) update action.
   *
   *
   */
  readonly returnShipmentState: ReturnShipmentState
}
/**
 *	Generated after a successful [Change ShipmentState](ctp:api:type:OrderChangeShipmentStateAction) update action.
 *
 */
export interface OrderShipmentStateChangedMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'OrderShipmentStateChanged'
  /**
   *	[ShipmentState](ctp:api:type:ShipmentState) after the [Change Shipment State](ctp:api:type:OrderChangeShipmentStateAction) update action.
   *
   *
   */
  readonly shipmentState: ShipmentState
  /**
   *	[ShipmentState](ctp:api:type:ShipmentState) before the [Change Shipment State](ctp:api:type:OrderChangeShipmentStateAction) update action.
   *
   *
   */
  readonly oldShipmentState?: ShipmentState
}
/**
 *	Generated after a successful [Set Shipping Address](ctp:api:type:OrderSetShippingAddressAction) update action.
 *
 */
export interface OrderShippingAddressSetMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'OrderShippingAddressSet'
  /**
   *	Shipping address on the Order after the [Set Shipping Address](ctp:api:type:OrderSetShippingAddressAction) update action.
   *
   *
   */
  readonly address?: Address
  /**
   *	Shipping address on the Order before the [Set Shipping Address](ctp:api:type:OrderSetShippingAddressAction) update action.
   *
   *
   */
  readonly oldAddress?: Address
}
/**
 *	Generated after a successful [Set ShippingMethod](ctp:api:type:StagedOrderSetShippingMethodAction) and [Set Custom ShippingMethod](ctp:api:type:StagedOrderSetCustomShippingMethodAction) update actions.
 *
 */
export interface OrderShippingInfoSetMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'OrderShippingInfoSet'
  /**
   *	[ShippingInfo](ctp:api:type:ShippingInfo) after the [Set Shipping Method](ctp:api:type:StagedOrderSetShippingMethodAction) or [Set Custom Shipping Method](ctp:api:type:StagedOrderSetCustomShippingMethodAction) update action.
   *
   *
   */
  readonly shippingInfo?: ShippingInfo
  /**
   *	[ShippingInfo](ctp:api:type:ShippingInfo) before the [Set Shipping Method](ctp:api:type:StagedOrderSetShippingMethodAction) or [Set Custom Shipping Method](ctp:api:type:StagedOrderSetCustomShippingMethodAction) update action.
   *
   *
   */
  readonly oldShippingInfo?: ShippingInfo
}
/**
 *	Generated after a successful [Set ShippingRateInput](ctp:api:type:StagedOrderSetShippingRateInputAction) update action.
 *
 */
export interface OrderShippingRateInputSetMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'OrderShippingRateInputSet'
  /**
   *	[ShippingRateInput](ctp:api:type:ShippingRateInput) after the [Set ShippingRateInput](ctp:api:type:StagedOrderSetShippingRateInputAction) update action.
   *
   *
   */
  readonly shippingRateInput?: ShippingRateInput
  /**
   *	[ShippingRateInput](ctp:api:type:ShippingRateInput) before the [Set ShippingRateInput](ctp:api:type:StagedOrderSetShippingRateInputAction) update action.
   *
   *
   */
  readonly oldShippingRateInput?: ShippingRateInput
}
/**
 *	Generated after a successful [Change OrderState](ctp:api:type:OrderChangeOrderStateAction) update action.
 *
 */
export interface OrderStateChangedMessagePayload extends IOrderMessagePayload {
  readonly type: 'OrderStateChanged'
  /**
   *	[OrderState](ctp:api:type:OrderState) after the [Change Order State](ctp:api:type:OrderChangeOrderStateAction) update action.
   *
   *
   */
  readonly orderState: OrderState
  /**
   *	[OrderState](ctp:api:type:OrderState) before the [Change Order State](ctp:api:type:OrderChangeOrderStateAction) update action.
   *
   *
   */
  readonly oldOrderState?: OrderState
}
/**
 *	Generated after a successful [Transition State](ctp:api:type:OrderTransitionStateAction) update action.
 *
 */
export interface OrderStateTransitionMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'OrderStateTransition'
  /**
   *	[OrderState](ctp:api:type:OrderState) after the [Transition State](ctp:api:type:OrderTransitionStateAction) update action.
   *
   *
   */
  readonly state: StateReference
  /**
   *	[OrderState](ctp:api:type:OrderState) before the [Transition State](ctp:api:type:OrderTransitionStateAction) update action.
   *
   *
   */
  readonly oldState?: StateReference
  /**
   *	Whether [State](ctp:api:type:State) transition validations were turned off during the [Transition State](ctp:api:type:OrderTransitionStateAction) update action.
   *
   *
   */
  readonly force: boolean
}
/**
 *	Generated after a successful [Set Store](ctp:api:type:OrderSetStoreAction) update action.
 *
 */
export interface OrderStoreSetMessagePayload extends IOrderMessagePayload {
  readonly type: 'OrderStoreSet'
  /**
   *	[Store](ctp:api:type:Store) that was set.
   *
   *
   */
  readonly store?: StoreKeyReference
}
/**
 *	Generated after a successful [Add Parcel to Delivery](ctp:api:type:OrderAddParcelToDeliveryAction) update action.
 *
 */
export interface ParcelAddedToDeliveryMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'ParcelAddedToDelivery'
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly delivery: Delivery
  /**
   *	[Parcel](ctp:api:type:Parcel) that was added to the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly parcel: Parcel
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multiple` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Set Parcel Items](ctp:api:type:OrderSetParcelItemsAction) update action.
 *
 */
export interface ParcelItemsUpdatedMessagePayload extends IOrderMessagePayload {
  readonly type: 'ParcelItemsUpdated'
  /**
   *	Unique identifier of the [Parcel](ctp:api:type:Parcel).
   *
   *
   */
  readonly parcelId: string
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
  /**
   *	[Delivery Items](ctp:api:type:DeliveryItem) after the [Set Parcel Items](ctp:api:type:OrderSetParcelItemsAction) update action.
   *
   *
   */
  readonly items: DeliveryItem[]
  /**
   *	[Delivery Items](ctp:api:type:DeliveryItem) before the [Set Parcel Items](ctp:api:type:OrderSetParcelItemsAction) update action.
   *
   *
   */
  readonly oldItems: DeliveryItem[]
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multiple` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Set Parcel Measurements](ctp:api:type:OrderSetParcelMeasurementsAction) update action.
 *
 */
export interface ParcelMeasurementsUpdatedMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'ParcelMeasurementsUpdated'
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
  /**
   *	Unique identifier of the [Parcel](ctp:api:type:Parcel).
   *
   *
   */
  readonly parcelId: string
  /**
   *	The [Parcel Measurements](ctp:api:type:ParcelMeasurements) that were set on the [Parcel](ctp:api:type:Parcel).
   *
   *
   */
  readonly measurements?: ParcelMeasurements
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multiple` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Remove Parcel from Delivery](ctp:api:type:OrderRemoveParcelFromDeliveryAction) update action.
 *
 */
export interface ParcelRemovedFromDeliveryMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'ParcelRemovedFromDelivery'
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
  /**
   *	[Parcel](ctp:api:type:Parcel) that was removed from the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly parcel: Parcel
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multiple` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Set Parcel Tracking Data](ctp:api:type:OrderSetParcelTrackingDataAction) update action.
 *
 */
export interface ParcelTrackingDataUpdatedMessagePayload
  extends IOrderMessagePayload {
  readonly type: 'ParcelTrackingDataUpdated'
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
  /**
   *	Unique identifier of the [Parcel](ctp:api:type:Parcel).
   *
   *
   */
  readonly parcelId: string
  /**
   *	The [Tracking Data](ctp:api:type:TrackingData) that was added to the [Parcel](ctp:api:type:Parcel).
   *
   *
   */
  readonly trackingData?: TrackingData
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multiple` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Create Payment](ctp:api:endpoint:/{projectKey}/payments:POST) request.
 *
 */
export interface PaymentCreatedMessagePayload extends IMessagePayload {
  readonly type: 'PaymentCreated'
  /**
   *	[Payment](ctp:api:type:Payment) that was created.
   *
   *
   */
  readonly payment: Payment
}
/**
 *	Generated after a successful [Add InterfaceInteraction](ctp:api:type:PaymentAddInterfaceInteractionAction) update action.
 *
 */
export interface PaymentInteractionAddedMessagePayload extends IMessagePayload {
  readonly type: 'PaymentInteractionAdded'
  /**
   *	The interface interaction that was added to the [Payment](ctp:api:type:Payment).
   *
   *
   */
  readonly interaction: CustomFields
}
/**
 *	Generated after a successful [Set StatusInterfaceCode](ctp:api:type:PaymentSetStatusInterfaceCodeAction) update action.
 *
 */
export interface PaymentStatusInterfaceCodeSetMessagePayload
  extends IMessagePayload {
  readonly type: 'PaymentStatusInterfaceCodeSet'
  /**
   *	The `interfaceCode` that was set during the [Set StatusInterfaceCode](ctp:api:type:PaymentSetStatusInterfaceCodeAction) update action.
   *
   *
   */
  readonly interfaceCode?: string
}
/**
 *	Generated after a successful [Transition State](ctp:api:type:PaymentTransitionStateAction) update action.
 *
 */
export interface PaymentStatusStateTransitionMessagePayload
  extends IMessagePayload {
  readonly type: 'PaymentStatusStateTransition'
  /**
   *	[State](ctp:api:type:State) of the [Payment](ctp:api:type:Payment) after the [Transition State](ctp:api:type:PaymentTransitionStateAction) update action.
   *
   *
   */
  readonly state: StateReference
  /**
   *	Whether [State](ctp:api:type:State) transition validations were turned off during the [Change Transaction State](ctp:api:type:PaymentChangeTransactionStateAction) update action.
   *
   *
   */
  readonly force: boolean
}
/**
 *	Generated after a successful [Add Transaction](ctp:api:type:PaymentAddTransactionAction) update action.
 *
 */
export interface PaymentTransactionAddedMessagePayload extends IMessagePayload {
  readonly type: 'PaymentTransactionAdded'
  /**
   *	[Transaction](ctp:api:type:Transaction) that was added to the [Payment](ctp:api:type:Payment).
   *
   *
   */
  readonly transaction: Transaction
}
/**
 *	Generated after a successful [Change TransactionState](ctp:api:type:PaymentChangeTransactionStateAction) update action.
 *
 */
export interface PaymentTransactionStateChangedMessagePayload
  extends IMessagePayload {
  readonly type: 'PaymentTransactionStateChanged'
  /**
   *	Unique identifier for the [Transaction](ctp:api:type:Transaction) for which the [Transaction State](ctp:api:type:TransactionState) changed.
   *
   *
   */
  readonly transactionId: string
  /**
   *	[Transaction State](ctp:api:type:TransactionState) after the [Change Transaction State](ctp:api:type:PaymentChangeTransactionStateAction) update action.
   *
   *
   */
  readonly state: TransactionState
}
/**
 *	Generated after a successful [Add to Category](ctp:api:type:ProductAddToCategoryAction) update action.
 *
 */
export interface ProductAddedToCategoryMessagePayload extends IMessagePayload {
  readonly type: 'ProductAddedToCategory'
  /**
   *	[Category](ctp:api:type:Category) the [Product](ctp:api:type:Product) was added to.
   *
   *
   */
  readonly category: CategoryReference
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Create Product](ctp:api:endpoint:/{projectKey}/products:POST) request.
 *
 */
export interface ProductCreatedMessagePayload extends IMessagePayload {
  readonly type: 'ProductCreated'
  /**
   *	The staged [Product Projection](ctp:api:type:ProductProjection) of the [Product](ctp:api:type:Product) at the time of creation.
   *
   *
   */
  readonly productProjection: ProductProjection
}
/**
 *	Generated after a successful [Delete Product](/../api/projects/products#delete-product) request.
 *
 */
export interface ProductDeletedMessagePayload extends IMessagePayload {
  readonly type: 'ProductDeleted'
  /**
   *	List of image URLs that were removed during the [Delete Product](ctp:api:type:Product) request.
   *
   *
   */
  readonly removedImageUrls: string[]
  /**
   *	Current [Product Projection](ctp:api:type:ProductProjection) of the deleted [Product](ctp:api:type:Product).
   *
   *
   */
  readonly currentProjection?: ProductProjection
}
/**
 *	Generated after a successful [Add External Image](ctp:api:type:ProductAddExternalImageAction) update action or after the successful [upload of an image](/../api/projects/products#upload-product-image).
 *
 */
export interface ProductImageAddedMessagePayload extends IMessagePayload {
  readonly type: 'ProductImageAdded'
  /**
   *	Unique identifier of the [Product Variant](ctp:api:type:ProductVariant) to which the [Image](ctp:api:type:Image) was added.
   *
   *
   */
  readonly variantId: number
  /**
   *	[Image](ctp:api:type:Image) that was added.
   *
   *
   */
  readonly image: Image
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Add Price](ctp:api:type:ProductAddPriceAction) update action.
 *
 */
export interface ProductPriceAddedMessagePayload extends IMessagePayload {
  readonly type: 'ProductPriceAdded'
  /**
   *	Unique identifier of the [ProductVariant](ctp:api:type:ProductVariant) for which the Price was added.
   *
   *
   */
  readonly variantId: number
  /**
   *	The Embedded Price that was added to the [ProductVariant](ctp:api:type:ProductVariant).
   *
   *
   */
  readonly price: Price
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Change Price](ctp:api:type:ProductChangePriceAction) update action.
 *
 */
export interface ProductPriceChangedMessagePayload extends IMessagePayload {
  readonly type: 'ProductPriceChanged'
  /**
   *	Unique identifier of the [ProductVariant](ctp:api:type:ProductVariant) for which the Price was changed.
   *
   *
   */
  readonly variantId: number
  /**
   *	The current Embedded Price before the [Change Embedded Price](ctp:api:type:ProductChangePriceAction) update action.
   *
   *
   */
  readonly oldPrice: Price
  /**
   *	The Embedded Price after the [Change Embedded Price](ctp:api:type:ProductChangePriceAction) update action.
   *
   *
   */
  readonly newPrice: Price
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
  /**
   *	The staged Embedded Price before the [Change Embedded Price](ctp:api:type:ProductChangePriceAction) update action.
   *
   *
   */
  readonly oldStagedPrice?: Price
}
/**
 *	Generated after adding a Custom Field to a Price using the [Set Price CustomField](ctp:api:type:ProductSetProductPriceCustomFieldAction) update action.
 *
 */
export interface ProductPriceCustomFieldAddedMessagePayload
  extends IMessagePayload {
  readonly type: 'ProductPriceCustomFieldAdded'
  /**
   *	Unique identifier of the [Price](ctp:api:type:Price) to which the Custom Field was added.
   *
   *
   */
  readonly priceId: string
  /**
   *	Unique identifier of the [ProductVariant](ctp:api:type:ProductVariant) to which the Price belongs.
   *
   *
   */
  readonly variantId: number
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
  /**
   *	Name of the Custom Field that was added.
   *
   *
   */
  readonly name: string
  /**
   *	The added [CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType).
   *
   *
   */
  readonly value: any
}
/**
 *	Generated after changing an existing Custom Field on a Price using the [Set Price CustomField](ctp:api:type:ProductSetProductPriceCustomFieldAction) update action.
 *
 */
export interface ProductPriceCustomFieldChangedMessagePayload
  extends IMessagePayload {
  readonly type: 'ProductPriceCustomFieldChanged'
  /**
   *	Unique identifier of the [Price](ctp:api:type:Price) of which the Custom Field was changed.
   *
   *
   */
  readonly priceId: string
  /**
   *	Unique identifier of the [ProductVariant](ctp:api:type:ProductVariant) to which the Price belongs.
   *
   *
   */
  readonly variantId: number
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
  /**
   *	Name of the Custom Field that was changed.
   *
   *
   */
  readonly name: string
  /**
   *	[CustomFieldValue](ctp:api:type:CustomFieldValue) based on the [FieldType](ctp:api:type:FieldType) after the [Set Price CustomField](ctp:api:type:ProductSetProductPriceCustomFieldAction) update action.
   *
   *
   */
  readonly value: any
}
/**
 *	Generated after removing a Custom Field from a Price using the [Set Price CustomField](ctp:api:type:ProductSetProductPriceCustomFieldAction) update action.
 *
 */
export interface ProductPriceCustomFieldRemovedMessagePayload
  extends IMessagePayload {
  readonly type: 'ProductPriceCustomFieldRemoved'
  /**
   *	Unique identifier of the [Price](ctp:api:type:Price) from which the Custom Field was removed.
   *
   *
   */
  readonly priceId: string
  /**
   *	Unique identifier of the [ProductVariant](ctp:api:type:ProductVariant) to which the Price belongs.
   *
   *
   */
  readonly variantId: number
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
  /**
   *	Name of the Custom Field that was removed.
   *
   *
   */
  readonly name: string
}
/**
 *	Generated after removing a Custom Type from a Price using the [Set Price Custom Type](ctp:api:type:ProductSetProductPriceCustomTypeAction) update action.
 *
 */
export interface ProductPriceCustomFieldsRemovedMessagePayload
  extends IMessagePayload {
  readonly type: 'ProductPriceCustomFieldsRemoved'
  /**
   *	Unique identifier of the [Price](ctp:api:type:Price) from which the Custom Type was removed.
   *
   *
   */
  readonly priceId: string
  /**
   *	Unique identifier of the [ProductVariant](ctp:api:type:ProductVariant) to which the Price belongs.
   *
   *
   */
  readonly variantId: number
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Set Price Custom Type](ctp:api:type:ProductSetProductPriceCustomTypeAction) update action.
 *
 */
export interface ProductPriceCustomFieldsSetMessagePayload
  extends IMessagePayload {
  readonly type: 'ProductPriceCustomFieldsSet'
  /**
   *	Unique identifier of the [Price](ctp:api:type:Price) on which the Custom Type was set.
   *
   *
   */
  readonly priceId: string
  /**
   *	Unique identifier of the [ProductVariant](ctp:api:type:ProductVariant) to which the Price belongs.
   *
   *
   */
  readonly variantId: number
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
  /**
   *	Custom Fields that were set.
   *
   *
   */
  readonly customField: CustomFields
  /**
   *	`id` of the previous [Custom Type](ctp:api:type:Type). Absent if there was no previous Custom Type present.
   *
   *
   */
  readonly oldTypeId?: string
}
/**
 *	Generated after a Price is updated due to a [Product Discount](ctp:api:type:ProductDiscount).
 *
 */
export interface ProductPriceDiscountsSetMessagePayload
  extends IMessagePayload {
  readonly type: 'ProductPriceDiscountsSet'
  /**
   *	Array containing details about the [Embedded Prices](ctp:api:type:Price) that were updated.
   *
   *
   */
  readonly updatedPrices: ProductPriceDiscountsSetUpdatedPrice[]
}
/**
 *	Generated after a successful [Set Discounted Price](ctp:api:type:ProductSetDiscountedPriceAction) update action.
 *
 */
export interface ProductPriceExternalDiscountSetMessagePayload
  extends IMessagePayload {
  readonly type: 'ProductPriceExternalDiscountSet'
  /**
   *	Unique identifier of the [Product Variant](ctp:api:type:ProductVariant) for which the Discount was set.
   *
   *
   */
  readonly variantId: number
  /**
   *	Key of the [Product Variant](ctp:api:type:ProductVariant) for which the Discount was set.
   *
   *
   */
  readonly variantKey?: string
  /**
   *	SKU of the [Product Variant](ctp:api:type:ProductVariant) for which Discount was set.
   *
   *
   */
  readonly sku?: string
  /**
   *	Unique identifier of the [Price](ctp:api:type:Price).
   *
   *
   */
  readonly priceId: string
  /**
   *	Discounted Price for the [Product Variant](ctp:api:type:ProductVariant) for which Discount was set.
   *
   *
   */
  readonly discounted?: DiscountedPrice
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Set Price Key](ctp:api:type:ProductSetPriceKeyAction) update action.
 *
 */
export interface ProductPriceKeySetMessagePayload extends IMessagePayload {
  readonly type: 'ProductPriceKeySet'
  /**
   *
   */
  readonly variantId: number
  /**
   *	Unique identifier of the [Price](ctp:api:type:Price).
   *
   *
   */
  readonly priceId?: string
  /**
   *	`key` value of the [Price](ctp:api:type:Price) before the [Set Price Key](ctp:api:type:ProductSetPriceKeyAction) update action.
   *
   *
   */
  readonly oldKey?: string
  /**
   *	`key` value of the [Price](ctp:api:type:Price) after the [Set Price Key](ctp:api:type:ProductSetPriceKeyAction) update action.
   *
   *
   */
  readonly key?: string
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Set PriceMode](ctp:api:type:ProductSetPriceModeAction) update action.
 *
 */
export interface ProductPriceModeSetMessagePayload extends IMessagePayload {
  readonly type: 'ProductPriceModeSet'
  /**
   *	The [PriceMode](ctp:api:type:ProductPriceModeEnum) that was set.
   *
   *
   */
  readonly to: ProductPriceModeEnum
}
/**
 *	Generated after a successful [Remove Price](ctp:api:type:ProductRemovePriceAction) update action.
 *
 */
export interface ProductPriceRemovedMessagePayload extends IMessagePayload {
  readonly type: 'ProductPriceRemoved'
  /**
   *	Unique identifier of the [ProductVariant](ctp:api:type:ProductVariant) for which the Price was removed.
   *
   *
   */
  readonly variantId: number
  /**
   *	The Embedded Price that was removed from the [ProductVariant](ctp:api:type:ProductVariant).
   *
   *
   */
  readonly price: Price
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Set Prices](ctp:api:type:ProductSetPricesAction) update action.
 *
 */
export interface ProductPricesSetMessagePayload extends IMessagePayload {
  readonly type: 'ProductPricesSet'
  /**
   *	Unique identifier of the [ProductVariant](ctp:api:type:ProductVariant) for which the Price was set.
   *
   *
   */
  readonly variantId: number
  /**
   *	The [Embedded Prices](ctp:api:type:Price) that were set on the [ProductVariant](ctp:api:type:ProductVariant).
   *
   *
   */
  readonly prices: Price[]
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Publish](ctp:api:type:ProductPublishAction) update action.
 *
 */
export interface ProductPublishedMessagePayload extends IMessagePayload {
  readonly type: 'ProductPublished'
  /**
   *	List of image URLs which were removed during the [Publish](ctp:api:type:ProductPublishAction) update action.
   *
   *
   */
  readonly removedImageUrls: string[]
  /**
   *	Current [Product Projection](ctp:api:type:ProductProjection) of the [Product](ctp:api:type:Product) at the time of creation.
   *
   *
   */
  readonly productProjection: ProductProjection
  /**
   *	[Publishing Scope](ctp:api:type:ProductPublishScope) that was used during the [Publish](ctp:api:type:ProductPublishAction) update action.
   *
   *
   */
  readonly scope: ProductPublishScope
}
/**
 *	Generated after a successful [Remove from Category](ctp:api:type:ProductRemoveFromCategoryAction) update action.
 *
 */
export interface ProductRemovedFromCategoryMessagePayload
  extends IMessagePayload {
  readonly type: 'ProductRemovedFromCategory'
  /**
   *	[Category](ctp:api:type:Category) the [Product](ctp:api:type:Product) was removed from.
   *
   *
   */
  readonly category: CategoryReference
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Revert Staged Changes](ctp:api:type:ProductRevertStagedChangesAction) update action.
 *
 */
export interface ProductRevertedStagedChangesMessagePayload
  extends IMessagePayload {
  readonly type: 'ProductRevertedStagedChanges'
  /**
   *	List of image URLs that were removed during the [Revert Staged Changes](ctp:api:type:ProductRevertStagedChangesAction) update action.
   *
   *
   */
  readonly removedImageUrls: string[]
}
/**
 *	Generated after a successful [Create Product Selection](ctp:api:endpoint:/{projectKey}/product-selections:POST) request.
 *
 */
export interface ProductSelectionCreatedMessagePayload extends IMessagePayload {
  readonly type: 'ProductSelectionCreated'
  /**
   *	[Product Selection](ctp:api:type:ProductSelection) that was created.
   *
   *
   */
  readonly productSelection: ProductSelection
}
/**
 *	Generated after a successful [Delete Product Selection](/../api/projects/product-selections#delete-productselection) request.
 *
 */
export interface ProductSelectionDeletedMessagePayload extends IMessagePayload {
  readonly type: 'ProductSelectionDeleted'
}
/**
 *	Generated after a successful [Add Product](ctp:api:type:ProductSelectionAddProductAction) update action.
 *
 */
export interface ProductSelectionProductAddedMessagePayload
  extends IMessagePayload {
  readonly type: 'ProductSelectionProductAdded'
  /**
   *	[Product](ctp:api:type:Product) that was added to the [Product Selection](ctp:api:type:ProductSelection).
   *
   *
   */
  readonly product: ProductReference
  /**
   *	Product Variant Selection after the [Add Product](ctp:api:type:ProductSelectionAddProductAction) update action.
   *
   *
   */
  readonly variantSelection: ProductVariantSelection
}
/**
 *	Generated after a successful [Exclude Product](ctp:api:type:ProductSelectionExcludeProductAction) update action.
 *
 */
export interface ProductSelectionProductExcludedMessagePayload
  extends IMessagePayload {
  readonly type: 'ProductSelectionProductExcluded'
  /**
   *	[Product](ctp:api:type:Product) that was excluded from the [Product Selection](ctp:api:type:ProductSelection).
   *
   *
   */
  readonly product: ProductReference
  /**
   *	Product Variant Exclusion after the [Exclude Product](ctp:api:type:ProductSelectionExcludeProductAction) update action.
   *
   *
   */
  readonly variantExclusion: ProductVariantExclusion
}
/**
 *	Generated after a successful [Remove Product](ctp:api:type:ProductSelectionRemoveProductAction) update action.
 *
 */
export interface ProductSelectionProductRemovedMessagePayload
  extends IMessagePayload {
  readonly type: 'ProductSelectionProductRemoved'
  /**
   *	[Product](ctp:api:type:Product) that was removed from the Product Selection.
   *
   *
   */
  readonly product: ProductReference
}
/**
 *	Generated after a successful [Set Variant Exclusion](ctp:api:type:ProductSelectionSetVariantExclusionAction) update action.
 *
 */
export interface ProductSelectionVariantExclusionChangedMessagePayload
  extends IMessagePayload {
  readonly type: 'ProductSelectionVariantExclusionChanged'
  /**
   *	[Product](ctp:api:type:Product) for which the Product Variant Exclusion changed.
   *
   *
   */
  readonly product: ProductReference
  /**
   *	Product Variant Exclusion before the [Set Variant Exclusion](ctp:api:type:ProductSelectionSetVariantExclusionAction) update action.
   *
   */
  readonly oldVariantExclusion: ProductVariantExclusion
  /**
   *	Product Variant Exclusion after the [Set Variant Exclusion](ctp:api:type:ProductSelectionSetVariantExclusionAction) update action.
   *
   */
  readonly newVariantExclusion: ProductVariantExclusion
}
/**
 *	Generated after a successful [Set Variant Selection](ctp:api:type:ProductSelectionSetVariantSelectionAction) update action.
 *
 */
export interface ProductSelectionVariantSelectionChangedMessagePayload
  extends IMessagePayload {
  readonly type: 'ProductSelectionVariantSelectionChanged'
  /**
   *	[Product](ctp:api:type:Product) for which the Product Variant Selection changed.
   *
   *
   */
  readonly product: ProductReference
  /**
   *	Product Variant Selection before the [Set Variant Selection](ctp:api:type:ProductSelectionSetVariantSelectionAction) update action.
   *
   */
  readonly oldVariantSelection: ProductVariantSelection
  /**
   *	Product Variant Selection after the [Set Variant Selection](ctp:api:type:ProductSelectionSetVariantSelectionAction) update action.
   *
   */
  readonly newVariantSelection: ProductVariantSelection
}
/**
 *	Generated after a successful [Change Slug](ctp:api:type:ProductChangeSlugAction) update action.
 *
 */
export interface ProductSlugChangedMessagePayload extends IMessagePayload {
  readonly type: 'ProductSlugChanged'
  /**
   *	The slug of the [Product](ctp:api:type:Product) after the [Change Slug](ctp:api:type:ProductChangeSlugAction) update action.
   *
   *
   */
  readonly slug: LocalizedString
  /**
   *	The slug of the [Product](ctp:api:type:Product) before the [Change Slug](ctp:api:type:ProductChangeSlugAction) update action.
   *
   *
   */
  readonly oldSlug?: LocalizedString
}
/**
 *	Generated after a successful [Transition State](ctp:api:type:ProductTransitionStateAction) update action.
 *
 */
export interface ProductStateTransitionMessagePayload extends IMessagePayload {
  readonly type: 'ProductStateTransition'
  /**
   *	Product [State](ctp:api:type:State) after the [Transition State](ctp:api:type:ProductTransitionStateAction) update action.
   *
   */
  readonly state: StateReference
  /**
   *	Whether [State](ctp:api:type:State) transition validations were turned off during the [Transition State](ctp:api:type:ProductTransitionStateAction) update action.
   *
   *
   */
  readonly force: boolean
}
/**
 *	Generated after a successful [Create Product Tailoring](/../api/projects/product-tailoring#create-producttailoring) or
 *	[Create Product Tailoring in Store](/../api/projects/product-tailoring#create-producttailoring-in-store) request.
 *
 */
export interface ProductTailoringCreatedMessagePayload extends IMessagePayload {
  readonly type: 'ProductTailoringCreated'
  /**
   *	User-defined unique identifier of the Product Tailoring.
   *
   *
   */
  readonly key?: string
  /**
   *	The Store to which the Product Tailoring belongs.
   *
   *
   */
  readonly store: StoreKeyReference
  /**
   *	User-defined unique identifier of the Product this Product Tailoring belongs to.
   *
   *
   */
  readonly productKey?: string
  /**
   *	Reference to the Product the Product Tailoring belongs to.
   *
   *
   */
  readonly product: ProductReference
  /**
   *	The description of the [Product Tailoring](ctp:api:type:ProductTailoring) at the time of creation.
   *
   *
   */
  readonly description?: LocalizedString
  /**
   *	The name of the [Product Tailoring](ctp:api:type:ProductTailoring) at the time of creation.
   *
   *
   */
  readonly name?: LocalizedString
  /**
   *	The slug of the [Product Tailoring](ctp:api:type:ProductTailoring) at the time of creation.
   *
   *
   */
  readonly slug?: LocalizedString
  /**
   *	The metaTitle of the [Product Tailoring](ctp:api:type:ProductTailoring) at the time of creation.
   *
   *
   */
  readonly metaTitle?: LocalizedString
  /**
   *	The metaDescription of the [Product Tailoring](ctp:api:type:ProductTailoring) at the time of creation.
   *
   *
   */
  readonly metaDescription?: LocalizedString
  /**
   *	The metaKeywords of the [Product Tailoring](ctp:api:type:ProductTailoring) at the time of creation.
   *
   *
   */
  readonly metaKeywords?: LocalizedString
  /**
   *	The variants of the [Product Tailoring](ctp:api:type:ProductTailoring) at the time of creation.
   *
   *
   */
  readonly variants?: ProductVariantTailoring[]
  /**
   *	`true` if the ProductTailoring is published.
   *
   *
   */
  readonly published: boolean
}
/**
 *	Generated after a successful [Delete Product Tailoring](/../api/projects/product-tailoring#delete-producttailoring) or
 *	[Delete ProductTailoring assigned to Product in Store](/../api/projects/product-tailoring#delete-producttailoring-assigned-to-product-in-store) request.
 *
 */
export interface ProductTailoringDeletedMessagePayload extends IMessagePayload {
  readonly type: 'ProductTailoringDeleted'
  /**
   *	The Store to which the Product Tailoring belongs.
   *
   *
   */
  readonly store: StoreKeyReference
  /**
   *	User-defined unique identifier of the Product this Product Tailoring belongs to.
   *
   *
   */
  readonly productKey?: string
  /**
   *	Reference to the Product the Product Tailoring belongs to.
   *
   *
   */
  readonly product: ProductReference
}
/**
 *	Generated after a successful Product Tailoring [Set Description](ctp:api:type:ProductTailoringSetDescriptionAction) update action.
 *
 */
export interface ProductTailoringDescriptionSetMessagePayload
  extends IMessagePayload {
  readonly type: 'ProductTailoringDescriptionSet'
  /**
   *	The Store to which the Product Tailoring belongs.
   *
   *
   */
  readonly store: StoreKeyReference
  /**
   *	User-defined unique identifier of the Product this Product Tailoring belongs to.
   *
   *
   */
  readonly productKey?: string
  /**
   *	Reference to the Product the Product Tailoring belongs to.
   *
   *
   */
  readonly product: ProductReference
  /**
   *	The description of the [Product Tailoring](ctp:api:type:ProductTailoring) after the [Set Description](ctp:api:type:ProductTailoringSetDescriptionAction) update action.
   *
   *
   */
  readonly description?: LocalizedString
  /**
   *	The description of the [ProductTailoring](ctp:api:type:ProductTailoring) before the [Set Description](ctp:api:type:ProductTailoringSetDescriptionAction) update action.
   *
   *
   */
  readonly oldDescription?: LocalizedString
}
/**
 *	Generated after a successful [Add External Image](ctp:api:type:ProductTailoringAddExternalImageAction) update action
 *	or after a successful [Upload Product Tailoring image](/projects/product-tailoring#upload-product-tailoring-image) request.
 *
 */
export interface ProductTailoringImageAddedMessagePayload
  extends IMessagePayload {
  readonly type: 'ProductTailoringImageAdded'
  /**
   *	The Store to which the Product Tailoring belongs.
   *
   *
   */
  readonly store: StoreKeyReference
  /**
   *	`key` of the tailored Product.
   *
   *
   */
  readonly productKey?: string
  /**
   *	Reference to the tailored Product.
   *
   *
   */
  readonly product: ProductReference
  /**
   *	`id` of the tailored [ProductVariant](ctp:api:type:ProductVariant).
   *
   *
   */
  readonly variantId: number
  /**
   *	[Image](ctp:api:type:Image) that was added.
   *
   *
   */
  readonly image: Image
}
/**
 *	Generated after a successful [Set Images](ctp:api:type:ProductTailoringSetExternalImagesAction) update action.
 *
 */
export interface ProductTailoringImagesSetMessagePayload
  extends IMessagePayload {
  readonly type: 'ProductTailoringImagesSet'
  /**
   *	The Store to which the Product Tailoring belongs.
   *
   *
   */
  readonly store: StoreKeyReference
  /**
   *	`key` of the tailored Product.
   *
   *
   */
  readonly productKey?: string
  /**
   *	Reference to the Product the Product Tailoring belongs to.
   *
   *
   */
  readonly product: ProductReference
  /**
   *	`id` of the tailored Product Variant.
   *
   *
   */
  readonly variantId: number
  /**
   *	[Images](ctp:api:type:Image) on the tailored [Product Variant](ctp:api:type:ProductVariantTailoring) before the [Set Images](ctp:api:type:ProductTailoringSetExternalImagesAction) update action.
   *
   *
   */
  readonly oldImages?: Image[]
  /**
   *	[Images](ctp:api:type:Image) on the tailored [Product Variant](ctp:api:type:ProductVariantTailoring) after the [Set Images](ctp:api:type:ProductTailoringSetExternalImagesAction) update action.
   *
   *
   */
  readonly images?: Image[]
}
/**
 *	Generated after a successful Product Tailoring [Set Name](ctp:api:type:ProductTailoringSetNameAction) update action.
 *
 */
export interface ProductTailoringNameSetMessagePayload extends IMessagePayload {
  readonly type: 'ProductTailoringNameSet'
  /**
   *	The Store to which the Product Tailoring belongs.
   *
   *
   */
  readonly store: StoreKeyReference
  /**
   *	User-defined unique identifier of the Product this Product Tailoring belongs to.
   *
   *
   */
  readonly productKey?: string
  /**
   *	Reference to the Product the Product Tailoring belongs to.
   *
   *
   */
  readonly product: ProductReference
  /**
   *	The name of the [Product Tailoring](ctp:api:type:ProductTailoring) after the [Set Name](ctp:api:type:ProductTailoringSetNameAction) update action.
   *
   *
   */
  readonly name?: LocalizedString
  /**
   *	The name of the [ProductTailoring](ctp:api:type:ProductTailoring) before the [Set Name](ctp:api:type:ProductTailoringSetNameAction) update action.
   *
   *
   */
  readonly oldName?: LocalizedString
}
/**
 *	Generated after a successful [Product Tailoring Publish](ctp:api:type:ProductTailoringPublishAction) update action.
 *
 */
export interface ProductTailoringPublishedMessagePayload
  extends IMessagePayload {
  readonly type: 'ProductTailoringPublished'
  /**
   *	The Store to which the Product Tailoring belongs.
   *
   *
   */
  readonly store: StoreKeyReference
  /**
   *	User-defined unique identifier of the Product this Product Tailoring belongs to.
   *
   *
   */
  readonly productKey?: string
  /**
   *	Reference to the Product the Product Tailoring belongs to.
   *
   *
   */
  readonly product: ProductReference
}
/**
 *	Generated after a successful Product Tailoring [Set Slug](ctp:api:type:ProductTailoringSetSlugAction) update action.
 *
 */
export interface ProductTailoringSlugSetMessagePayload extends IMessagePayload {
  readonly type: 'ProductTailoringSlugSet'
  /**
   *	The Store to which the Product Tailoring belongs.
   *
   *
   */
  readonly store: StoreKeyReference
  /**
   *	User-defined unique identifier of the Product this Product Tailoring belongs to.
   *
   *
   */
  readonly productKey?: string
  /**
   *	Reference to the Product the Product Tailoring belongs to.
   *
   *
   */
  readonly product: ProductReference
  /**
   *	The slug of the [Product Tailoring](ctp:api:type:ProductTailoring) after the [Set Slug](ctp:api:type:ProductTailoringSetSlugAction) update action.
   *
   *
   */
  readonly slug?: LocalizedString
  /**
   *	The slug of the [ProductTailoring](ctp:api:type:ProductTailoring) before the [Set Slug](ctp:api:type:ProductTailoringSetSlugAction) update action.
   *
   *
   */
  readonly oldSlug?: LocalizedString
}
/**
 *	Generated after a successful [Product Tailoring Unpublish](ctp:api:type:ProductTailoringUnpublishAction) update action.
 *
 */
export interface ProductTailoringUnpublishedMessagePayload
  extends IMessagePayload {
  readonly type: 'ProductTailoringUnpublished'
  /**
   *	The Store to which the Product Tailoring belongs.
   *
   *
   */
  readonly store: StoreKeyReference
  /**
   *	User-defined unique identifier of the Product this Product Tailoring belongs to.
   *
   *
   */
  readonly productKey?: string
  /**
   *	Reference to the Product the Product Tailoring belongs to.
   *
   *
   */
  readonly product: ProductReference
}
/**
 *	Generated after a successful [Unpublish Product](ctp:api:type:ProductUnpublishAction) update action.
 *
 */
export interface ProductUnpublishedMessagePayload extends IMessagePayload {
  readonly type: 'ProductUnpublished'
}
/**
 *	Generated after a successful [Add ProductVariant](ctp:api:type:ProductAddVariantAction) update action.
 *
 */
export interface ProductVariantAddedMessagePayload extends IMessagePayload {
  readonly type: 'ProductVariantAdded'
  /**
   *	Unique identifier of the [Product Variant](ctp:api:type:ProductVariant) that was added.
   *
   *
   */
  readonly variant: ProductVariant
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Remove ProductVariant](ctp:api:type:ProductRemoveVariantAction) update action.
 *
 */
export interface ProductVariantDeletedMessagePayload extends IMessagePayload {
  readonly type: 'ProductVariantDeleted'
  /**
   *	Unique identifier of the [Product Variant](ctp:api:type:ProductVariant) that was added.
   *
   *
   */
  readonly variant?: ProductVariant
  /**
   *	List of image URLs that were removed with the [Remove Product Variant](ctp:api:type:ProductRemoveVariantAction) update action.
   *
   *
   */
  readonly removedImageUrls: string[]
  /**
   *	If `true`, this message informs that only the staged ProductVariant has been removed by the update action.
   *	If `false`, both the current and staged ProductVariant have been removed.
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Add ProductVariant Tailoring](ctp:api:type:ProductTailoringAddVariantAction) update action.
 *
 */
export interface ProductVariantTailoringAddedMessagePayload
  extends IMessagePayload {
  readonly type: 'ProductVariantTailoringAdded'
  /**
   *	The Store to which the Product Tailoring belongs.
   *
   *
   */
  readonly store: StoreKeyReference
  /**
   *	`key` of the tailored Product.
   *
   *
   */
  readonly productKey?: string
  /**
   *	Reference to the tailored Product.
   *
   *
   */
  readonly product: ProductReference
  /**
   *	`id` of the [ProductVariant](ctp:api:type:ProductVariant) added to the Tailoring.
   *
   *
   */
  readonly variantId: number
  /**
   *	The [ProductVariantTailoring](ctp:api:type:ProductVariantTailoring) that was added to the ProductTailoring.
   *
   *
   */
  readonly variant: ProductVariantTailoring
}
/**
 *	Generated after a successful [Remove ProductVariant Tailoring](ctp:api:type:ProductTailoringRemoveVariantAction) update action.
 *
 */
export interface ProductVariantTailoringRemovedMessagePayload
  extends IMessagePayload {
  readonly type: 'ProductVariantTailoringRemoved'
  /**
   *	The Store to which the Product Tailoring belongs.
   *
   *
   */
  readonly store: StoreKeyReference
  /**
   *	`key` of the tailored Product.
   *
   *
   */
  readonly productKey?: string
  /**
   *	Reference to the Product the Product Tailoring belongs to.
   *
   *
   */
  readonly product: ProductReference
  /**
   *	`id` of the [ProductVariant](ctp:api:type:ProductVariant) removed from the Tailoring.
   *
   *
   */
  readonly variantId: number
  /**
   *	The [ProductVariantTailoring](ctp:api:type:ProductVariantTailoring) that was removed from the ProductTailoring.
   *
   *
   */
  readonly variant: ProductVariantTailoring
}
/**
 *	Generated after a successful [Create Quote](ctp:api:endpoint:/{projectKey}/quotes:POST) request.
 *
 */
export interface QuoteCreatedMessagePayload extends IMessagePayload {
  readonly type: 'QuoteCreated'
  /**
   *	[Quote](/../api/projects/quotes) that was created.
   *
   *
   */
  readonly quote: Quote
}
/**
 *	Generated after a successful [Change Customer](ctp:api:type:QuoteChangeCustomerAction) update action.
 *
 */
export interface QuoteCustomerChangedMessagePayload extends IMessagePayload {
  readonly type: 'QuoteCustomerChanged'
  /**
   *	The [Buyer](/../api/quotes-overview#buyer) who now owns the Quote.
   *
   *
   */
  readonly customer: CustomerReference
  /**
   *	The previous [Buyer](/../api/quotes-overview#buyer).
   *
   *
   */
  readonly previousCustomer: CustomerReference
}
/**
 *	Generated after a successful [Delete Quote](/../api/projects/quotes#delete-quote) request.
 *
 */
export interface QuoteDeletedMessagePayload extends IMessagePayload {
  readonly type: 'QuoteDeleted'
}
/**
 *	Generated after a successful [Request Quote Renegotiation](ctp:api:type:QuoteRequestQuoteRenegotiationAction) update action.
 *
 */
export interface QuoteRenegotiationRequestedMessagePayload
  extends IMessagePayload {
  readonly type: 'QuoteRenegotiationRequested'
  /**
   *	Message from the [Buyer](/api/quotes-overview#buyer) regarding the Quote renegotiation request.
   *
   *
   */
  readonly buyerComment?: string
}
/**
 *	Generated after a successful [Create QuoteRequest](ctp:api:endpoint:/{projectKey}/quote-requests:POST) request.
 *
 */
export interface QuoteRequestCreatedMessagePayload extends IMessagePayload {
  readonly type: 'QuoteRequestCreated'
  /**
   *	[Quote Request](/../api/projects/quote-requests) that was created.
   *
   *
   */
  readonly quoteRequest: QuoteRequest
}
/**
 *	Generated after a successful [Change Customer](ctp:api:type:QuoteRequestChangeCustomerAction) update action.
 *
 */
export interface QuoteRequestCustomerChangedMessagePayload
  extends IMessagePayload {
  readonly type: 'QuoteRequestCustomerChanged'
  /**
   *	The [Buyer](/../api/quotes-overview#buyer) who now owns the Quote Request.
   *
   *
   */
  readonly customer: CustomerReference
  /**
   *	The previous [Buyer](/../api/quotes-overview#buyer).
   *
   *
   */
  readonly previousCustomer: CustomerReference
}
/**
 *	Generated after a successful [Delete QuoteRequest](/../api/projects/quote-requests#delete-quoterequest) request.
 *
 */
export interface QuoteRequestDeletedMessagePayload extends IMessagePayload {
  readonly type: 'QuoteRequestDeleted'
}
/**
 *	Generated after a successful [Change Quote Request State](ctp:api:type:QuoteRequestChangeQuoteRequestStateAction) update action.
 *
 */
export interface QuoteRequestStateChangedMessagePayload
  extends IMessagePayload {
  readonly type: 'QuoteRequestStateChanged'
  /**
   *	State of the Quote Request after the [Change Quote Request State](ctp:api:type:QuoteRequestChangeQuoteRequestStateAction) update action.
   *
   *
   */
  readonly quoteRequestState: QuoteRequestState
  /**
   *	State of the Quote Request before the [Change Quote Request State](ctp:api:type:QuoteRequestChangeQuoteRequestStateAction) update action.
   *
   *
   */
  readonly oldQuoteRequestState: QuoteRequestState
}
/**
 *	Generated after a successful [Transition State](ctp:api:type:QuoteRequestTransitionStateAction) update action.
 *
 */
export interface QuoteRequestStateTransitionMessagePayload
  extends IMessagePayload {
  readonly type: 'QuoteRequestStateTransition'
  /**
   *	[State](ctp:api:type:State) of the [Quote](ctp:api:type:Quote) after the [Transition State](ctp:api:type:QuoteRequestTransitionStateAction) update action.
   *
   *
   */
  readonly state: StateReference
  /**
   *	[State](ctp:api:type:State) of the [Quote](ctp:api:type:Quote) before the [Transition State](ctp:api:type:QuoteRequestTransitionStateAction) update action.
   *
   *
   */
  readonly oldState?: StateReference
  /**
   *	Whether [State](ctp:api:type:State) transition validations were turned off during the [Transition State](ctp:api:type:QuoteRequestTransitionStateAction) update action.
   *
   *
   */
  readonly force: boolean
}
/**
 *	Generated after a successful [Change Quote State](ctp:api:type:QuoteChangeQuoteStateAction) update action.
 *
 */
export interface QuoteStateChangedMessagePayload extends IMessagePayload {
  readonly type: 'QuoteStateChanged'
  /**
   *	State of the Quote after the [Change Quote State](ctp:api:type:QuoteChangeQuoteStateAction) update action.
   *
   *
   */
  readonly quoteState: QuoteState
  /**
   *	State of the Quote before the [Change Quote State](ctp:api:type:QuoteChangeQuoteStateAction) update action.
   *
   *
   */
  readonly oldQuoteState: QuoteState
}
/**
 *	Generated after a successful [Transition State](ctp:api:type:QuoteTransitionStateAction) update action.
 *
 */
export interface QuoteStateTransitionMessagePayload extends IMessagePayload {
  readonly type: 'QuoteStateTransition'
  /**
   *	[State](ctp:api:type:State) of the [Quote](ctp:api:type:Quote) after the [Transition State](ctp:api:type:QuoteTransitionStateAction) update action.
   *
   *
   */
  readonly state: StateReference
  /**
   *	[State](ctp:api:type:State) of the [Quote](ctp:api:type:Quote) before the [Transition State](ctp:api:type:QuoteTransitionStateAction) update action.
   *
   *
   */
  readonly oldState?: StateReference
  /**
   *	Whether [State](ctp:api:type:State) transition validations were turned off during the [Transition State](ctp:api:type:QuoteTransitionStateAction) update action.
   *
   *
   */
  readonly force: boolean
}
/**
 *	Generated after a successful [Add ReturnInfo](ctp:api:type:OrderAddReturnInfoAction) update action.
 *
 */
export interface ReturnInfoAddedMessagePayload extends IOrderMessagePayload {
  readonly type: 'ReturnInfoAdded'
  /**
   *	The [ReturnInfo](ctp:api:type:ReturnInfo) that was added to the [Order](ctp:api:type:Order).
   *
   *
   */
  readonly returnInfo: ReturnInfo
}
/**
 *	Generated after a successful [Set ReturnInfo](ctp:api:type:OrderSetReturnInfoAction) update action on [Orders](ctp:api:type:Order) and [Order Edits](ctp:api:type:OrderEdit).
 *
 */
export interface ReturnInfoSetMessagePayload extends IOrderMessagePayload {
  readonly type: 'ReturnInfoSet'
  /**
   *	The [ReturnInfo](ctp:api:type:ReturnInfo) that was set on the [Order](ctp:api:type:Order) or [Order Edit](ctp:api:type:OrderEdit).
   *
   *
   */
  readonly returnInfo?: ReturnInfo[]
}
/**
 *	Generated after a successful [Create Review](ctp:api:endpoint:/{projectKey}/reviews:POST) request.
 *
 */
export interface ReviewCreatedMessagePayload extends IMessagePayload {
  readonly type: 'ReviewCreated'
  /**
   *	[Review](ctp:api:type:Review) that was created.
   *
   *
   */
  readonly review: Review
}
/**
 *	Generated after a successful [Set Rating](ctp:api:type:ReviewSetRatingAction) update action.
 *
 */
export interface ReviewRatingSetMessagePayload extends IMessagePayload {
  readonly type: 'ReviewRatingSet'
  /**
   *	The `rating` of the [Review](ctp:api:type:Review) before the [Set Rating](ctp:api:type:ReviewSetRatingAction) update action.
   *
   *
   */
  readonly oldRating?: number
  /**
   *	The `rating` of the [Review](ctp:api:type:Review) after the [Set Rating](ctp:api:type:ReviewSetRatingAction) update action.
   *
   *
   */
  readonly newRating?: number
  /**
   *	Whether the [Review](ctp:api:type:Review) was taken into account in the ratings statistics of the target.
   *
   *
   */
  readonly includedInStatistics: boolean
  /**
   *	[Reference](ctp:api:type:Reference) to the resource that the [Review](ctp:api:type:Review) belongs to.
   *
   *
   */
  readonly target?: Reference
}
/**
 *	Generated after a successful [Transition State](ctp:api:type:ReviewTransitionStateAction) update action.
 *
 */
export interface ReviewStateTransitionMessagePayload extends IMessagePayload {
  readonly type: 'ReviewStateTransition'
  /**
   *	[State](ctp:api:type:State) of the [Review](ctp:api:type:Review) before the [Transition State](ctp:api:type:ReviewTransitionStateAction) update action.
   *
   *
   */
  readonly oldState?: StateReference
  /**
   *	[State](ctp:api:type:State) of the [Review](ctp:api:type:Review) after the [Transition State](ctp:api:type:ReviewTransitionStateAction) update action.
   *
   *
   */
  readonly newState: StateReference
  /**
   *	Whether the old [Review](ctp:api:type:Review) was taken into account in the rating statistics of the target before the state transition.
   *
   *
   */
  readonly oldIncludedInStatistics: boolean
  /**
   *	Whether the new [Review](ctp:api:type:Review) was taken into account in the rating statistics of the target after the state transition.
   *
   *
   */
  readonly newIncludedInStatistics: boolean
  /**
   *	[Reference](ctp:api:type:Reference) to the resource that the [Review](ctp:api:type:Review) belongs to.
   *
   *
   */
  readonly target?: Reference
  /**
   *	Whether [State](ctp:api:type:State) transition validations were turned off during the [Transition State](ctp:api:type:ReviewTransitionStateAction) update action.
   *
   *
   */
  readonly force: boolean
}
export type ShoppingListMessagePayload =
  | ShoppingListLineItemAddedMessagePayload
  | ShoppingListLineItemRemovedMessagePayload
export interface IShoppingListMessagePayload {
  /**
   *
   */
  readonly type: string
}
/**
 *	Generated after a successful [Add ShoppingListLineItem](ctp:api:type:ShoppingListAddLineItemAction) update action.
 *
 */
export interface ShoppingListLineItemAddedMessagePayload
  extends IShoppingListMessagePayload {
  readonly type: 'ShoppingListLineItemAdded'
  /**
   *	[Line Item](ctp:api:type:ShoppingListLineItem) that was added to the [ShoppingList](ctp:api:type:ShoppingList).
   *
   *
   */
  readonly lineItem: ShoppingListLineItem
}
/**
 *	Generated after a successful [Remove ShoppingListLineItem](ctp:api:type:ShoppingListRemoveLineItemAction) update action.
 *
 */
export interface ShoppingListLineItemRemovedMessagePayload
  extends IShoppingListMessagePayload {
  readonly type: 'ShoppingListLineItemRemoved'
  /**
   *	[Line Item](ctp:api:type:ShoppingListLineItem) that was removed from the [ShoppingList](ctp:api:type:ShoppingList).
   *
   *
   */
  readonly lineItem: ShoppingListLineItem
}
export interface ShoppingListStoreSetMessagePayload extends IMessagePayload {
  readonly type: 'ShoppingListStoreSet'
  /**
   *	[KeyReference](ctp:api:type:KeyReference) to a [Store](ctp:api:type:Store).
   *
   *
   */
  readonly store: StoreKeyReference
}
/**
 *	Generated after a successful [Create StagedQuote](ctp:api:endpoint:/{projectKey}/staged-quotes:POST) request.
 *
 */
export interface StagedQuoteCreatedMessagePayload extends IMessagePayload {
  readonly type: 'StagedQuoteCreated'
  /**
   *	[Staged Quote](/../api/projects/staged-quotes) that was created.
   *
   *
   */
  readonly stagedQuote: StagedQuote
}
/**
 *	Generated after a successful [Delete StagedQuote](/../api/projects/staged-quotes#delete-stagedquote) request.
 *
 */
export interface StagedQuoteDeletedMessagePayload extends IMessagePayload {
  readonly type: 'StagedQuoteDeleted'
}
/**
 *	Generated after a successful [Set Seller Comment](ctp:api:type:StagedQuoteSetSellerCommentAction) update action.
 *
 */
export interface StagedQuoteSellerCommentSetMessagePayload
  extends IMessagePayload {
  readonly type: 'StagedQuoteSellerCommentSet'
  /**
   *	`sellerComment` on the [StagedQuote](ctp:api:type:StagedQuote) after a successful [Set Seller Comment](ctp:api:type:StagedQuoteSetSellerCommentAction) update action.
   *
   *
   */
  readonly sellerComment: string
}
/**
 *	Generated after a successful [Change Staged Quote State](ctp:api:type:StagedQuoteChangeStagedQuoteStateAction) update action.
 *
 */
export interface StagedQuoteStateChangedMessagePayload extends IMessagePayload {
  readonly type: 'StagedQuoteStateChanged'
  /**
   *	State of the Staged Quote after the [Change Staged Quote State](ctp:api:type:StagedQuoteChangeStagedQuoteStateAction) update action.
   *
   *
   */
  readonly stagedQuoteState: StagedQuoteState
  /**
   *	State of the Staged Quote before the [Change Staged Quote State](ctp:api:type:StagedQuoteChangeStagedQuoteStateAction) update action.
   *
   *
   */
  readonly oldStagedQuoteState: StagedQuoteState
}
/**
 *	Generated after a successful [Transition State](ctp:api:type:StagedQuoteTransitionStateAction) update action.
 *
 */
export interface StagedQuoteStateTransitionMessagePayload
  extends IMessagePayload {
  readonly type: 'StagedQuoteStateTransition'
  /**
   *	[State](ctp:api:type:State) of the [Quote](ctp:api:type:Quote) after the [Transition State](ctp:api:type:StagedQuoteTransitionStateAction) update action.
   *
   *
   */
  readonly state: StateReference
  /**
   *	[State](ctp:api:type:State) of the [Quote](ctp:api:type:Quote) before the [Transition State](ctp:api:type:StagedQuoteTransitionStateAction) update action.
   *
   *
   */
  readonly oldState?: StateReference
  /**
   *	Whether [State](ctp:api:type:State) transition validations were turned off during the [Transition State](ctp:api:type:StagedQuoteTransitionStateAction) update action.
   *
   *
   */
  readonly force: boolean
}
/**
 *	Generated after a successful [Set Valid To](ctp:api:type:StagedQuoteSetValidToAction) update action.
 *
 */
export interface StagedQuoteValidToSetMessagePayload extends IMessagePayload {
  readonly type: 'StagedQuoteValidToSet'
  /**
   *	Expiration date for the Staged Quote after the [Set Valid To](ctp:api:type:StagedQuoteSetValidToAction) update action.
   *
   *
   */
  readonly validTo: string
}
/**
 *	Generated after a successful [Change Active](ctp:api:type:StandalonePriceChangeActiveAction) update action.
 *
 */
export interface StandalonePriceActiveChangedMessagePayload
  extends IMessagePayload {
  readonly type: 'StandalonePriceActiveChanged'
  /**
   *	Value of the `active` field of the StandalonePrice after the [Change Active](ctp:api:type:StandalonePriceChangeActiveAction) update action.
   *
   *
   */
  readonly active: boolean
  /**
   *	Value of the `active` field of the StandalonePrice before the [Change Active](ctp:api:type:StandalonePriceChangeActiveAction) update action.
   *
   *
   */
  readonly oldActive: boolean
}
/**
 *	Generated after a successful [Create StandalonePrice](ctp:api:endpoint:/{projectKey}/standalone-prices:POST) request.
 *
 */
export interface StandalonePriceCreatedMessagePayload extends IMessagePayload {
  readonly type: 'StandalonePriceCreated'
  /**
   *	[Standalone Price](ctp:api:type:StandalonePrice) that was created.
   *
   *
   */
  readonly standalonePrice: StandalonePrice
}
/**
 *	Generated after a successful [Delete StandalonePrice](/../api/projects/standalone-prices#delete-standaloneprice) request.
 *
 */
export interface StandalonePriceDeletedMessagePayload extends IMessagePayload {
  readonly type: 'StandalonePriceDeleted'
  /**
   *	SKU of the [ProductVariant](ctp:api:type:ProductVariant) to which the deleted Standalone Price was associated.
   *
   *
   */
  readonly sku: string
}
/**
 *	Generated after a [Product Discount](ctp:api:type:ProductDiscount) is successfully applied to a StandalonePrice.
 *
 */
export interface StandalonePriceDiscountSetMessagePayload
  extends IMessagePayload {
  readonly type: 'StandalonePriceDiscountSet'
  /**
   *	The new `discounted` value of the updated [StandalonePrice](ctp:api:type:StandalonePrice).
   *
   *
   */
  readonly discounted?: DiscountedPrice
}
/**
 *	Generated after a successful [Set Discounted Price](ctp:api:type:StandalonePriceSetDiscountedPriceAction) update action.
 *
 */
export interface StandalonePriceExternalDiscountSetMessagePayload
  extends IMessagePayload {
  readonly type: 'StandalonePriceExternalDiscountSet'
  /**
   *	The `discounted` value of the [StandalonePrice](ctp:api:type:StandalonePrice) after the [Set Discounted Price](ctp:api:type:StandalonePriceSetDiscountedPriceAction) update action.
   *
   *
   */
  readonly discounted?: DiscountedPrice
}
/**
 *	Generated after a successful [Set Key](ctp:api:type:StandalonePriceSetKeyAction) update action.
 *
 */
export interface StandalonePriceKeySetMessagePayload extends IMessagePayload {
  readonly type: 'StandalonePriceKeySet'
  /**
   *	`key` value of the [StandalonePrice](ctp:api:type:StandalonePrice) after the [Set Key](ctp:api:type:StandalonePriceSetKeyAction) update action.
   *
   *
   */
  readonly key?: string
  /**
   *	`key` value of the [StandalonePrice](ctp:api:type:StandalonePrice) before the [Set Key](ctp:api:type:StandalonePriceSetKeyAction) update action.
   *
   *
   */
  readonly oldKey?: string
}
/**
 *	Generated after a successful [Apply Staged Changes](ctp:api:type:StandalonePriceApplyStagedChangesAction) update action.
 *
 */
export interface StandalonePriceStagedChangesAppliedMessagePayload
  extends IMessagePayload {
  readonly type: 'StandalonePriceStagedChangesApplied'
  /**
   *	Applied changes of the [StandalonePrice](/../api/projects/standalone-prices) after the [Apply Staged Changes](ctp:api:type:StandalonePriceApplyStagedChangesAction) update action.
   *
   *
   */
  readonly stagedChanges: StagedStandalonePrice
}
/**
 *	Generated after a successful [Remove Staged Changes](ctp:api:type:StandalonePriceRemoveStagedChangesAction) update action.
 *
 */
export interface StandalonePriceStagedChangesRemovedMessagePayload
  extends IMessagePayload {
  readonly type: 'StandalonePriceStagedChangesRemoved'
  /**
   *	Removed changes of the [StandalonePrice](ctp:api:type:StandalonePrice) after the [Remove Staged Changes](ctp:api:type:StandalonePriceRemoveStagedChangesAction) update action.
   *
   *
   */
  readonly stagedChanges: StagedStandalonePrice
}
/**
 *	Generated after a successful [Add Price Tier](ctp:api:type:StandalonePriceAddPriceTierAction) update action
 *
 */
export interface StandalonePriceTierAddedMessagePayload
  extends IMessagePayload {
  readonly type: 'StandalonePriceTierAdded'
  /**
   *	The [Price Tier](ctp:api:type:PriceTier) that has been added to the array field `tiers` for the [StandalonePrice](ctp:api:type:StandalonePrice).
   *
   *
   */
  readonly tier: PriceTier
}
/**
 *	Generated after a successful [Remove Price Tier](ctp:api:type:StandalonePriceRemovePriceTierAction) update action
 *
 */
export interface StandalonePriceTierRemovedMessagePayload
  extends IMessagePayload {
  readonly type: 'StandalonePriceTierRemoved'
  /**
   *	The [Price Tier](ctp:api:type:PriceTier) that has been removed from the array field `tiers` for the [StandalonePrice](ctp:api:type:StandalonePrice).
   *
   *
   */
  readonly removedTier: PriceTier
}
/**
 *	Generated after a successful [Set Price Tier](ctp:api:type:StandalonePriceSetPriceTiersAction) update action
 *
 */
export interface StandalonePriceTiersSetMessagePayload extends IMessagePayload {
  readonly type: 'StandalonePriceTiersSet'
  /**
   *	The updated content of the field `tiers` of the affected [StandalonePrice](ctp:api:type:StandalonePrice).
   *
   *
   */
  readonly tiers: PriceTier[]
  /**
   *	The previous content of the field `tiers` of the affected [StandalonePrice](ctp:api:type:StandalonePrice).
   *
   *
   */
  readonly previousTiers: PriceTier[]
}
/**
 *	Generated after a successful [Set Valid From and Until](ctp:api:type:StandalonePriceSetValidFromAndUntilAction) update action.
 *
 */
export interface StandalonePriceValidFromAndUntilSetMessagePayload
  extends IMessagePayload {
  readonly type: 'StandalonePriceValidFromAndUntilSet'
  /**
   *	Value of [StandalonePrice](ctp:api:type:StandalonePrice) `validFrom` after the [Set Valid From and Until](ctp:api:type:StandalonePriceSetValidFromAndUntilAction) update action.
   *
   *
   */
  readonly validFrom?: string
  /**
   *	Value of [StandalonePrice](ctp:api:type:StandalonePrice) `validFrom` before the [Set Valid From and Until](ctp:api:type:StandalonePriceSetValidFromAndUntilAction) update action.
   *
   *
   */
  readonly previousValidFrom?: string
  /**
   *	Value of [StandalonePrice](ctp:api:type:StandalonePrice) `validUntil` after the [Set Valid From and Until](ctp:api:type:StandalonePriceSetValidFromAndUntilAction) update action.
   *
   *
   */
  readonly validUntil?: string
  /**
   *	Value of [StandalonePrice](ctp:api:type:StandalonePrice) `validUntil` before the [Set Valid From and Until](ctp:api:type:StandalonePriceSetValidFromAndUntilAction) update action.
   *
   *
   */
  readonly previousValidUntil?: string
}
/**
 *	Generated after a successful [Set Valid From](ctp:api:type:StandalonePriceSetValidFromAction) update action.
 *
 */
export interface StandalonePriceValidFromSetMessagePayload
  extends IMessagePayload {
  readonly type: 'StandalonePriceValidFromSet'
  /**
   *	Value of [StandalonePrice](ctp:api:type:StandalonePrice) `validFrom` after the [Set Valid From](ctp:api:type:StandalonePriceSetValidFromAction) update action.
   *
   *
   */
  readonly validFrom?: string
  /**
   *	Value of [StandalonePrice](ctp:api:type:StandalonePrice) `validFrom` before the [Set Valid From](ctp:api:type:StandalonePriceSetValidFromAction) update action.
   *
   *
   */
  readonly previousValidFrom?: string
}
/**
 *	Generated after a successful [Set Valid Until](ctp:api:type:StandalonePriceSetValidUntilAction) update action.
 *
 */
export interface StandalonePriceValidUntilSetMessagePayload
  extends IMessagePayload {
  readonly type: 'StandalonePriceValidUntilSet'
  /**
   *	Value of [StandalonePrice](ctp:api:type:StandalonePrice) `validUntil` after the [Set Valid Until](ctp:api:type:StandalonePriceSetValidUntilAction) update action.
   *
   *
   */
  readonly validUntil?: string
  /**
   *	Value of [StandalonePrice](ctp:api:type:StandalonePrice) `validUntil` before the [Set Valid Until](ctp:api:type:StandalonePriceSetValidUntilAction) update action.
   *
   *
   */
  readonly previousValidUntil?: string
}
/**
 *	Generated after a successful [Change Value](ctp:api:type:StandalonePriceChangeValueAction) update action.
 *
 */
export interface StandalonePriceValueChangedMessagePayload
  extends IMessagePayload {
  readonly type: 'StandalonePriceValueChanged'
  /**
   *	The new value of the updated [StandalonePrice](ctp:api:type:StandalonePrice).
   *
   *
   */
  readonly value: TypedMoney
  /**
   *	Whether the new value was applied to the current or the staged representation of the StandalonePrice. Staged changes are stored on the [StagedStandalonePrice](ctp:api:type:StagedStandalonePrice).
   *
   *
   */
  readonly staged: boolean
  /**
   *	The old value of the updated [StandalonePrice](ctp:api:type:StandalonePrice).
   *	Present on Messages created after 3 February 2023. Optional for backwards compatibility.
   *
   *
   */
  readonly oldValue?: TypedMoney
}
/**
 *	Generated after a successful [Add Country](ctp:api:type:StoreAddCountryAction),
 *	[Remove Country](ctp:api:type:StoreRemoveCountryAction), or
 *	[Set Countries](ctp:api:type:StoreSetCountriesAction) update action.
 *
 */
export interface StoreCountriesChangedMessagePayload extends IMessagePayload {
  readonly type: 'StoreCountriesChanged'
  /**
   *	[Countries](ctp:api:type:StoreCountry) added to the [Store](ctp:api:type:Store).
   *
   *
   */
  readonly addedCountries?: StoreCountry[]
  /**
   *	[Countries](ctp:api:type:StoreCountry) removed from the [Store](ctp:api:type:Store).
   *
   *
   */
  readonly removedCountries?: StoreCountry[]
}
/**
 *	Generated after a successful [Create Store](ctp:api:endpoint:/{projectKey}/stores:POST) request.
 *
 */
export interface StoreCreatedMessagePayload extends IMessagePayload {
  readonly type: 'StoreCreated'
  /**
   *	The `name` of the [Store](ctp:api:type:Store) that was created.
   *
   *
   */
  readonly name?: LocalizedString
  /**
   *	Languages of the [Store](ctp:api:type:Store) that was created. Languages are represented as [IETF language tags](https://en.wikipedia.org/wiki/IETF_language_tag).
   *
   *
   */
  readonly languages?: string[]
  /**
   *	[Countries](ctp:api:type:StoreCountry) of the [Store](ctp:api:type:Store) that was created.
   *
   *
   */
  readonly countries?: StoreCountry[]
  /**
   *	[Distribution Channels](ctp:api:type:ChannelRoleEnum) of the [Store](ctp:api:type:Store) that was created.
   *
   *
   */
  readonly distributionChannels: ChannelReference[]
  /**
   *	[Supply Channels](ctp:api:type:ChannelRoleEnum) of the [Store](ctp:api:type:Store) that was created.
   *
   *
   */
  readonly supplyChannels: ChannelReference[]
  /**
   *	[ProductSelectionSettings](ctp:api:type:ProductSelectionSetting) of the [Store](ctp:api:type:Store) that was created.
   *
   *
   */
  readonly productSelections: ProductSelectionSetting[]
  /**
   *	[Custom Fields](ctp:api:type:CustomFields) on the [Store](ctp:api:type:Store) that was created.
   *
   *
   */
  readonly custom?: CustomFields
}
/**
 *	Generated after a successful [Delete Store](/../api/projects/stores#delete-store) request.
 *
 */
export interface StoreDeletedMessagePayload extends IMessagePayload {
  readonly type: 'StoreDeleted'
}
/**
 *	Generated after a successful [Add Distribution Channel](ctp:api:type:StoreAddDistributionChannelAction),
 *	[Remove Distribution Channel](ctp:api:type:StoreRemoveDistributionChannelAction), or
 *	[Set Distribution Channels](ctp:api:type:StoreSetDistributionChannelsAction) update action.
 *
 */
export interface StoreDistributionChannelsChangedMessagePayload
  extends IMessagePayload {
  readonly type: 'StoreDistributionChannelsChanged'
  /**
   *	Product distribution Channels that have been added to the [Store](ctp:api:type:Store).
   *
   */
  readonly addedDistributionChannels?: ChannelReference[]
  /**
   *	Product distribution Channels that have been removed from the [Store](ctp:api:type:Store).
   *
   *
   */
  readonly removedDistributionChannels?: ChannelReference[]
}
/**
 *	Generated after a successful [Set Languages](ctp:api:type:StoreSetLanguagesAction) update action.
 *
 */
export interface StoreLanguagesChangedMessagePayload extends IMessagePayload {
  readonly type: 'StoreLanguagesChanged'
  /**
   *	[Locales](ctp:api:type:Locale) added to the [Store](ctp:api:type:Store) after the [Set Languages](ctp:api:type:StoreSetLanguagesAction) update action.
   *
   *
   */
  readonly addedLanguages?: string[]
  /**
   *	[Locales](ctp:api:type:Locale) removed from the [Store](ctp:api:type:Store) during the [Set Languages](ctp:api:type:StoreSetLanguagesAction) update action.
   *
   *
   */
  readonly removedLanguages?: string[]
}
/**
 *	Generated after a successful [Set Name](ctp:api:type:StoreSetNameAction) update action.
 *
 */
export interface StoreNameSetMessagePayload extends IMessagePayload {
  readonly type: 'StoreNameSet'
  /**
   *	Name of the [Store](ctp:api:type:Store) set during the [Set Name](ctp:api:type:StoreSetNameAction) update action.
   *
   *
   */
  readonly name?: LocalizedString
  /**
   *	Names set for the [Store](ctp:api:type:Store) in different locales.
   *
   *
   */
  readonly nameAllLocales?: LocalizedString[]
}
/**
 *	Generated by a successful [Add Product Selection](ctp:api:type:StoreAddProductSelectionAction),
 *	[Remove Product Selection](ctp:api:type:StoreRemoveProductSelectionAction),
 *	[Set Product Selections](ctp:api:type:StoreSetProductSelectionsAction),
 *	or [Change Product Selections Active](ctp:api:type:StoreChangeProductSelectionAction) update action.
 *
 */
export interface StoreProductSelectionsChangedMessagePayload
  extends IMessagePayload {
  readonly type: 'StoreProductSelectionsChanged'
  /**
   *	[ProductSelectionSettings](ctp:api:type:ProductSelectionSetting) that were added to the [Store](ctp:api:type:Store).
   *
   *
   */
  readonly addedProductSelections?: ProductSelectionSetting[]
  /**
   *	[ProductSelectionSettings](ctp:api:type:ProductSelectionSetting) that were removed from the [Store](ctp:api:type:Store).
   *
   *
   */
  readonly removedProductSelections?: ProductSelectionSetting[]
  /**
   *	[ProductSelectionSettings](ctp:api:type:ProductSelectionSetting) that were updated in the [Store](ctp:api:type:Store).
   *
   *
   */
  readonly updatedProductSelections?: ProductSelectionSetting[]
}
/**
 *	Generated after a successful [Add Supply Channel](ctp:api:type:StoreAddSupplyChannelAction),
 *	[Remove Supply Channel](ctp:api:type:StoreRemoveSupplyChannelAction), or
 *	[Set Supply Channels](ctp:api:type:StoreSetSupplyChannelsAction) update action.
 *
 */
export interface StoreSupplyChannelsChangedMessagePayload
  extends IMessagePayload {
  readonly type: 'StoreSupplyChannelsChanged'
  /**
   *	Inventory supply Channels that have been added to the [Store](ctp:api:type:Store).
   *
   */
  readonly addedSupplyChannels?: ChannelReference[]
  /**
   *	Inventory supply Channels that have been removed from the [Store](ctp:api:type:Store).
   *
   *
   */
  readonly removedSupplyChannels?: ChannelReference[]
}
