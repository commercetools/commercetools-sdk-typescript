/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

import {
  Associate,
  BusinessUnit,
  BusinessUnitKeyReference,
  BusinessUnitStatus,
  BusinessUnitStoreMode,
} from './business-unit'
import {
  CustomLineItem,
  DiscountCodeState,
  DiscountedLineItemPriceForQuantity,
  ItemShippingDetails,
  LineItem,
  MethodTaxedPrice,
  ProductPublishScope,
  ShippingInfo,
  ShippingRateInput,
  TaxedItemPrice,
} from './cart'
import { Category, CategoryReference } from './category'
import { ChannelReference } from './channel'
import {
  Address,
  CentPrecisionMoney,
  CreatedBy,
  DiscountedPrice,
  Image,
  LastModifiedBy,
  LocalizedString,
  Money,
  Price,
  Reference,
} from './common'
import { Customer, CustomerReference } from './customer'
import { CustomerGroupReference } from './customer-group'
import { DiscountCodeReference } from './discount-code'
import { InventoryEntry } from './inventory'
import {
  Delivery,
  DeliveryItem,
  ItemState,
  Order,
  OrderState,
  Parcel,
  ParcelMeasurements,
  PaymentState,
  ReturnInfo,
  ReturnShipmentState,
  ShipmentState,
  TrackingData,
} from './order'
import { OrderEdit, OrderEditApplied } from './order-edit'
import {
  Payment,
  PaymentReference,
  Transaction,
  TransactionState,
} from './payment'
import { ProductProjection, ProductReference, ProductVariant } from './product'
import {
  IndividualProductSelectionType,
  ProductVariantSelection,
} from './product-selection'
import { Quote, QuoteState } from './quote'
import { QuoteRequest, QuoteRequestState } from './quote-request'
import { Review } from './review'
import { StagedQuote, StagedQuoteState } from './staged-quote'
import { StagedStandalonePrice, StandalonePrice } from './standalone-price'
import { StateReference } from './state'
import { ProductSelectionSetting, StoreKeyReference } from './store'
import { CustomFields } from './type'

/**
 *	`ContainerAndKey` is specific to [Custom Objects](ctp:api:type:CustomObject). Custom Objects are grouped into containers, which can be used like namespaces. Within a given container, a user-defined key can be used to uniquely identify resources.
 *
 */
export interface ContainerAndKey {
  /**
   *	User-defined identifier that is unique within the given container.
   *
   */
  readonly key: string
  /**
   *	Namespace to group [Custom Objects](ctp:api:type:CustomObject).
   *
   */
  readonly container: string
}
/**
 *	Base representation of a Message containing common fields to all [Message Types](/../api/projects/messages#message-types).
 *
 */
export type Message =
  | BusinessUnitAddressAddedMessage
  | BusinessUnitAddressChangedMessage
  | BusinessUnitAddressRemovedMessage
  | BusinessUnitAssociateAddedMessage
  | BusinessUnitAssociateChangedMessage
  | BusinessUnitAssociateRemovedMessage
  | BusinessUnitAssociatesSetMessage
  | BusinessUnitBillingAddressAddedMessage
  | BusinessUnitBillingAddressRemovedMessage
  | BusinessUnitContactEmailSetMessage
  | BusinessUnitCreatedMessage
  | BusinessUnitDefaultBillingAddressSetMessage
  | BusinessUnitDefaultShippingAddressSetMessage
  | BusinessUnitDeletedMessage
  | BusinessUnitNameChangedMessage
  | BusinessUnitParentUnitChangedMessage
  | BusinessUnitShippingAddressAddedMessage
  | BusinessUnitShippingAddressRemovedMessage
  | BusinessUnitStatusChangedMessage
  | BusinessUnitStoreAddedMessage
  | BusinessUnitStoreModeChangedMessage
  | BusinessUnitStoreRemovedMessage
  | BusinessUnitStoresSetMessage
  | CategoryCreatedMessage
  | CategorySlugChangedMessage
  | CustomLineItemStateTransitionMessage
  | CustomerAddressAddedMessage
  | CustomerAddressChangedMessage
  | CustomerAddressRemovedMessage
  | CustomerCompanyNameSetMessage
  | CustomerCreatedMessage
  | CustomerDateOfBirthSetMessage
  | CustomerDeletedMessage
  | CustomerEmailChangedMessage
  | CustomerEmailVerifiedMessage
  | CustomerFirstNameSetMessage
  | CustomerGroupSetMessage
  | CustomerLastNameSetMessage
  | CustomerPasswordUpdatedMessage
  | CustomerTitleSetMessage
  | DeliveryAddedMessage
  | DeliveryAddressSetMessage
  | DeliveryItemsUpdatedMessage
  | DeliveryRemovedMessage
  | InventoryEntryCreatedMessage
  | InventoryEntryDeletedMessage
  | InventoryEntryQuantitySetMessage
  | LineItemStateTransitionMessage
  | OrderBillingAddressSetMessage
  | OrderCreatedMessage
  | OrderCustomLineItemAddedMessage
  | OrderCustomLineItemDiscountSetMessage
  | OrderCustomLineItemQuantityChangedMessage
  | OrderCustomLineItemRemovedMessage
  | OrderCustomerEmailSetMessage
  | OrderCustomerGroupSetMessage
  | OrderCustomerSetMessage
  | OrderDeletedMessage
  | OrderDiscountCodeAddedMessage
  | OrderDiscountCodeRemovedMessage
  | OrderDiscountCodeStateSetMessage
  | OrderEditAppliedMessage
  | OrderImportedMessage
  | OrderLineItemAddedMessage
  | OrderLineItemDiscountSetMessage
  | OrderLineItemDistributionChannelSetMessage
  | OrderLineItemRemovedMessage
  | OrderMessage
  | OrderPaymentAddedMessage
  | OrderPaymentStateChangedMessage
  | OrderReturnShipmentStateChangedMessage
  | OrderShipmentStateChangedMessage
  | OrderShippingAddressSetMessage
  | OrderShippingInfoSetMessage
  | OrderShippingRateInputSetMessage
  | OrderStateChangedMessage
  | OrderStateTransitionMessage
  | OrderStoreSetMessage
  | ParcelAddedToDeliveryMessage
  | ParcelItemsUpdatedMessage
  | ParcelMeasurementsUpdatedMessage
  | ParcelRemovedFromDeliveryMessage
  | ParcelTrackingDataUpdatedMessage
  | PaymentCreatedMessage
  | PaymentInteractionAddedMessage
  | PaymentStatusInterfaceCodeSetMessage
  | PaymentStatusStateTransitionMessage
  | PaymentTransactionAddedMessage
  | PaymentTransactionStateChangedMessage
  | ProductAddedToCategoryMessage
  | ProductCreatedMessage
  | ProductDeletedMessage
  | ProductImageAddedMessage
  | ProductPriceDiscountsSetMessage
  | ProductPriceExternalDiscountSetMessage
  | ProductPublishedMessage
  | ProductRemovedFromCategoryMessage
  | ProductRevertedStagedChangesMessage
  | ProductSelectionCreatedMessage
  | ProductSelectionDeletedMessage
  | ProductSelectionProductAddedMessage
  | ProductSelectionProductRemovedMessage
  | ProductSelectionVariantSelectionChangedMessage
  | ProductSlugChangedMessage
  | ProductStateTransitionMessage
  | ProductUnpublishedMessage
  | ProductVariantAddedMessage
  | ProductVariantDeletedMessage
  | QuoteCreatedMessage
  | QuoteDeletedMessage
  | QuoteRequestCreatedMessage
  | QuoteRequestDeletedMessage
  | QuoteRequestStateChangedMessage
  | QuoteRequestStateTransitionMessage
  | QuoteStateChangedMessage
  | QuoteStateTransitionMessage
  | ReturnInfoAddedMessage
  | ReturnInfoSetMessage
  | ReviewCreatedMessage
  | ReviewRatingSetMessage
  | ReviewStateTransitionMessage
  | StagedQuoteCreatedMessage
  | StagedQuoteDeletedMessage
  | StagedQuoteSellerCommentSetMessage
  | StagedQuoteStateChangedMessage
  | StagedQuoteStateTransitionMessage
  | StagedQuoteValidToSetMessage
  | StandalonePriceActiveChangedMessage
  | StandalonePriceCreatedMessage
  | StandalonePriceDeletedMessage
  | StandalonePriceDiscountSetMessage
  | StandalonePriceExternalDiscountSetMessage
  | StandalonePriceStagedChangesAppliedMessage
  | StandalonePriceValueChangedMessage
  | StoreCreatedMessage
  | StoreDeletedMessage
  | StoreDistributionChannelsChangedMessage
  | StoreLanguagesChangedMessage
  | StoreNameSetMessage
  | StoreProductSelectionsChangedMessage
  | StoreSupplyChannelsChangedMessage
/**
 *	Generated after a successful [Add Address](ctp:api:type:BusinessUnitAddAddressAction) update action.
 *
 */
export interface BusinessUnitAddressAddedMessage {
  readonly type: 'BusinessUnitAddressAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The address that was added to the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Change Address](ctp:api:type:BusinessUnitChangeAddressAction) update action.
 *
 */
export interface BusinessUnitAddressChangedMessage {
  readonly type: 'BusinessUnitAddressChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Updated address of the Business Unit.
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Remove Address](ctp:api:type:BusinessUnitRemoveAddressAction) update action.
 *
 */
export interface BusinessUnitAddressRemovedMessage {
  readonly type: 'BusinessUnitAddressRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The address that was removed from the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Add Associate](ctp:api:type:BusinessUnitAddAssociateAction) update action.
 *
 */
export interface BusinessUnitAssociateAddedMessage {
  readonly type: 'BusinessUnitAssociateAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The [Associate](ctp:api:type:Associate) that was added to the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly associate: Associate
}
/**
 *	Generated after a successful [Change Associate](ctp:api:type:BusinessUnitChangeAssociateAction) update action.
 *
 */
export interface BusinessUnitAssociateChangedMessage {
  readonly type: 'BusinessUnitAssociateChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The [Associate](ctp:api:type:Associate) that was updated.
   *
   *
   */
  readonly associate: Associate
}
/**
 *	Generated after a successful [Remove Associate](ctp:api:type:BusinessUnitRemoveAssociateAction) update action.
 *
 */
export interface BusinessUnitAssociateRemovedMessage {
  readonly type: 'BusinessUnitAssociateRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The [Associate](ctp:api:type:Associate) that was removed from the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly associate: Associate
}
/**
 *	Generated after a successful [Set Associates](ctp:api:type:BusinessUnitSetAssociatesAction) update action.
 *
 */
export interface BusinessUnitAssociatesSetMessage {
  readonly type: 'BusinessUnitAssociatesSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The list of [Associates](ctp:api:type:Associate) that was updated on the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly associates: Associate[]
}
/**
 *	Generated after a successful [Add Billing Address Identifier](ctp:api:type:BusinessUnitAddBillingAddressIdAction) update action.
 *
 */
export interface BusinessUnitBillingAddressAddedMessage {
  readonly type: 'BusinessUnitBillingAddressAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The address that was added to the [Business Unit](ctp:api:type:BusinessUnit) as billing address.
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Remove Billing Address Identifier](ctp:api:type:BusinessUnitRemoveBillingAddressIdAction) update action.
 *
 */
export interface BusinessUnitBillingAddressRemovedMessage {
  readonly type: 'BusinessUnitBillingAddressRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The address that was removed from the billing addresses of the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Set Contact Email](ctp:api:type:BusinessUnitSetContactEmailAction) update action.
 *
 */
export interface BusinessUnitContactEmailSetMessage {
  readonly type: 'BusinessUnitContactEmailSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The contact email that was updated on the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly contactEmail?: string
}
/**
 *	Generated after a successful [Create Business Unit](/projects/business-units#create-businessunit) request.
 *
 */
export interface BusinessUnitCreatedMessage {
  readonly type: 'BusinessUnitCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The [Business Unit](ctp:api:type:BusinessUnit) that was created.
   *
   *
   */
  readonly businessUnit: BusinessUnit
}
/**
 *	Generated after a successful [Set Default Billing Address](ctp:api:type:BusinessUnitSetDefaultBillingAddressAction) update action.
 *
 */
export interface BusinessUnitDefaultBillingAddressSetMessage {
  readonly type: 'BusinessUnitDefaultBillingAddressSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The address that was set as the default billing address.
   *
   *
   */
  readonly address?: Address
}
/**
 *	Generated after a successful [Set Default Shipping Address](ctp:api:type:BusinessUnitSetDefaultShippingAddressAction) update action.
 *
 */
export interface BusinessUnitDefaultShippingAddressSetMessage {
  readonly type: 'BusinessUnitDefaultShippingAddressSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The address that was set as the default shipping address.
   *
   *
   */
  readonly address?: Address
}
/**
 *	Generated after a successful [Delete Business Unit](/projects/business-units#delete-businessunit) request.
 *
 */
export interface BusinessUnitDeletedMessage {
  readonly type: 'BusinessUnitDeleted'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
}
/**
 *	Generated after a successful [Change Name](ctp:api:type:BusinessUnitChangeNameAction) update action.
 *
 */
export interface BusinessUnitNameChangedMessage {
  readonly type: 'BusinessUnitNameChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Updated name of the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly name: string
}
/**
 *	Generated after a successful [Change Parent Unit](ctp:api:type:BusinessUnitChangeParentUnitAction) update action.
 *
 */
export interface BusinessUnitParentUnitChangedMessage {
  readonly type: 'BusinessUnitParentUnitChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Parent unit of the [Business Unit](ctp:api:type:BusinessUnit) before the [Change Parent Unit](ctp:api:type:BusinessUnitChangeParentUnitAction) update action.
   *
   *
   */
  readonly oldParentUnit?: BusinessUnitKeyReference
  /**
   *	Parent unit of the [Business Unit](ctp:api:type:BusinessUnit) after the [Change Parent Unit](ctp:api:type:BusinessUnitChangeParentUnitAction) update action.
   *
   *
   */
  readonly newParentUnit?: BusinessUnitKeyReference
}
/**
 *	Generated after a successful [Add Shipping Address Identifier](ctp:api:type:BusinessUnitAddShippingAddressIdAction) update action.
 *
 */
export interface BusinessUnitShippingAddressAddedMessage {
  readonly type: 'BusinessUnitShippingAddressAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The address that was added to the [Business Unit](ctp:api:type:BusinessUnit) as shipping address.
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Remove Shipping Address Identifier](ctp:api:type:BusinessUnitRemoveShippingAddressIdAction) update action.
 *
 */
export interface BusinessUnitShippingAddressRemovedMessage {
  readonly type: 'BusinessUnitShippingAddressRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The address that was removed from shipping addresses of the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Change Status](ctp:api:type:BusinessUnitChangeStatusAction) update action.
 *
 */
export interface BusinessUnitStatusChangedMessage {
  readonly type: 'BusinessUnitStatusChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Updated status of the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly active: BusinessUnitStatus
}
/**
 *	Generated after a successful [Add Store](ctp:api:type:BusinessUnitAddStoreAction) update action.
 *
 */
export interface BusinessUnitStoreAddedMessage {
  readonly type: 'BusinessUnitStoreAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The [Store](ctp:api:type:Store) that was added to the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly store: StoreKeyReference
}
/**
 *	Generated after a successful [Set Store Mode](ctp:api:type:BusinessUnitSetStoreModeAction) update action.
 *
 */
export interface BusinessUnitStoreModeChangedMessage {
  readonly type: 'BusinessUnitStoreModeChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Stores](ctp:api:type:Store) of the [Business Unit](ctp:api:type:BusinessUnit) after the [Set Store Mode](ctp:api:type:BusinessUnitSetStoreModeAction) update action.
   *
   *
   */
  readonly stores: StoreKeyReference[]
  /**
   *	[BusinessUnitStoreMode](ctp:api:type:BusinessUnitStoreMode) of the Business Unit after the [Set Store Mode](ctp:api:type:BusinessUnitSetStoreModeAction) update action.
   *
   *
   */
  readonly storeMode: BusinessUnitStoreMode
  /**
   *	[Stores](ctp:api:type:Store) of the [Business Unit](ctp:api:type:BusinessUnit) before the [Set Store Mode](ctp:api:type:BusinessUnitSetStoreModeAction) update action.
   *
   *
   */
  readonly oldStores: StoreKeyReference[]
  /**
   *	[BusinessUnitStoreMode](ctp:api:type:BusinessUnitStoreMode) of the Business Unit before the [Set Store Mode](ctp:api:type:BusinessUnitSetStoreModeAction) update action.
   *
   *
   */
  readonly oldStoreMode: BusinessUnitStoreMode
}
export interface BusinessUnitStoreRemovedMessage {
  readonly type: 'BusinessUnitStoreRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The [Store](ctp:api:type:Store) that was removed from the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly store: StoreKeyReference
}
/**
 *	Generated after a successful [Set Stores](ctp:api:type:BusinessUnitSetStoresAction) update action.
 *
 */
export interface BusinessUnitStoresSetMessage {
  readonly type: 'BusinessUnitStoresSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Stores](ctp:api:type:Store) of the [Business Unit](ctp:api:type:BusinessUnit) after the [Set Stores](ctp:api:type:BusinessUnitSetStoresAction) update action.
   *
   *
   */
  readonly stores: StoreKeyReference[]
}
/**
 *	Generated after a successful [Create Category](/../api/projects/categories#create-category) request.
 *
 */
export interface CategoryCreatedMessage {
  readonly type: 'CategoryCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Category](ctp:api:type:Category) that was created.
   *
   *
   */
  readonly category: Category
}
/**
 *	Generated after a successful [Change Slug](ctp:api:type:CategoryChangeSlugAction) update action.
 *
 */
export interface CategorySlugChangedMessage {
  readonly type: 'CategorySlugChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The slug of the [Category](ctp:api:type:Category) after the [Change Slug](ctp:api:type:CategoryChangeSlugAction) update action.
   *
   *
   */
  readonly slug: LocalizedString
  /**
   *	The slug of the [Category](ctp:api:type:Category) before the [Change Slug](ctp:api:type:CategoryChangeSlugAction) update action.
   *
   *
   */
  readonly oldSlug?: LocalizedString
}
/**
 *	Generated after a successful [Add Address](ctp:api:type:CustomerAddAddressAction) update action.
 *
 */
export interface CustomerAddressAddedMessage {
  readonly type: 'CustomerAddressAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Address](ctp:api:type:Address) that was added during the [Add Address](ctp:api:type:CustomerAddAddressAction) update action.
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Change Address](ctp:api:type:CustomerChangeAddressAction) update action.
 *
 */
export interface CustomerAddressChangedMessage {
  readonly type: 'CustomerAddressChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Address](ctp:api:type:Address) that was set during the [Change Address](ctp:api:type:CustomerChangeAddressAction) update action.
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Remove Address](ctp:api:type:CustomerRemoveAddressAction) update action.
 *
 */
export interface CustomerAddressRemovedMessage {
  readonly type: 'CustomerAddressRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Address](ctp:api:type:Address) that was removed during the [Remove Address](ctp:api:type:CustomerRemoveAddressAction) update action.
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Set Company Name](ctp:api:type:CustomerSetCompanyNameAction) update action.
 *
 */
export interface CustomerCompanyNameSetMessage {
  readonly type: 'CustomerCompanyNameSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The `companyName` that was set during the [Set Company Name](ctp:api:type:CustomerSetCompanyNameAction) update action.
   *
   *
   */
  readonly companyName?: string
}
/**
 *	Generated after a successful [Create Customer](/../api/projects/customers#create-sign-up-customer) request.
 *
 */
export interface CustomerCreatedMessage {
  readonly type: 'CustomerCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Customer](ctp:api:type:Customer) that was created.
   *
   *
   */
  readonly customer: Customer
}
/**
 *	Generated after a successful [Set Date of Birth](ctp:api:type:CustomerSetDateOfBirthAction) update action.
 *
 */
export interface CustomerDateOfBirthSetMessage {
  readonly type: 'CustomerDateOfBirthSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The `dateOfBirth` that was set during the [Set Date of Birth](ctp:api:type:CustomerSetDateOfBirthAction) update action.
   *
   *
   */
  readonly dateOfBirth?: string
}
/**
 *	Generated after a successful [Delete Customer](/../api/projects/customers#delete-customer) request.
 *
 */
export interface CustomerDeletedMessage {
  readonly type: 'CustomerDeleted'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
}
/**
 *	Generated after a successful [Change Email](ctp:api:type:CustomerChangeEmailAction) update action.
 *
 */
export interface CustomerEmailChangedMessage {
  readonly type: 'CustomerEmailChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The `email` that was set during the [Change Email](ctp:api:type:CustomerChangeEmailAction) update action.
   *
   *
   */
  readonly email: string
}
/**
 *	Generated after a successful [Verify Customer's Email](/../api/projects/customers#verify-email-of-customer) request.
 *
 */
export interface CustomerEmailVerifiedMessage {
  readonly type: 'CustomerEmailVerified'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
}
/**
 *	Generated after a successful [Set First Name](ctp:api:type:CustomerSetFirstNameAction) update action.
 *
 */
export interface CustomerFirstNameSetMessage {
  readonly type: 'CustomerFirstNameSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The `firstName` that was set during the [Set First Name](ctp:api:type:CustomerSetFirstNameAction) update action.
   *
   *
   */
  readonly firstName?: string
}
/**
 *	Generated after a successful [Set Customer Group](ctp:api:type:CustomerSetCustomerGroupAction) update action.
 *
 */
export interface CustomerGroupSetMessage {
  readonly type: 'CustomerGroupSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Customer Group](ctp:api:type:CustomerGroup) that was set during the [Set Customer Group](ctp:api:type:CustomerSetCustomerGroupAction) update action.
   *
   *
   */
  readonly customerGroup?: CustomerGroupReference
}
/**
 *	Generated after a successful [Set Last Name](ctp:api:type:CustomerSetLastNameAction) update action.
 *
 */
export interface CustomerLastNameSetMessage {
  readonly type: 'CustomerLastNameSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The `lastName` that was set during the [Set Last Name](ctp:api:type:CustomerSetLastNameAction) update action.
   *
   *
   */
  readonly lastName?: string
}
/**
 *	Generated after a successful [Reset Customer's Password](/../api/projects/customers#reset-password-of-customer), [Reset Customer's Password in a Store](/../api/projects/customers#reset-password-of-customer-in-store), [Change Customer's Password](/../api/projects/customers#change-password-of-customer), or [Change Customer's Password in a Store](/../api/projects/customers#change-password-of-customer-in-store) request. This Message is also produced during equivalent requests to the [My Customer Profile](/../api/projects/me-profile) endpoint.
 *
 */
export interface CustomerPasswordUpdatedMessage {
  readonly type: 'CustomerPasswordUpdated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Whether the Customer's password was updated during the [Reset password](/../api/projects/customers#password-reset-of-customer) or [Change password](/../api/projects/customers#change-password-of-customer) flow.
   *
   *
   */
  readonly reset: boolean
}
/**
 *	Generated after a successful [Set Title](ctp:api:type:CustomerSetTitleAction) update action.
 *
 */
export interface CustomerTitleSetMessage {
  readonly type: 'CustomerTitleSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The `title` that was set during the [Set Title](ctp:api:type:CustomerSetTitleAction) update action.
   *
   *
   */
  readonly title?: string
}
/**
 *	Generated after a successful [Create InventoryEntry](/../api/projects/inventory#create-inventoryentry) request.
 *
 */
export interface InventoryEntryCreatedMessage {
  readonly type: 'InventoryEntryCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[InventoryEntry](ctp:api:type:InventoryEntry) that was created.
   *
   *
   */
  readonly inventoryEntry: InventoryEntry
}
/**
 *	Generated after a successful [Delete InventoryEntry](/../api/projects/inventory#delete-inventoryentry) request.
 *
 */
export interface InventoryEntryDeletedMessage {
  readonly type: 'InventoryEntryDeleted'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The `sku` of the [InventoryEntry](ctp:api:type:InventoryEntry) that was deleted.
   *
   *
   */
  readonly sku: string
  /**
   *	[Reference](ctp:api:type:Reference) to the [Channel](ctp:api:type:Channel) where the [InventoryEntry](ctp:api:type:InventoryEntry) was deleted.
   *
   *
   */
  readonly supplyChannel?: ChannelReference
}
/**
 *	Generated after a successful [Add Quantity](ctp:api:type:InventoryEntryAddQuantityAction), [Remove Quantity](ctp:api:type:InventoryEntryRemoveQuantityAction) or [Change Quantity](ctp:api:type:InventoryEntryChangeQuantityAction) update action.
 *	Inventory changes as a result of [Order creation](/../api/projects/orders#create-order) do not trigger this message.
 *
 */
export interface InventoryEntryQuantitySetMessage {
  readonly type: 'InventoryEntryQuantitySet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Quantity on stock for the [InventoryEntry](ctp:api:type:InventoryEntry) before the quantity was updated.
   *
   *
   */
  readonly oldQuantityOnStock: number
  /**
   *	Quantity on stock for the [InventoryEntry](ctp:api:type:InventoryEntry) after the quantity was updated.
   *
   *
   */
  readonly newQuantityOnStock: number
  /**
   *	Available quantity for the [InventoryEntry](ctp:api:type:InventoryEntry) before the quantity was updated.
   *
   *
   */
  readonly oldAvailableQuantity: number
  /**
   *	Available quantity for the [InventoryEntry](ctp:api:type:InventoryEntry) after the quantity was updated.
   *
   *
   */
  readonly newAvailableQuantity: number
  /**
   *	[Reference](ctp:api:type:Reference) to the [Channel](ctp:api:type:Channel) where the [InventoryEntry](ctp:api:type:InventoryEntry) quantity was set.
   *
   *
   */
  readonly supplyChannel?: ChannelReference
}
/**
 *	[PagedQueryResult](/../api/general-concepts#pagedqueryresult) with `results` containing an array of [Message](ctp:api:type:Message).
 *
 */
export interface MessagePagedQueryResponse {
  /**
   *	Number of [results requested](/../api/general-concepts#limit).
   *
   *
   */
  readonly limit: number
  /**
   *	Actual number of results returned.
   *
   *
   */
  readonly count: number
  /**
   *	Total number of results matching the query.
   *	This number is an estimation that is not [strongly consistent](/../api/general-concepts#strong-consistency).
   *	This field is returned by default.
   *	For improved performance, calculating this field can be deactivated by using the query parameter `withTotal=false`.
   *	When the results are filtered with a [Query Predicate](/../api/predicates/query), `total` is subject to a [limit](/../api/limits#queries).
   *
   *
   */
  readonly total?: number
  /**
   *	Number of [elements skipped](/../api/general-concepts#offset).
   *
   *
   */
  readonly offset: number
  /**
   *	[Messages](ctp:api:type:Message) matching the query.
   *
   *
   */
  readonly results: Message[]
}
/**
 *	Holds the configuration for the [Messages Query](/../api/projects/messages) feature for the Project.
 */
export interface MessagesConfiguration {
  /**
   *	When `true`, the [Messages Query](/../api/projects/messages) feature is active.
   *
   *
   */
  readonly enabled: boolean
  /**
   *	Specifies the number of days each Message should be available via the [Messages Query](/../api/projects/messages) API.
   *	For Messages older than the specified period, it is not guaranteed that they are still accessible via the API.
   *	This field may not be present on Projects created before 8 October 2018.
   *
   *
   */
  readonly deleteDaysAfterCreation?: number
}
/**
 *	Defines the configuration for the [Messages Query](/../api/projects/messages) feature for the Project.
 */
export interface MessagesConfigurationDraft {
  /**
   *	Setting to `true` activates the [Messages Query](/../api/projects/messages) feature.
   *
   *
   */
  readonly enabled: boolean
  /**
   *	Specifies the number of days each Message should be available via the [Messages Query](/../api/projects/messages) API. For Messages older than the specified period, it is not guaranteed that they are still accessible via the API.
   *
   *
   */
  readonly deleteDaysAfterCreation: number
}
export type OrderMessage =
  | CustomLineItemStateTransitionMessage
  | DeliveryAddedMessage
  | DeliveryAddressSetMessage
  | DeliveryItemsUpdatedMessage
  | DeliveryRemovedMessage
  | LineItemStateTransitionMessage
  | OrderBillingAddressSetMessage
  | OrderCreatedMessage
  | OrderCustomLineItemAddedMessage
  | OrderCustomLineItemDiscountSetMessage
  | OrderCustomLineItemQuantityChangedMessage
  | OrderCustomLineItemRemovedMessage
  | OrderCustomerEmailSetMessage
  | OrderCustomerGroupSetMessage
  | OrderCustomerSetMessage
  | OrderDeletedMessage
  | OrderDiscountCodeAddedMessage
  | OrderDiscountCodeRemovedMessage
  | OrderDiscountCodeStateSetMessage
  | OrderEditAppliedMessage
  | OrderImportedMessage
  | OrderLineItemAddedMessage
  | OrderLineItemDiscountSetMessage
  | OrderLineItemDistributionChannelSetMessage
  | OrderLineItemRemovedMessage
  | OrderPaymentStateChangedMessage
  | OrderReturnShipmentStateChangedMessage
  | OrderShipmentStateChangedMessage
  | OrderShippingAddressSetMessage
  | OrderShippingInfoSetMessage
  | OrderShippingRateInputSetMessage
  | OrderStateChangedMessage
  | OrderStateTransitionMessage
  | OrderStoreSetMessage
  | ParcelAddedToDeliveryMessage
  | ParcelItemsUpdatedMessage
  | ParcelMeasurementsUpdatedMessage
  | ParcelRemovedFromDeliveryMessage
  | ParcelTrackingDataUpdatedMessage
  | ReturnInfoAddedMessage
  | ReturnInfoSetMessage
/**
 *	Generated after a successful [Transition Custom Line Item State](ctp:api:type:OrderTransitionCustomLineItemStateAction) update action.
 *
 */
export interface CustomLineItemStateTransitionMessage {
  readonly type: 'CustomLineItemStateTransition'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Custom Line Item](ctp:api:type:CustomLineItem).
   *
   *
   */
  readonly customLineItemId: string
  /**
   *	Date and time (UTC) when the transition of the [Custom Line Item](ctp:api:type:CustomLineItem) [State](ctp:api:type:State) was performed.
   *
   *
   */
  readonly transitionDate: string
  /**
   *	Number of [Custom Line Items](ctp:api:type:CustomLineItem) for which the [State](ctp:api:type:State) was transitioned.
   *
   *
   */
  readonly quantity: number
  /**
   *	[State](ctp:api:type:State) the [Custom Line Item](ctp:api:type:CustomLineItem) was transitioned from.
   *
   *
   */
  readonly fromState: StateReference
  /**
   *	[State](ctp:api:type:State) the [Custom Line Item](ctp:api:type:CustomLineItem) was transitioned to.
   *
   *
   */
  readonly toState: StateReference
}
/**
 *	Generated after a successful [Add Delivery](ctp:api:type:OrderAddDeliveryAction) update action.
 *
 */
export interface DeliveryAddedMessage {
  readonly type: 'DeliveryAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Delivery](ctp:api:type:Delivery) that was added to the [Order](ctp:api:type:Order). The [Delivery](ctp:api:type:Delivery) in the Message body does not contain [Parcels](ctp:api:type:Parcel) if those were part of the initial [Add Delivery](ctp:api:type:OrderAddDeliveryAction) update action. In that case, the update action produces an additional [ParcelAddedToDelivery](ctp:api:type:ParcelAddedToDeliveryMessage) Message containing information about the [Parcels](ctp:api:type:Parcel).
   *
   *
   */
  readonly delivery: Delivery
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multi` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Set Delivery Address](ctp:api:type:OrderSetDeliveryAddressAction) update action.
 *
 */
export interface DeliveryAddressSetMessage {
  readonly type: 'DeliveryAddressSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Parcel](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
  /**
   *	[Address](ctp:api:type:Address) after the [Set Delivery Address](ctp:api:type:OrderSetDeliveryAddressAction) update action.
   *
   *
   */
  readonly address?: Address
  /**
   *	[Address](ctp:api:type:Address) before the [Set Delivery Address](ctp:api:type:OrderSetDeliveryAddressAction) update action.
   *
   *
   */
  readonly oldAddress?: Address
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multi` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Set Delivery Items](ctp:api:type:OrderSetDeliveryItemsAction) update action.
 *
 */
export interface DeliveryItemsUpdatedMessage {
  readonly type: 'DeliveryItemsUpdated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
  /**
   *	[Delivery Items](ctp:api:type:DeliveryItem) after the [Set Delivery Items](ctp:api:type:OrderSetDeliveryItemsAction) update action.
   *
   *
   */
  readonly items: DeliveryItem[]
  /**
   *	[Delivery Items](ctp:api:type:DeliveryItem) before the [Set Delivery Items](ctp:api:type:OrderSetDeliveryItemsAction) update action.
   *
   *
   */
  readonly oldItems: DeliveryItem[]
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multi` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Remove Delivery](ctp:api:type:OrderRemoveDeliveryAction) update action.
 *
 */
export interface DeliveryRemovedMessage {
  readonly type: 'DeliveryRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The [Delivery](ctp:api:type:Delivery) that was removed from the [Order](ctp:api:type:Order).
   *
   *
   */
  readonly delivery: Delivery
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multi` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Transition Line Item State](ctp:api:type:OrderTransitionLineItemStateAction) update action.
 *
 */
export interface LineItemStateTransitionMessage {
  readonly type: 'LineItemStateTransition'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Line Item](ctp:api:type:LineItem).
   *
   *
   */
  readonly lineItemId: string
  /**
   *	Date and time (UTC) when the transition of the [Line Item](ctp:api:type:LineItem) [State](ctp:api:type:State) was performed.
   *
   *
   */
  readonly transitionDate: string
  /**
   *	Number of [Line Items](ctp:api:type:LineItem) for which the [State](ctp:api:type:State) was transitioned.
   *
   *
   */
  readonly quantity: number
  /**
   *	[State](ctp:api:type:State) the [Line Item](ctp:api:type:LineItem) was transitioned from.
   *
   *
   */
  readonly fromState: StateReference
  /**
   *	[State](ctp:api:type:State) the [Line Item](ctp:api:type:LineItem) was transitioned to.
   *
   *
   */
  readonly toState: StateReference
}
/**
 *	Generated after a successful [Set Billing Address](ctp:api:type:OrderSetBillingAddressAction) update action.
 *
 */
export interface OrderBillingAddressSetMessage {
  readonly type: 'OrderBillingAddressSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Billing address on the Order after the [Set Billing Address](ctp:api:type:OrderSetBillingAddressAction) update action.
   *
   *
   */
  readonly address?: Address
  /**
   *	Billing address on the Order before the [Set Billing Address](ctp:api:type:OrderSetBillingAddressAction) update action.
   *
   *
   */
  readonly oldAddress?: Address
}
/**
 *	Generated after a successful [Create Order](/../api/projects/orders#create-order) request.
 *
 */
export interface OrderCreatedMessage {
  readonly type: 'OrderCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Order](ctp:api:type:Order) that was created.
   *
   *
   */
  readonly order: Order
}
/**
 *	Generated after a successful [Add Custom Line Item](ctp:api:type:StagedOrderAddCustomLineItemAction) update action.
 *
 */
export interface OrderCustomLineItemAddedMessage {
  readonly type: 'OrderCustomLineItemAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Custom Line Item](ctp:api:type:CustomLineItem) that was added to the [Order](ctp:api:type:Order).
   *
   *
   */
  readonly customLineItem: CustomLineItem
}
/**
 *	Generated after a successful recalculation of a Discount on a [Custom Line Item](ctp:api:type:CustomLineItem).
 *
 */
export interface OrderCustomLineItemDiscountSetMessage {
  readonly type: 'OrderCustomLineItemDiscountSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier for the [Custom Line Item](ctp:api:type:CustomLineItem).
   *
   *
   */
  readonly customLineItemId: string
  /**
   *	Array of [DiscountedLineItemPriceForQuantity](ctp:api:type:DiscountedLineItemPriceForQuantity) after the Discount recalculation.
   *
   *
   */
  readonly discountedPricePerQuantity: DiscountedLineItemPriceForQuantity[]
  /**
   *	[TaxedItemPrice](ctp:api:type:TaxedItemPrice) of the [Custom Line Item](ctp:api:type:CustomLineItem) after the Discount recalculation.
   *
   *
   */
  readonly taxedPrice?: TaxedItemPrice
}
/**
 *	Generated after a successful [Change Custom Line Item Quantity](ctp:api:type:StagedOrderChangeCustomLineItemQuantityAction) update action.
 *
 */
export interface OrderCustomLineItemQuantityChangedMessage {
  readonly type: 'OrderCustomLineItemQuantityChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Custom Line Item](ctp:api:type:CustomLineItem).
   *
   *
   */
  readonly customLineItemId: string
  /**
   *	[Custom Line Item](ctp:api:type:CustomLineItem) quantity after the [Change Custom Line Item Quantity](ctp:api:type:StagedOrderChangeCustomLineItemQuantityAction) update action.
   *
   *
   */
  readonly quantity: number
  /**
   *	[Custom Line Item](ctp:api:type:CustomLineItem) quantity before the [Change Custom Line Item Quantity](ctp:api:type:StagedOrderChangeCustomLineItemQuantityAction) update action.
   *
   *
   */
  readonly oldQuantity: number
}
/**
 *	Generated after a successful [Remove Custom Line Item](ctp:api:type:StagedOrderRemoveCustomLineItemAction) update action.
 *
 */
export interface OrderCustomLineItemRemovedMessage {
  readonly type: 'OrderCustomLineItemRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Custom Line Item](ctp:api:type:CustomLineItem).
   *
   *
   */
  readonly customLineItemId: string
  /**
   *	[Custom Line Item](ctp:api:type:CustomLineItem) that was removed from the [Order](ctp:api:type:Order).
   *
   *
   */
  readonly customLineItem: CustomLineItem
}
/**
 *	Generated after a successful [Set Customer Email](ctp:api:type:OrderSetCustomerEmailAction) update action.
 *
 */
export interface OrderCustomerEmailSetMessage {
  readonly type: 'OrderCustomerEmailSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Email address on the [Order](ctp:api:type:Order) after the [Set Customer Email](ctp:api:type:OrderSetCustomerEmailAction) update action.
   *
   *
   */
  readonly email?: string
  /**
   *	Email address on the [Order](ctp:api:type:Order) before the [Set Customer Email](ctp:api:type:OrderSetCustomerEmailAction) update action.
   *
   *
   */
  readonly oldEmail?: string
}
/**
 *	Generated after a successful [Set Customer Group](ctp:api:type:StagedOrderSetCustomerGroupAction) update action.
 *
 */
export interface OrderCustomerGroupSetMessage {
  readonly type: 'OrderCustomerGroupSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[CustomerGroup](ctp:api:type:CustomerGroup) on the [Order](ctp:api:type:Order) after the [Set Customer Group](ctp:api:type:StagedOrderSetCustomerGroupAction) update action.
   *
   *
   */
  readonly customerGroup?: CustomerGroupReference
  /**
   *	[CustomerGroup](ctp:api:type:CustomerGroup) on the [Order](ctp:api:type:Order) before the [Set Customer Group](ctp:api:type:StagedOrderSetCustomerGroupAction) update action.
   *
   *
   */
  readonly oldCustomerGroup?: CustomerGroupReference
}
/**
 *	Generated after a successful [Set Customer Id](ctp:api:type:OrderSetCustomerIdAction) update action.
 *
 */
export interface OrderCustomerSetMessage {
  readonly type: 'OrderCustomerSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Customer](ctp:api:type:Customer) on the [Order](ctp:api:type:Order) after the [Set Customer Id](ctp:api:type:OrderSetCustomerIdAction) update action.
   *
   *
   */
  readonly customer?: CustomerReference
  /**
   *	[CustomerGroup](ctp:api:type:CustomerGroup) on the [Order](ctp:api:type:Order) after the [Set Customer Id](ctp:api:type:OrderSetCustomerIdAction) update action.
   *
   *
   */
  readonly customerGroup?: CustomerGroupReference
  /**
   *	[Customer](ctp:api:type:Customer) on the [Order](ctp:api:type:Order) before the [Set Customer Id](ctp:api:type:OrderSetCustomerIdAction) update action.
   *
   *
   */
  readonly oldCustomer?: CustomerReference
  /**
   *	[CustomerGroup](ctp:api:type:CustomerGroup) on the [Order](ctp:api:type:Order) before the [Set Customer Id](ctp:api:type:OrderSetCustomerIdAction) update action.
   *
   *
   */
  readonly oldCustomerGroup?: CustomerGroupReference
}
/**
 *	Generated after a successful [Delete Order](/../api/projects/orders#delete-order) request.
 *
 */
export interface OrderDeletedMessage {
  readonly type: 'OrderDeleted'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Order](ctp:api:type:Order) that has been deleted.
   *
   *
   */
  readonly order: Order
}
/**
 *	Generated after a successful [Add Discount Code](ctp:api:type:StagedOrderAddDiscountCodeAction) update action.
 *
 */
export interface OrderDiscountCodeAddedMessage {
  readonly type: 'OrderDiscountCodeAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[DiscountCode](ctp:api:type:DiscountCode) that was added.
   *
   *
   */
  readonly discountCode: DiscountCodeReference
}
/**
 *	Generated after a successful [Remove Discount Code](ctp:api:type:StagedOrderRemoveDiscountCodeAction) update action.
 *
 */
export interface OrderDiscountCodeRemovedMessage {
  readonly type: 'OrderDiscountCodeRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[DiscountCode](ctp:api:type:DiscountCode) that was removed.
   *
   *
   */
  readonly discountCode: DiscountCodeReference
}
/**
 *	Generated after the [DiscountCodeState](ctp:api:type:DiscountCodeState) changes due to a [recalculation](/../api/projects/carts#recalculate).
 *
 */
export interface OrderDiscountCodeStateSetMessage {
  readonly type: 'OrderDiscountCodeStateSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[DiscountCode](ctp:api:type:DiscountCode) that changed due to the recalculation.
   *
   *
   */
  readonly discountCode: DiscountCodeReference
  /**
   *	[DiscountCodeState](ctp:api:type:DiscountCodeState) after the recalculation.
   *
   *
   */
  readonly state: DiscountCodeState
  /**
   *	[DiscountCodeState](ctp:api:type:DiscountCodeState) before the recalculation.
   *
   *
   */
  readonly oldState?: DiscountCodeState
}
/**
 *	Generated after a successfully applying an [OrderEdit](/../api/projects/order-edits#apply-an-orderedit).
 *
 */
export interface OrderEditAppliedMessage {
  readonly type: 'OrderEditApplied'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[OrderEdit](ctp:api:type:OrderEdit) that was applied.
   *
   *
   */
  readonly edit: OrderEdit
  /**
   *	Information about a successfully applied [OrderEdit](ctp:api:type:OrderEdit).
   *
   *
   */
  readonly result: OrderEditApplied
}
/**
 *	Generated after a successful [Order Import](/../api/projects/orders-import#create-an-order-by-import).
 *
 */
export interface OrderImportedMessage {
  readonly type: 'OrderImported'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Order](ctp:api:type:Order) that was imported.
   *
   *
   */
  readonly order: Order
}
/**
 *	Generated after a successful [Add Line Item](ctp:api:type:StagedOrderAddLineItemAction) update action.
 *
 */
export interface OrderLineItemAddedMessage {
  readonly type: 'OrderLineItemAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Line Item](ctp:api:type:LineItem) that was added to the [Order](ctp:api:type:Order).
   *
   *
   */
  readonly lineItem: LineItem
  /**
   *	Quantity of [Line Items](ctp:api:type:LineItem) that were added to the [Order](ctp:api:type:Order).
   *
   *
   */
  readonly addedQuantity: number
}
/**
 *	Generated after a successful recalculation of a Discount on a [Line Item](ctp:api:type:LineItem).
 *
 */
export interface OrderLineItemDiscountSetMessage {
  readonly type: 'OrderLineItemDiscountSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier for the [Line Item](ctp:api:type:LineItem).
   *
   *
   */
  readonly lineItemId: string
  /**
   *	Array of [DiscountedLineItemPriceForQuantity](ctp:api:type:DiscountedLineItemPriceForQuantity) after the Discount recalculation.
   *
   *
   */
  readonly discountedPricePerQuantity: DiscountedLineItemPriceForQuantity[]
  /**
   *	Total Price of the [Line Item](ctp:api:type:LineItem) after the Discount recalculation.
   *
   *
   */
  readonly totalPrice: Money
  /**
   *	[TaxedItemPrice](ctp:api:type:TaxedItemPrice) of the [Line Item](ctp:api:type:LineItem) after the Discount recalculation.
   *
   *
   */
  readonly taxedPrice?: TaxedItemPrice
  /**
   *	Taxed price of the Shipping Methods in a Cart with `Multi` [ShippingMode](ctp:api:type:ShippingMode)..
   *
   *
   */
  readonly taxedPricePortions: MethodTaxedPrice[]
}
/**
 *	Generated after a successful [Set Line Item Distribution Channel](/../api/projects/order-edits#set-lineitem-distributionchannel) update action.
 *
 */
export interface OrderLineItemDistributionChannelSetMessage {
  readonly type: 'OrderLineItemDistributionChannelSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Line Item](ctp:api:type:LineItem).
   *
   *
   */
  readonly lineItemId: string
  /**
   *	[Distribution Channel](ctp:api:type:Channel) that was set.
   *
   *
   */
  readonly distributionChannel?: ChannelReference
}
/**
 *	Generated after a successful [Remove Line Item](ctp:api:type:StagedOrderRemoveLineItemAction) update action.
 *
 */
export interface OrderLineItemRemovedMessage {
  readonly type: 'OrderLineItemRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Line Item](ctp:api:type:LineItem).
   *
   *
   */
  readonly lineItemId: string
  /**
   *	Quantity of [Line Items](ctp:api:type:LineItem) that were removed during the [Remove Line Item](ctp:api:type:StagedOrderRemoveLineItemAction) update action.
   *
   *
   */
  readonly removedQuantity: number
  /**
   *	[Line Item](ctp:api:type:LineItem) quantity after the [Remove Line Item](ctp:api:type:StagedOrderRemoveLineItemAction) update action.
   *
   *
   */
  readonly newQuantity: number
  /**
   *	[ItemStates](ctp:api:type:ItemState) after the [Remove Line Item](ctp:api:type:StagedOrderRemoveLineItemAction) update action.
   *
   *
   */
  readonly newState: ItemState[]
  /**
   *	`totalPrice` of the [Order](ctp:api:type:Order) after the [Remove Line Item](ctp:api:type:StagedOrderRemoveLineItemAction) update action.
   *
   *
   */
  readonly newTotalPrice: CentPrecisionMoney
  /**
   *	[TaxedItemPrice](ctp:api:type:TaxedItemPrice) of the [Order](ctp:api:type:Order) after the [Remove Line Item](ctp:api:type:StagedOrderRemoveLineItemAction) update action.
   *
   *
   */
  readonly newTaxedPrice?: TaxedItemPrice
  /**
   *	[Price](ctp:api:type:Price) of the [Order](ctp:api:type:Order) after the [Remove Line Item](ctp:api:type:StagedOrderRemoveLineItemAction) update action.
   *
   *
   */
  readonly newPrice?: Price
  /**
   *	[Shipping Details](ctp:api:type:ItemShippingDetails) of the [Order](ctp:api:type:Order) after the [Remove Line Item](ctp:api:type:StagedOrderRemoveLineItemAction) update action.
   *
   *
   */
  readonly newShippingDetail?: ItemShippingDetails
}
/**
 *	Generated after a successful [Add Payment](ctp:api:type:OrderAddPaymentAction) update action or when a [Payment](ctp:api:type:Payment) is added via [Order Edits](ctp:api:type:StagedOrderAddPaymentAction).
 *
 */
export interface OrderPaymentAddedMessage {
  readonly type: 'OrderPaymentAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Payment](ctp:api:type:Payment) that was added to the [Order](ctp:api:type:Order).
   *
   *
   */
  readonly payment: PaymentReference
}
/**
 *	Generated after a successful [Change Payment State](ctp:api:type:OrderChangePaymentStateAction) update action.
 *
 */
export interface OrderPaymentStateChangedMessage {
  readonly type: 'OrderPaymentStateChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[PaymentState](ctp:api:type:PaymentState) after the [Change Payment State](ctp:api:type:OrderChangePaymentStateAction) update action.
   *
   *
   */
  readonly paymentState: PaymentState
  /**
   *	[PaymentState](ctp:api:type:PaymentState) before the [Change Payment State](ctp:api:type:OrderChangePaymentStateAction) update action.
   *
   *
   */
  readonly oldPaymentState?: PaymentState
}
/**
 *	Generated after a successful [Set Return Shipment State](ctp:api:type:OrderSetReturnShipmentStateAction) update action.
 *
 */
export interface OrderReturnShipmentStateChangedMessage {
  readonly type: 'OrderReturnShipmentStateChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [ReturnItem](ctp:api:type:ReturnItem).
   *
   *
   */
  readonly returnItemId: string
  /**
   *	State of the [ReturnItem](ctp:api:type:ReturnItem) after the [Set Return Shipment State](ctp:api:type:OrderSetReturnShipmentStateAction) update action.
   *
   *
   */
  readonly returnShipmentState: ReturnShipmentState
}
/**
 *	Generated after a successful [Change Shipment State](ctp:api:type:OrderChangeShipmentStateAction) update action.
 *
 */
export interface OrderShipmentStateChangedMessage {
  readonly type: 'OrderShipmentStateChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[ShipmentState](ctp:api:type:ShipmentState) after the [Change Shipment State](ctp:api:type:OrderChangeShipmentStateAction) update action.
   *
   *
   */
  readonly shipmentState: ShipmentState
  /**
   *	[ShipmentState](ctp:api:type:ShipmentState) before the [Change Shipment State](ctp:api:type:OrderChangeShipmentStateAction) update action.
   *
   *
   */
  readonly oldShipmentState: ShipmentState
}
/**
 *	Generated after a successful [Set Shipping Address](ctp:api:type:OrderSetShippingAddressAction) update action.
 *
 */
export interface OrderShippingAddressSetMessage {
  readonly type: 'OrderShippingAddressSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Shipping address on the Order after the [Set Shipping Address](ctp:api:type:OrderSetShippingAddressAction) update action.
   *
   *
   */
  readonly address?: Address
  /**
   *	Shipping address on the Order before the [Set Shipping Address](ctp:api:type:OrderSetShippingAddressAction) update action.
   *
   *
   */
  readonly oldAddress?: Address
}
/**
 *	Generated after a successful [Set Shipping Method](ctp:api:type:StagedOrderSetShippingMethodAction) and [Set Custom Shipping Method](ctp:api:type:StagedOrderSetCustomShippingMethodAction) update actions.
 *
 */
export interface OrderShippingInfoSetMessage {
  readonly type: 'OrderShippingInfoSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[ShippingInfo](ctp:api:type:ShippingInfo) after the [Set Shipping Method](ctp:api:type:StagedOrderSetShippingMethodAction) or [Set Custom Shipping Method](ctp:api:type:StagedOrderSetCustomShippingMethodAction) update action.
   *
   *
   */
  readonly shippingInfo?: ShippingInfo
  /**
   *	[ShippingInfo](ctp:api:type:ShippingInfo) before the [Set Shipping Method](ctp:api:type:StagedOrderSetShippingMethodAction) or [Set Custom Shipping Method](ctp:api:type:StagedOrderSetCustomShippingMethodAction) update action.
   *
   *
   */
  readonly oldShippingInfo?: ShippingInfo
}
/**
 *	Generated after a successful [Set ShippingRateInput](ctp:api:type:StagedOrderSetShippingRateInputAction) update action.
 *
 */
export interface OrderShippingRateInputSetMessage {
  readonly type: 'OrderShippingRateInputSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[ShippingRateInput](ctp:api:type:ShippingRateInput) after the [Set ShippingRateInput](ctp:api:type:StagedOrderSetShippingRateInputAction) update action.
   *
   *
   */
  readonly shippingRateInput?: ShippingRateInput
  /**
   *	[ShippingRateInput](ctp:api:type:ShippingRateInput) before the [Set ShippingRateInput](ctp:api:type:StagedOrderSetShippingRateInputAction) update action.
   *
   *
   */
  readonly oldShippingRateInput?: ShippingRateInput
}
/**
 *	Generated after a successful [Change Order State](ctp:api:type:OrderChangeOrderStateAction) update action.
 *
 */
export interface OrderStateChangedMessage {
  readonly type: 'OrderStateChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[OrderState](ctp:api:type:OrderState) after the [Change Order State](ctp:api:type:OrderChangeOrderStateAction) update action.
   *
   *
   */
  readonly orderState: OrderState
  /**
   *	[OrderState](ctp:api:type:OrderState) before the [Change Order State](ctp:api:type:OrderChangeOrderStateAction) update action.
   *
   *
   */
  readonly oldOrderState: OrderState
}
/**
 *	Generated after a successful [Transition State](ctp:api:type:OrderTransitionStateAction) update action.
 *
 */
export interface OrderStateTransitionMessage {
  readonly type: 'OrderStateTransition'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[OrderState](ctp:api:type:OrderState) after the [Transition State](ctp:api:type:OrderTransitionStateAction) update action.
   *
   *
   */
  readonly state: StateReference
  /**
   *	[OrderState](ctp:api:type:OrderState) before the [Transition State](ctp:api:type:OrderTransitionStateAction) update action.
   *
   *
   */
  readonly oldState?: StateReference
  /**
   *	Whether [State](ctp:api:type:State) transition validations were turned off during the [Transition State](ctp:api:type:OrderTransitionStateAction) update action.
   *
   *
   */
  readonly force: boolean
}
/**
 *	Generated after a successful [Set Store](ctp:api:type:OrderSetStoreAction) update action.
 *
 */
export interface OrderStoreSetMessage {
  readonly type: 'OrderStoreSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Store](ctp:api:type:Store) that was set.
   *
   *
   */
  readonly store?: StoreKeyReference
}
/**
 *	Generated after a successful [Add Parcel To Delivery](ctp:api:type:OrderAddParcelToDeliveryAction) update action.
 *
 */
export interface ParcelAddedToDeliveryMessage {
  readonly type: 'ParcelAddedToDelivery'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly delivery: Delivery
  /**
   *	[Parcel](ctp:api:type:Parcel) that was added to the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly parcel: Parcel
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multi` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Set Parcel Items](ctp:api:type:OrderSetParcelItemsAction) update action.
 *
 */
export interface ParcelItemsUpdatedMessage {
  readonly type: 'ParcelItemsUpdated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Parcel](ctp:api:type:Parcel).
   *
   *
   */
  readonly parcelId: string
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
  /**
   *	[Delivery Items](ctp:api:type:DeliveryItem) after the [Set Parcel Items](ctp:api:type:OrderSetParcelItemsAction) update action.
   *
   *
   */
  readonly items: DeliveryItem[]
  /**
   *	[Delivery Items](ctp:api:type:DeliveryItem) before the [Set Parcel Items](ctp:api:type:OrderSetParcelItemsAction) update action.
   *
   *
   */
  readonly oldItems: DeliveryItem[]
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multi` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Set Parcel Measurements](ctp:api:type:OrderSetParcelMeasurementsAction) update action.
 *
 */
export interface ParcelMeasurementsUpdatedMessage {
  readonly type: 'ParcelMeasurementsUpdated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
  /**
   *	Unique identifier of the [Parcel](ctp:api:type:Parcel).
   *
   *
   */
  readonly parcelId: string
  /**
   *	The [Parcel Measurements](ctp:api:type:ParcelMeasurements) that were set on the [Parcel](ctp:api:type:Parcel).
   *
   *
   */
  readonly measurements?: ParcelMeasurements
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multi` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Remove Parcel From Delivery](ctp:api:type:OrderRemoveParcelFromDeliveryAction) update action.
 *
 */
export interface ParcelRemovedFromDeliveryMessage {
  readonly type: 'ParcelRemovedFromDelivery'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
  /**
   *	[Parcel](ctp:api:type:Parcel) that was removed from the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly parcel: Parcel
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multi` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Set Parcel TrackingData](ctp:api:type:OrderSetParcelTrackingDataAction) update action.
 *
 */
export interface ParcelTrackingDataUpdatedMessage {
  readonly type: 'ParcelTrackingDataUpdated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
  /**
   *	Unique identifier of the [Parcel](ctp:api:type:Parcel).
   *
   *
   */
  readonly parcelId: string
  /**
   *	The [Tracking Data](ctp:api:type:TrackingData) that was added to the [Parcel](ctp:api:type:Parcel).
   *
   *
   */
  readonly trackingData?: TrackingData
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multi` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Create Payment](/../api/projects/payments#create-a-payment) request.
 *
 */
export interface PaymentCreatedMessage {
  readonly type: 'PaymentCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Payment](ctp:api:type:Payment) that was created.
   *
   *
   */
  readonly payment: Payment
}
/**
 *	Generated after a successful [Add InterfaceInteraction](ctp:api:type:PaymentAddInterfaceInteractionAction) update action.
 *
 */
export interface PaymentInteractionAddedMessage {
  readonly type: 'PaymentInteractionAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The interface interaction that was added to the [Payment](ctp:api:type:Payment).
   *
   *
   */
  readonly interaction: CustomFields
}
/**
 *	Generated after a successful [Set StatusInterfaceCode](ctp:api:type:PaymentSetStatusInterfaceCodeAction) update action.
 *
 */
export interface PaymentStatusInterfaceCodeSetMessage {
  readonly type: 'PaymentStatusInterfaceCodeSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier for the [Payment](ctp:api:type:Payment) for which the [Set StatusInterfaceCode](ctp:api:type:PaymentSetStatusInterfaceCodeAction) update action was applied.
   *
   *	@deprecated
   */
  readonly paymentId: string
  /**
   *	The `interfaceCode` that was set during the [Set StatusInterfaceCode](ctp:api:type:PaymentSetStatusInterfaceCodeAction) update action.
   *
   *
   */
  readonly interfaceCode?: string
}
/**
 *	Generated after a successful [Transition State](ctp:api:type:PaymentTransitionStateAction) update action.
 *
 */
export interface PaymentStatusStateTransitionMessage {
  readonly type: 'PaymentStatusStateTransition'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[State](ctp:api:type:State) of the [Payment](ctp:api:type:Payment) after the [Transition State](ctp:api:type:PaymentTransitionStateAction) update action.
   *
   *
   */
  readonly state: StateReference
  /**
   *	Whether [State](ctp:api:type:State) transition validations were turned off during the [Change Transaction State](ctp:api:type:PaymentChangeTransactionStateAction) update action.
   *
   *
   */
  readonly force: boolean
}
/**
 *	Generated after a successful [Add Transaction](ctp:api:type:PaymentAddTransactionAction) update action.
 *
 */
export interface PaymentTransactionAddedMessage {
  readonly type: 'PaymentTransactionAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Transaction](ctp:api:type:Transaction) that was added to the [Payment](ctp:api:type:Payment).
   *
   *
   */
  readonly transaction: Transaction
}
/**
 *	Generated after a successful [Change Transaction State](ctp:api:type:PaymentChangeTransactionStateAction) update action.
 *
 */
export interface PaymentTransactionStateChangedMessage {
  readonly type: 'PaymentTransactionStateChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier for the [Transaction](ctp:api:type:Transaction) for which the [Transaction State](ctp:api:type:TransactionState) changed.
   *
   *
   */
  readonly transactionId: string
  /**
   *	[Transaction State](ctp:api:type:TransactionState) after the [Change Transaction State](ctp:api:type:PaymentChangeTransactionStateAction) update action.
   *
   *
   */
  readonly state: TransactionState
}
/**
 *	Generated after a successful [Add To Category](ctp:api:type:ProductAddToCategoryAction) update action.
 *
 */
export interface ProductAddedToCategoryMessage {
  readonly type: 'ProductAddedToCategory'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Category](ctp:api:type:Category) the [Product](ctp:api:type:Product) was added to.
   *
   *
   */
  readonly category: CategoryReference
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Create Product](/../api/projects/products#create-product) request.
 *
 */
export interface ProductCreatedMessage {
  readonly type: 'ProductCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The staged [Product Projection](ctp:api:type:ProductProjection) of the [Product](ctp:api:type:Product) at the time of creation.
   *
   *
   */
  readonly productProjection: ProductProjection
}
/**
 *	Generated after a successful [Delete Product](/../api/projects/products#delete-product) request.
 *
 */
export interface ProductDeletedMessage {
  readonly type: 'ProductDeleted'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	List of image URLs that were removed during the [Delete Product](ctp:api:type:Product) request.
   *
   *
   */
  readonly removedImageUrls: string[]
  /**
   *	Current [Product Projection](ctp:api:type:ProductProjection) of the deleted [Product](ctp:api:type:Product).
   *
   *
   */
  readonly currentProjection?: ProductProjection
}
/**
 *	Generated after a successful [Add External Image](ctp:api:type:ProductAddExternalImageAction) update action or after the successful [upload of an image](/../api/projects/products#upload-product-image).
 *
 */
export interface ProductImageAddedMessage {
  readonly type: 'ProductImageAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Product Variant](ctp:api:type:ProductVariant) to which the [Image](ctp:api:type:Image) was added.
   *
   *
   */
  readonly variantId: number
  /**
   *	[Image](ctp:api:type:Image) that was added.
   *
   *
   */
  readonly image: Image
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a Price is updated due to a [Product Discount](ctp:api:type:ProductDiscount).
 *
 */
export interface ProductPriceDiscountsSetMessage {
  readonly type: 'ProductPriceDiscountsSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Array containing details about the [Embedded Prices](ctp:api:type:Price) that were updated.
   *
   *
   */
  readonly updatedPrices: ProductPriceDiscountsSetUpdatedPrice[]
}
/**
 *	Details about a [Embedded Price](ctp:api:type:Price) that was updated due to a Discount. Specific to [ProductPriceDiscountsSet](ctp:api:type:ProductPriceDiscountsSetMessage) Message.
 *
 */
export interface ProductPriceDiscountsSetUpdatedPrice {
  /**
   *	Unique identifier of the [ProductVariant](ctp:api:type:ProductVariant) for which the Discount was set.
   *
   *
   */
  readonly variantId: number
  /**
   *	Key of the [ProductVariant](ctp:api:type:ProductVariant) for which Discount was set.
   *
   *
   */
  readonly variantKey?: string
  /**
   *	SKU of the [ProductVariant](ctp:api:type:ProductVariant) for which Discount was set.
   *
   *
   */
  readonly sku?: string
  /**
   *	Unique identifier of the [Embedded Price](ctp:api:type:Price).
   *
   *
   */
  readonly priceId: string
  /**
   *	Discounted Price for the [ProductVariant](ctp:api:type:ProductVariant) for which Discount was set.
   *
   *
   */
  readonly discounted?: DiscountedPrice
  /**
   *	Whether the update was only applied to the staged [ProductProjection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Set Discounted Embedded Price](ctp:api:type:ProductSetDiscountedPriceAction) update action.
 *
 */
export interface ProductPriceExternalDiscountSetMessage {
  readonly type: 'ProductPriceExternalDiscountSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Product Variant](ctp:api:type:ProductVariant) for which the Discount was set.
   *
   *
   */
  readonly variantId: number
  /**
   *	Key of the [Product Variant](ctp:api:type:ProductVariant) for which the Discount was set.
   *
   *
   */
  readonly variantKey?: string
  /**
   *	SKU of the [Product Variant](ctp:api:type:ProductVariant) for which Discount was set.
   *
   *
   */
  readonly sku?: string
  /**
   *	Unique identifier of the [Embedded Price](ctp:api:type:Price).
   *
   *
   */
  readonly priceId: string
  /**
   *	Discounted Price for the [Product Variant](ctp:api:type:ProductVariant) for which Discount was set.
   *
   *
   */
  readonly discounted?: DiscountedPrice
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Publish](ctp:api:type:ProductPublishAction) update action.
 *
 */
export interface ProductPublishedMessage {
  readonly type: 'ProductPublished'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	List of image URLs which were removed during the [Publish](ctp:api:type:ProductPublishAction) update action.
   *
   *
   */
  readonly removedImageUrls: string[]
  /**
   *	Current [Product Projection](ctp:api:type:ProductProjection) of the [Product](ctp:api:type:Product) at the time of creation.
   *
   *
   */
  readonly productProjection: ProductProjection
  /**
   *	[Publishing Scope](ctp:api:type:ProductPublishScope) that was used during the [Publish](ctp:api:type:ProductPublishAction) update action.
   *
   *
   */
  readonly scope: ProductPublishScope
}
/**
 *	Generated after a successful [Remove From Category](ctp:api:type:ProductRemoveFromCategoryAction) update action.
 *
 */
export interface ProductRemovedFromCategoryMessage {
  readonly type: 'ProductRemovedFromCategory'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Category](ctp:api:type:Category) the [Product](ctp:api:type:Product) was removed from.
   *
   *
   */
  readonly category: CategoryReference
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Revert Staged Changes](ctp:api:type:ProductRevertStagedChangesAction) update action.
 *
 */
export interface ProductRevertedStagedChangesMessage {
  readonly type: 'ProductRevertedStagedChanges'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	List of image URLs that were removed during the [Revert Staged Changes](ctp:api:type:ProductRevertStagedChangesAction) update action.
   *
   *
   */
  readonly removedImageUrls: string[]
}
/**
 *	Generated after a successful [Create Product Selection](/../api/projects/product-selections#create-product-selection) request.
 *
 */
export interface ProductSelectionCreatedMessage {
  readonly type: 'ProductSelectionCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The `type` and `name` of the individual Product Selection.
   *
   *
   */
  readonly productSelection: IndividualProductSelectionType
}
/**
 *	Generated after a successful [Delete Product Selection](/../api/projects/product-selections#create-product-selection) request.
 *
 */
export interface ProductSelectionDeletedMessage {
  readonly type: 'ProductSelectionDeleted'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
}
/**
 *	Generated after a successful [Add Product](ctp:api:type:ProductSelectionAddProductAction) update action.
 *
 */
export interface ProductSelectionProductAddedMessage {
  readonly type: 'ProductSelectionProductAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Product](ctp:api:type:Product) that was added to the [Product Selection](ctp:api:type:ProductSelection).
   *
   *
   */
  readonly product: ProductReference
  /**
   *	Product Variant Selection after the [Add Product](ctp:api:type:ProductSelectionAddProductAction) update action.
   *
   *
   */
  readonly variantSelection: ProductVariantSelection
}
/**
 *	Generated after a successful [Remove Product](ctp:api:type:ProductSelectionRemoveProductAction) update action.
 *
 */
export interface ProductSelectionProductRemovedMessage {
  readonly type: 'ProductSelectionProductRemoved'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Product](ctp:api:type:Product) that was removed from the Product Selection.
   *
   *
   */
  readonly product: ProductReference
}
/**
 *	Generated after a successful [Set Variant Selection](ctp:api:type:ProductSelectionSetVariantSelectionAction) update action.
 *
 */
export interface ProductSelectionVariantSelectionChangedMessage {
  readonly type: 'ProductSelectionVariantSelectionChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Product](ctp:api:type:Product) for which the Product Variant Selection changed.
   *
   *
   */
  readonly product: ProductReference
  /**
   *	Product Variant Selection before the [Set Variant Selection](ctp:api:type:ProductSelectionSetVariantSelectionAction) update action.
   *
   */
  readonly oldVariantSelection: ProductVariantSelection
  /**
   *	Product Variant Selection after the [Set Variant Selection](ctp:api:type:ProductSelectionSetVariantSelectionAction) update action.
   *
   */
  readonly newVariantSelection: ProductVariantSelection
}
/**
 *	Generated after a successful [Change Slug](ctp:api:type:ProductChangeSlugAction) update action.
 *
 */
export interface ProductSlugChangedMessage {
  readonly type: 'ProductSlugChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The slug of the [Product](ctp:api:type:Product) after the [Change Slug](ctp:api:type:ProductChangeSlugAction) update action.
   *
   *
   */
  readonly slug: LocalizedString
  /**
   *	The slug of the [Product](ctp:api:type:Product) before the [Change Slug](ctp:api:type:ProductChangeSlugAction) update action.
   *
   *
   */
  readonly oldSlug?: LocalizedString
}
/**
 *	Generated after a successful [Transition State](ctp:api:type:ProductTransitionStateAction) update action.
 *
 */
export interface ProductStateTransitionMessage {
  readonly type: 'ProductStateTransition'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Product [State](ctp:api:type:State) after the [Transition State](ctp:api:type:ProductTransitionStateAction) update action.
   *
   */
  readonly state: StateReference
  /**
   *	Whether [State](ctp:api:type:State) transition validations were turned off during the [Transition State](ctp:api:type:ProductTransitionStateAction) update action.
   *
   *
   */
  readonly force: boolean
}
/**
 *	Generated after a successful [Unpublish Product](ctp:api:type:ProductUnpublishAction) update action.
 *
 */
export interface ProductUnpublishedMessage {
  readonly type: 'ProductUnpublished'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
}
/**
 *	Generated after a successful [Add Product Variant](ctp:api:type:ProductAddVariantAction) update action.
 *
 */
export interface ProductVariantAddedMessage {
  readonly type: 'ProductVariantAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Product Variant](ctp:api:type:ProductVariant) that was added.
   *
   *
   */
  readonly variant: ProductVariant
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Remove Product Variant](ctp:api:type:ProductRemoveVariantAction) update action.
 *
 */
export interface ProductVariantDeletedMessage {
  readonly type: 'ProductVariantDeleted'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Unique identifier of the [Product Variant](ctp:api:type:ProductVariant) that was added.
   *
   *
   */
  readonly variant?: ProductVariant
  /**
   *	List of image URLs that were removed with the [Remove Product Variant](ctp:api:type:ProductRemoveVariantAction) update action.
   *
   *
   */
  readonly removedImageUrls: string[]
}
/**
 *	Generated after a successful [Create Quote](/../api/projects/quotes#create-quote) request.
 *
 */
export interface QuoteCreatedMessage {
  readonly type: 'QuoteCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Quote](/../api/projects/quotes) that was created.
   *
   *
   */
  readonly quote: Quote
}
/**
 *	Generated after a successful [Delete Quote](/../api/projects/quotes#delete-quote) request.
 *
 */
export interface QuoteDeletedMessage {
  readonly type: 'QuoteDeleted'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
}
/**
 *	Generated after a successful [Create Quote Request](/../api/projects/quote-requests#create-quoterequest) request.
 *
 */
export interface QuoteRequestCreatedMessage {
  readonly type: 'QuoteRequestCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Quote Request](/../api/projects/quote-requests) that was created.
   *
   *
   */
  readonly quoteRequest: QuoteRequest
}
/**
 *	Generated after a successful [Delete Quote Request](/../api/projects/quote-requests#delete-quoterequest) request.
 *
 */
export interface QuoteRequestDeletedMessage {
  readonly type: 'QuoteRequestDeleted'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
}
/**
 *	Generated after a successful [Change Quote Request State](ctp:api:type:QuoteRequestChangeQuoteRequestStateAction) update action.
 *
 */
export interface QuoteRequestStateChangedMessage {
  readonly type: 'QuoteRequestStateChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	State of the Quote Request after the [Change Quote Request State](ctp:api:type:QuoteRequestChangeQuoteRequestStateAction) update action.
   *
   *
   */
  readonly quoteRequestState: QuoteRequestState
  /**
   *	State of the Quote Request before the [Change Quote Request State](ctp:api:type:QuoteRequestChangeQuoteRequestStateAction) update action.
   *
   *
   */
  readonly oldQuoteRequestState: QuoteRequestState
}
/**
 *	Generated after a successful [Transition State](ctp:api:type:QuoteRequestTransitionStateAction) update action.
 *
 */
export interface QuoteRequestStateTransitionMessage {
  readonly type: 'QuoteRequestStateTransition'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[State](ctp:api:type:State) of the [Quote](ctp:api:type:Quote) after the [Transition State](ctp:api:type:QuoteRequestTransitionStateAction) update action.
   *
   *
   */
  readonly state: StateReference
  /**
   *	[State](ctp:api:type:State) of the [Quote](ctp:api:type:Quote) before the [Transition State](ctp:api:type:QuoteRequestTransitionStateAction) update action.
   *
   *
   */
  readonly oldState?: StateReference
  /**
   *	Whether [State](ctp:api:type:State) transition validations were turned off during the [Transition State](ctp:api:type:QuoteRequestTransitionStateAction) update action.
   *
   *
   */
  readonly force: boolean
}
/**
 *	Generated after a successful [Change Quote State](ctp:api:type:QuoteChangeQuoteStateAction) update action.
 *
 */
export interface QuoteStateChangedMessage {
  readonly type: 'QuoteStateChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	State of the Quote after the [Change Quote State](ctp:api:type:QuoteChangeQuoteStateAction) update action.
   *
   *
   */
  readonly quoteState: QuoteState
  /**
   *	State of the Quote before the [Change Quote State](ctp:api:type:QuoteChangeQuoteStateAction) update action.
   *
   *
   */
  readonly oldQuoteState: QuoteState
}
/**
 *	Generated after a successful [Transition State](ctp:api:type:QuoteTransitionStateAction) update action.
 *
 */
export interface QuoteStateTransitionMessage {
  readonly type: 'QuoteStateTransition'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[State](ctp:api:type:State) of the [Quote](ctp:api:type:Quote) after the [Transition State](ctp:api:type:QuoteTransitionStateAction) update action.
   *
   *
   */
  readonly state: StateReference
  /**
   *	[State](ctp:api:type:State) of the [Quote](ctp:api:type:Quote) before the [Transition State](ctp:api:type:QuoteTransitionStateAction) update action.
   *
   *
   */
  readonly oldState?: StateReference
  /**
   *	Whether [State](ctp:api:type:State) transition validations were turned off during the [Transition State](ctp:api:type:QuoteTransitionStateAction) update action.
   *
   *
   */
  readonly force: boolean
}
/**
 *	Generated after a successful [Add Return Info](ctp:api:type:OrderAddReturnInfoAction) update action.
 *
 */
export interface ReturnInfoAddedMessage {
  readonly type: 'ReturnInfoAdded'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The [ReturnInfo](ctp:api:type:ReturnInfo) that was added to the [Order](ctp:api:type:Order).
   *
   *
   */
  readonly returnInfo: ReturnInfo
}
/**
 *	Generated after a successful [Set Return Info](ctp:api:type:OrderSetReturnInfoAction) update action on [Orders](ctp:api:type:Order) and [Order Edits](ctp:api:type:OrderEdit).
 *
 */
export interface ReturnInfoSetMessage {
  readonly type: 'ReturnInfoSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The [ReturnInfo](ctp:api:type:ReturnInfo) that was set on the [Order](ctp:api:type:Order) or [Order Edit](ctp:api:type:OrderEdit).
   *
   *
   */
  readonly returnInfo?: ReturnInfo[]
}
/**
 *	Generated after a successful [Create Review](/../api/projects/reviews#create-a-review) request.
 *
 */
export interface ReviewCreatedMessage {
  readonly type: 'ReviewCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Review](ctp:api:type:Review) that was created.
   *
   *
   */
  readonly review: Review
}
/**
 *	Generated after a successful [Set Rating](ctp:api:type:ReviewSetRatingAction) update action.
 *
 */
export interface ReviewRatingSetMessage {
  readonly type: 'ReviewRatingSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The `rating` of the [Review](ctp:api:type:Review) before the [Set Rating](ctp:api:type:ReviewSetRatingAction) update action.
   *
   *
   */
  readonly oldRating?: number
  /**
   *	The `rating` of the [Review](ctp:api:type:Review) after the [Set Rating](ctp:api:type:ReviewSetRatingAction) update action.
   *
   *
   */
  readonly newRating?: number
  /**
   *	Whether the [Review](ctp:api:type:Review) was taken into account in the ratings statistics of the target.
   *
   *
   */
  readonly includedInStatistics: boolean
  /**
   *	[Reference](ctp:api:type:Reference) to the resource that the [Review](ctp:api:type:Review) belongs to.
   *
   *
   */
  readonly target?: Reference
}
/**
 *	Generated after a successful [Transition State](ctp:api:type:ReviewTransitionStateAction) update action.
 *
 */
export interface ReviewStateTransitionMessage {
  readonly type: 'ReviewStateTransition'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[State](ctp:api:type:State) of the [Review](ctp:api:type:Review) before the [Transition State](ctp:api:type:ReviewTransitionStateAction) update action.
   *
   *
   */
  readonly oldState?: StateReference
  /**
   *	[State](ctp:api:type:State) of the [Review](ctp:api:type:Review) after the [Transition State](ctp:api:type:ReviewTransitionStateAction) update action.
   *
   *
   */
  readonly newState: StateReference
  /**
   *	Whether the old [Review](ctp:api:type:Review) was taken into account in the rating statistics of the target before the state transition.
   *
   *
   */
  readonly oldIncludedInStatistics: boolean
  /**
   *	Whether the new [Review](ctp:api:type:Review) was taken into account in the rating statistics of the target after the state transition.
   *
   *
   */
  readonly newIncludedInStatistics: boolean
  /**
   *	[Reference](ctp:api:type:Reference) to the resource that the [Review](ctp:api:type:Review) belongs to.
   *
   *
   */
  readonly target?: Reference
  /**
   *	Whether [State](ctp:api:type:State) transition validations were turned off during the [Transition State](ctp:api:type:ReviewTransitionStateAction) update action.
   *
   *
   */
  readonly force: boolean
}
/**
 *	Generated after a successful [Create Staged Quote](/../api/projects/staged-quotes#create-stagedquote) request.
 *
 */
export interface StagedQuoteCreatedMessage {
  readonly type: 'StagedQuoteCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Staged Quote](/../api/projects/staged-quotes) that was created.
   *
   *
   */
  readonly stagedQuote: StagedQuote
}
/**
 *	Generated after a successful [Delete Staged Quote](/../api/projects/staged-quotes#delete-stagedquote) request.
 *
 */
export interface StagedQuoteDeletedMessage {
  readonly type: 'StagedQuoteDeleted'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
}
/**
 *	Generated after a successful [Set Seller Comment](ctp:api:type:StagedQuoteSetSellerCommentAction) update action.
 *
 */
export interface StagedQuoteSellerCommentSetMessage {
  readonly type: 'StagedQuoteSellerCommentSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	`sellerComment` on the [StagedQuote](ctp:api:type:StagedQuote) after a successful [Set Seller Comment](ctp:api:type:StagedQuoteSetSellerCommentAction) update action.
   *
   *
   */
  readonly sellerComment: string
}
/**
 *	Generated after a successful [Change Staged Quote State](ctp:api:type:StagedQuoteChangeStagedQuoteStateAction) update action.
 *
 */
export interface StagedQuoteStateChangedMessage {
  readonly type: 'StagedQuoteStateChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	State of the Staged Quote after the [Change Staged Quote State](ctp:api:type:StagedQuoteChangeStagedQuoteStateAction) update action.
   *
   *
   */
  readonly stagedQuoteState: StagedQuoteState
  /**
   *	State of the Staged Quote before the [Change Staged Quote State](ctp:api:type:StagedQuoteChangeStagedQuoteStateAction) update action.
   *
   *
   */
  readonly oldStagedQuoteState: StagedQuoteState
}
/**
 *	Generated after a successful [Transition State](ctp:api:type:StagedQuoteTransitionStateAction) update action.
 *
 */
export interface StagedQuoteStateTransitionMessage {
  readonly type: 'StagedQuoteStateTransition'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[State](ctp:api:type:State) of the [Quote](ctp:api:type:Quote) after the [Transition State](ctp:api:type:StagedQuoteTransitionStateAction) update action.
   *
   *
   */
  readonly state: StateReference
  /**
   *	[State](ctp:api:type:State) of the [Quote](ctp:api:type:Quote) before the [Transition State](ctp:api:type:StagedQuoteTransitionStateAction) update action.
   *
   *
   */
  readonly oldState?: StateReference
  /**
   *	Whether [State](ctp:api:type:State) transition validations were turned off during the [Transition State](ctp:api:type:StagedQuoteTransitionStateAction) update action.
   *
   *
   */
  readonly force: boolean
}
/**
 *	Generated after a successful [Set Valid To](ctp:api:type:StagedQuoteSetValidToAction) update action.
 *
 */
export interface StagedQuoteValidToSetMessage {
  readonly type: 'StagedQuoteValidToSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Expiration date for the Staged Quote after the [Set Valid To](ctp:api:type:StagedQuoteSetValidToAction) update action.
   *
   *
   */
  readonly validTo: string
}
/**
 *	Generated after a successful [Change Active](ctp:api:types:StandalonePriceChangeActiveAction) update action.
 *
 */
export interface StandalonePriceActiveChangedMessage {
  readonly type: 'StandalonePriceActiveChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Value of the `active` field of the StandalonePrice after the [Change Active](ctp:api:types:StandalonePriceChangeActiveAction) update action.
   *
   *
   */
  readonly active: boolean
  /**
   *	Value of the `active` field of the StandalonePrice before the [Change Active](ctp:api:types:StandalonePriceChangeActiveAction) update action.
   *
   *
   */
  readonly oldActive: boolean
}
/**
 *	Generated after a successful [Create StandalonePrice](/../api/projects/standalone-prices#create-standaloneprice) request.
 *
 */
export interface StandalonePriceCreatedMessage {
  readonly type: 'StandalonePriceCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Standalone Price](ctp:api:type:StandalonePrice) that was created.
   *
   *
   */
  readonly standalonePrice: StandalonePrice
}
/**
 *	Generated after a successful [Delete StandalonePrice](/../api/projects/standalone-prices#delete-standaloneprice) request.
 *
 */
export interface StandalonePriceDeletedMessage {
  readonly type: 'StandalonePriceDeleted'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
}
/**
 *	Generated after a [Product Discount](ctp:api:type:ProductDiscount) is successfully applied to a StandalonePrice.
 *
 */
export interface StandalonePriceDiscountSetMessage {
  readonly type: 'StandalonePriceDiscountSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The new `discounted` value of the updated [StandalonePrice](ctp:api:type:StandalonePrice).
   *
   *
   */
  readonly discounted?: DiscountedPrice
}
/**
 *	Generated after a successful [Set Discounted Price](ctp:api:type:StandalonePriceSetDiscountedPriceAction) update action.
 *
 */
export interface StandalonePriceExternalDiscountSetMessage {
  readonly type: 'StandalonePriceExternalDiscountSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The `discounted` value of the [StandalonePrice](ctp:api:type:StandalonePrice) after the [Set Discounted Price](ctp:api:type:StandalonePriceSetDiscountedPriceAction) update action.
   *
   *
   */
  readonly discounted?: DiscountedPrice
}
/**
 *	Generated after a successful [Apply Staged Changes](ctp:api:types:StandalonePriceApplyStagedChangesAction) update action.
 *
 */
export interface StandalonePriceStagedChangesAppliedMessage {
  readonly type: 'StandalonePriceStagedChangesApplied'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Applied changes of the [StandalonePrice](/../api/projects/standalone-prices) after the [Apply Staged Changes](ctp:api:types:StandalonePriceApplyStagedChangesAction) update action.
   *
   *
   */
  readonly stagedChanges: StagedStandalonePrice
}
/**
 *	Generated after a successful [Change Value](ctp:api:type:StandalonePriceChangeValueAction) update action.
 *
 */
export interface StandalonePriceValueChangedMessage {
  readonly type: 'StandalonePriceValueChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The new value of the updated [StandalonePrice](ctp:api:type:StandalonePrice).
   *
   *
   */
  readonly value: Money
  /**
   *	Whether the new value was applied to the current or the staged representation of the StandalonePrice. Staged changes are stored on the [StagedStandalonePrice](ctp:api:type:StagedStandalonePrice).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Create Store](/../api/projects/stores#create-store) request.
 *
 */
export interface StoreCreatedMessage {
  readonly type: 'StoreCreated'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	The `name` of the [Store](ctp:api:type:Store) that was created.
   *
   *
   */
  readonly name?: LocalizedString
  /**
   *	Languages of the [Store](ctp:api:type:Store) that was created. Languages are represented as [IETF language tags](https://en.wikipedia.org/wiki/IETF_language_tag).
   *
   *
   */
  readonly languages?: string[]
  /**
   *	[Distribution Channels](ctp:api:type:ChannelRoleEnum) of the [Store](ctp:api:type:Store) that was created.
   *
   *
   */
  readonly distributionChannels: ChannelReference[]
  /**
   *	[Supply Channels](ctp:api:type:ChannelRoleEnum) of the [Store](ctp:api:type:Store) that was created.
   *
   *
   */
  readonly supplyChannels: ChannelReference[]
  /**
   *	[ProductSelectionSettings](ctp:api:type:ProductSelectionSetting) of the [Store](ctp:api:type:Store) that was created.
   *
   *
   */
  readonly productSelections: ProductSelectionSetting[]
  /**
   *	[Custom Fields](ctp:api:type:CustomFields) on the [Store](ctp:api:type:Store) that was created.
   *
   *
   */
  readonly custom?: CustomFields
}
/**
 *	Generated after a successful [Delete Store](/../api/projects/quote-requests#delete-quoterequest) request.
 *
 */
export interface StoreDeletedMessage {
  readonly type: 'StoreDeleted'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
}
/**
 *	Generated after a successful [Add Distribution Channel](ctp:api:type:StoreAddDistributionChannelAction),
 *	[Remove Distribution Channel](ctp:api:type:StoreRemoveDistributionChannelAction), or
 *	[Set Distribution Channels](ctp:api:type:StoreSetDistributionChannelsAction) update action.
 *
 */
export interface StoreDistributionChannelsChangedMessage {
  readonly type: 'StoreDistributionChannelsChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Product distribution Channels that have been added to the [Store](ctp:api:type:Store).
   *
   */
  readonly addedDistributionChannels?: ChannelReference[]
  /**
   *	Product distribution Channels that have been removed from the [Store](ctp:api:type:Store).
   *
   *
   */
  readonly removedDistributionChannels?: ChannelReference[]
}
/**
 *	Generated after a successful [Set Languages](ctp:api:type:StoreSetLanguagesAction) update action.
 *
 */
export interface StoreLanguagesChangedMessage {
  readonly type: 'StoreLanguagesChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[Locales](ctp:api:type:Locale) added to the [Store](ctp:api:type:Store) after the [Set Languages](ctp:api:type:StoreSetLanguagesAction) update action.
   *
   *
   */
  readonly addedLanguages?: string[]
  /**
   *	[Locales](ctp:api:type:Locale) removed from the [Store](ctp:api:type:Store) during the [Set Languages](ctp:api:type:StoreSetLanguagesAction) update action.
   *
   *
   */
  readonly removedLanguages?: string[]
}
/**
 *	Generated after a successful [Set Name](ctp:api:type:StoreSetNameAction) update action.
 *
 */
export interface StoreNameSetMessage {
  readonly type: 'StoreNameSet'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Name of the [Store](ctp:api:type:Store) set during the [Set Name](ctp:api:type:StoreSetNameAction) update action.
   *
   *
   */
  readonly name?: LocalizedString
  /**
   *	Names set for the [Store](ctp:api:type:Store) in different locales.
   *
   *
   */
  readonly nameAllLocales?: LocalizedString[]
}
/**
 *	Generated by a successful [Add Product Selection](ctp:api:type:StoreAddProductSelectionAction),
 *	[Remove Product Selection](ctp:api:type:StoreRemoveProductSelectionAction),
 *	[Set Product Selections](ctp:api:type:StoreSetProductSelectionsAction),
 *	or [Change Product Selections Active](ctp:api:type:StoreChangeProductSelectionAction) update action.
 *
 */
export interface StoreProductSelectionsChangedMessage {
  readonly type: 'StoreProductSelectionsChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	[ProductSelectionSettings](ctp:api:type:ProductSelectionSetting) that were added to the [Store](ctp:api:type:Store).
   *
   *
   */
  readonly addedProductSelections?: ProductSelectionSetting[]
  /**
   *	[ProductSelectionSettings](ctp:api:type:ProductSelectionSetting) that were removed from the [Store](ctp:api:type:Store).
   *
   *
   */
  readonly removedProductSelections?: ProductSelectionSetting[]
  /**
   *	[ProductSelectionSettings](ctp:api:type:ProductSelectionSetting) that were updated in the [Store](ctp:api:type:Store).
   *
   *
   */
  readonly updatedProductSelections?: ProductSelectionSetting[]
}
/**
 *	Generated after a successful [Add Supply Channel](ctp:api:type:StoreAddSupplyChannelAction),
 *	[Remove Supply Channel](ctp:api:type:StoreRemoveSupplyChannelAction), or
 *	[Set Supply Channels](ctp:api:type:StoreSetSupplyChannelsAction) update action.
 *
 */
export interface StoreSupplyChannelsChangedMessage {
  readonly type: 'StoreSupplyChannelsChanged'
  /**
   *	Unique identifier of the Message. Can be used to track which Messages have been processed.
   *
   */
  readonly id: string
  /**
   *	Version of a resource. In case of Messages, this is always `1`.
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the Message was generated.
   *
   */
  readonly createdAt: string
  /**
   *	Value of `createdAt`.
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Value of `createdBy`.
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Message number in relation to other Messages for a given resource. The `sequenceNumber` of the next Message for the resource is the successor of the `sequenceNumber` of the current Message. Meaning, the `sequenceNumber` of the next Message equals the `sequenceNumber` of the current Message + 1.
   *	`sequenceNumber` can be used to ensure that Messages are processed in the correct order for a particular resource.
   *
   *
   */
  readonly sequenceNumber: number
  /**
   *	[Reference](ctp:api:type:Reference) to the resource on which the change or action was performed.
   *
   *
   */
  readonly resource: Reference
  /**
   *	Version of the resource on which the change or action was performed.
   *
   *
   */
  readonly resourceVersion: number
  /**
   *	User-provided identifiers of the resource, such as `key` or `externalId`. Only present if the resource has such identifiers.
   *
   *
   */
  readonly resourceUserProvidedIdentifiers?: UserProvidedIdentifiers
  /**
   *	Inventory supply Channels that have been added to the [Store](ctp:api:type:Store).
   *
   */
  readonly addedSupplyChannels?: ChannelReference[]
  /**
   *	Inventory supply Channels that have been removed from the [Store](ctp:api:type:Store).
   *
   *
   */
  readonly removedSupplyChannels?: ChannelReference[]
}
/**
 *	User-provided identifiers present on the resource for which the Message is created. The value of the identifier stored in the Message corresponds to the one that was set on the resource at the version shown in `resourceVersion`.
 *
 */
export interface UserProvidedIdentifiers {
  /**
   *	User-provided unique identifier of the resource.
   *
   */
  readonly key?: string
  /**
   *	User-provided unique identifier of the resource.
   *
   */
  readonly externalId?: string
  /**
   *	User-provided unique identifier of an [Order](ctp:api:type:Order).
   *
   */
  readonly orderNumber?: string
  /**
   *	User-provided unique identifier of a [Customer](ctp:api:type:Customer).
   *
   */
  readonly customerNumber?: string
  /**
   *	Unique SKU of a [Product Variant](ctp:api:type:ProductVariant).
   *
   */
  readonly sku?: string
  /**
   *	Unique identifier usually used in deep-link URLs for a [Product](ctp:api:type:Product). The value corresponds to the slug in the `current` [Product Projection](ctp:api:type:ProductProjection).
   *
   */
  readonly slug?: LocalizedString
  /**
   *	Unique identifier of a [Custom Object](/../api/projects/custom-objects).
   *
   */
  readonly containerAndKey?: ContainerAndKey
}
export type MessagePayload =
  | BusinessUnitAddressAddedMessagePayload
  | BusinessUnitAddressChangedMessagePayload
  | BusinessUnitAddressRemovedMessagePayload
  | BusinessUnitAssociateAddedMessagePayload
  | BusinessUnitAssociateChangedMessagePayload
  | BusinessUnitAssociateRemovedMessagePayload
  | BusinessUnitAssociatesSetMessagePayload
  | BusinessUnitBillingAddressAddedMessagePayload
  | BusinessUnitBillingAddressRemovedMessagePayload
  | BusinessUnitContactEmailSetMessagePayload
  | BusinessUnitCreatedMessagePayload
  | BusinessUnitDefaultBillingAddressSetMessagePayload
  | BusinessUnitDefaultShippingAddressSetMessagePayload
  | BusinessUnitDeletedMessagePayload
  | BusinessUnitNameChangedMessagePayload
  | BusinessUnitParentUnitChangedMessagePayload
  | BusinessUnitShippingAddressAddedMessagePayload
  | BusinessUnitShippingAddressRemovedMessagePayload
  | BusinessUnitStatusChangedMessagePayload
  | BusinessUnitStoreAddedMessagePayload
  | BusinessUnitStoreModeChangedMessagePayload
  | BusinessUnitStoreRemovedMessagePayload
  | BusinessUnitStoresSetMessagePayload
  | CategoryCreatedMessagePayload
  | CategorySlugChangedMessagePayload
  | CustomLineItemStateTransitionMessagePayload
  | CustomerAddressAddedMessagePayload
  | CustomerAddressChangedMessagePayload
  | CustomerAddressRemovedMessagePayload
  | CustomerCompanyNameSetMessagePayload
  | CustomerCreatedMessagePayload
  | CustomerDateOfBirthSetMessagePayload
  | CustomerDeletedMessagePayload
  | CustomerEmailChangedMessagePayload
  | CustomerEmailVerifiedMessagePayload
  | CustomerFirstNameSetMessagePayload
  | CustomerGroupSetMessagePayload
  | CustomerLastNameSetMessagePayload
  | CustomerPasswordUpdatedMessagePayload
  | CustomerTitleSetMessagePayload
  | DeliveryAddedMessagePayload
  | DeliveryAddressSetMessagePayload
  | DeliveryItemsUpdatedMessagePayload
  | DeliveryRemovedMessagePayload
  | InventoryEntryCreatedMessagePayload
  | InventoryEntryDeletedMessagePayload
  | InventoryEntryQuantitySetMessagePayload
  | LineItemStateTransitionMessagePayload
  | OrderBillingAddressSetMessagePayload
  | OrderCreatedMessagePayload
  | OrderCustomLineItemAddedMessagePayload
  | OrderCustomLineItemDiscountSetMessagePayload
  | OrderCustomLineItemQuantityChangedMessagePayload
  | OrderCustomLineItemRemovedMessagePayload
  | OrderCustomerEmailSetMessagePayload
  | OrderCustomerGroupSetMessagePayload
  | OrderCustomerSetMessagePayload
  | OrderDeletedMessagePayload
  | OrderDiscountCodeAddedMessagePayload
  | OrderDiscountCodeRemovedMessagePayload
  | OrderDiscountCodeStateSetMessagePayload
  | OrderEditAppliedMessagePayload
  | OrderImportedMessagePayload
  | OrderLineItemAddedMessagePayload
  | OrderLineItemDiscountSetMessagePayload
  | OrderLineItemDistributionChannelSetMessagePayload
  | OrderLineItemRemovedMessagePayload
  | OrderMessagePayload
  | OrderPaymentAddedMessagePayload
  | OrderPaymentStateChangedMessagePayload
  | OrderReturnShipmentStateChangedMessagePayload
  | OrderShipmentStateChangedMessagePayload
  | OrderShippingAddressSetMessagePayload
  | OrderShippingInfoSetMessagePayload
  | OrderShippingRateInputSetMessagePayload
  | OrderStateChangedMessagePayload
  | OrderStateTransitionMessagePayload
  | OrderStoreSetMessagePayload
  | ParcelAddedToDeliveryMessagePayload
  | ParcelItemsUpdatedMessagePayload
  | ParcelMeasurementsUpdatedMessagePayload
  | ParcelRemovedFromDeliveryMessagePayload
  | ParcelTrackingDataUpdatedMessagePayload
  | PaymentCreatedMessagePayload
  | PaymentInteractionAddedMessagePayload
  | PaymentStatusInterfaceCodeSetMessagePayload
  | PaymentStatusStateTransitionMessagePayload
  | PaymentTransactionAddedMessagePayload
  | PaymentTransactionStateChangedMessagePayload
  | ProductAddedToCategoryMessagePayload
  | ProductCreatedMessagePayload
  | ProductDeletedMessagePayload
  | ProductImageAddedMessagePayload
  | ProductPriceDiscountsSetMessagePayload
  | ProductPriceExternalDiscountSetMessagePayload
  | ProductPublishedMessagePayload
  | ProductRemovedFromCategoryMessagePayload
  | ProductRevertedStagedChangesMessagePayload
  | ProductSelectionCreatedMessagePayload
  | ProductSelectionDeletedMessagePayload
  | ProductSelectionProductAddedMessagePayload
  | ProductSelectionProductRemovedMessagePayload
  | ProductSelectionVariantSelectionChangedMessagePayload
  | ProductSlugChangedMessagePayload
  | ProductStateTransitionMessagePayload
  | ProductUnpublishedMessagePayload
  | ProductVariantAddedMessagePayload
  | ProductVariantDeletedMessagePayload
  | QuoteCreatedMessagePayload
  | QuoteDeletedMessagePayload
  | QuoteRequestCreatedMessagePayload
  | QuoteRequestDeletedMessagePayload
  | QuoteRequestStateChangedMessagePayload
  | QuoteRequestStateTransitionMessagePayload
  | QuoteStateChangedMessagePayload
  | QuoteStateTransitionMessagePayload
  | ReturnInfoAddedMessagePayload
  | ReturnInfoSetMessagePayload
  | ReviewCreatedMessagePayload
  | ReviewRatingSetMessagePayload
  | ReviewStateTransitionMessagePayload
  | ShoppingListStoreSetMessagePayload
  | StagedQuoteCreatedMessagePayload
  | StagedQuoteDeletedMessagePayload
  | StagedQuoteSellerCommentSetMessagePayload
  | StagedQuoteStateChangedMessagePayload
  | StagedQuoteStateTransitionMessagePayload
  | StagedQuoteValidToSetMessagePayload
  | StandalonePriceActiveChangedMessagePayload
  | StandalonePriceCreatedMessagePayload
  | StandalonePriceDeletedMessagePayload
  | StandalonePriceDiscountSetMessagePayload
  | StandalonePriceExternalDiscountSetMessagePayload
  | StandalonePriceStagedChangesAppliedMessagePayload
  | StandalonePriceValueChangedMessagePayload
  | StoreCreatedMessagePayload
  | StoreDeletedMessagePayload
  | StoreDistributionChannelsChangedMessagePayload
  | StoreLanguagesChangedMessagePayload
  | StoreNameSetMessagePayload
  | StoreProductSelectionsChangedMessagePayload
  | StoreSupplyChannelsChangedMessagePayload
/**
 *	Generated after a successful [Add Address](ctp:api:type:BusinessUnitAddAddressAction) update action.
 *
 */
export interface BusinessUnitAddressAddedMessagePayload {
  readonly type: 'BusinessUnitAddressAdded'
  /**
   *	The address that was added to the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Change Address](ctp:api:type:BusinessUnitChangeAddressAction) update action.
 *
 */
export interface BusinessUnitAddressChangedMessagePayload {
  readonly type: 'BusinessUnitAddressChanged'
  /**
   *	Updated address of the Business Unit.
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Remove Address](ctp:api:type:BusinessUnitRemoveAddressAction) update action.
 *
 */
export interface BusinessUnitAddressRemovedMessagePayload {
  readonly type: 'BusinessUnitAddressRemoved'
  /**
   *	The address that was removed from the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Add Associate](ctp:api:type:BusinessUnitAddAssociateAction) update action.
 *
 */
export interface BusinessUnitAssociateAddedMessagePayload {
  readonly type: 'BusinessUnitAssociateAdded'
  /**
   *	The [Associate](ctp:api:type:Associate) that was added to the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly associate: Associate
}
/**
 *	Generated after a successful [Change Associate](ctp:api:type:BusinessUnitChangeAssociateAction) update action.
 *
 */
export interface BusinessUnitAssociateChangedMessagePayload {
  readonly type: 'BusinessUnitAssociateChanged'
  /**
   *	The [Associate](ctp:api:type:Associate) that was updated.
   *
   *
   */
  readonly associate: Associate
}
/**
 *	Generated after a successful [Remove Associate](ctp:api:type:BusinessUnitRemoveAssociateAction) update action.
 *
 */
export interface BusinessUnitAssociateRemovedMessagePayload {
  readonly type: 'BusinessUnitAssociateRemoved'
  /**
   *	The [Associate](ctp:api:type:Associate) that was removed from the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly associate: Associate
}
/**
 *	Generated after a successful [Set Associates](ctp:api:type:BusinessUnitSetAssociatesAction) update action.
 *
 */
export interface BusinessUnitAssociatesSetMessagePayload {
  readonly type: 'BusinessUnitAssociatesSet'
  /**
   *	The list of [Associates](ctp:api:type:Associate) that was updated on the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly associates: Associate[]
}
/**
 *	Generated after a successful [Add Billing Address Identifier](ctp:api:type:BusinessUnitAddBillingAddressIdAction) update action.
 *
 */
export interface BusinessUnitBillingAddressAddedMessagePayload {
  readonly type: 'BusinessUnitBillingAddressAdded'
  /**
   *	The address that was added to the [Business Unit](ctp:api:type:BusinessUnit) as billing address.
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Remove Billing Address Identifier](ctp:api:type:BusinessUnitRemoveBillingAddressIdAction) update action.
 *
 */
export interface BusinessUnitBillingAddressRemovedMessagePayload {
  readonly type: 'BusinessUnitBillingAddressRemoved'
  /**
   *	The address that was removed from the billing addresses of the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Set Contact Email](ctp:api:type:BusinessUnitSetContactEmailAction) update action.
 *
 */
export interface BusinessUnitContactEmailSetMessagePayload {
  readonly type: 'BusinessUnitContactEmailSet'
  /**
   *	The contact email that was updated on the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly contactEmail?: string
}
/**
 *	Generated after a successful [Create Business Unit](/projects/business-units#create-businessunit) request.
 *
 */
export interface BusinessUnitCreatedMessagePayload {
  readonly type: 'BusinessUnitCreated'
  /**
   *	The [Business Unit](ctp:api:type:BusinessUnit) that was created.
   *
   *
   */
  readonly businessUnit: BusinessUnit
}
/**
 *	Generated after a successful [Set Default Billing Address](ctp:api:type:BusinessUnitSetDefaultBillingAddressAction) update action.
 *
 */
export interface BusinessUnitDefaultBillingAddressSetMessagePayload {
  readonly type: 'BusinessUnitDefaultBillingAddressSet'
  /**
   *	The address that was set as the default billing address.
   *
   *
   */
  readonly address?: Address
}
/**
 *	Generated after a successful [Set Default Shipping Address](ctp:api:type:BusinessUnitSetDefaultShippingAddressAction) update action.
 *
 */
export interface BusinessUnitDefaultShippingAddressSetMessagePayload {
  readonly type: 'BusinessUnitDefaultShippingAddressSet'
  /**
   *	The address that was set as the default shipping address.
   *
   *
   */
  readonly address?: Address
}
/**
 *	Generated after a successful [Delete Business Unit](/projects/business-units#delete-businessunit) request.
 *
 */
export interface BusinessUnitDeletedMessagePayload {
  readonly type: 'BusinessUnitDeleted'
}
/**
 *	Generated after a successful [Change Name](ctp:api:type:BusinessUnitChangeNameAction) update action.
 *
 */
export interface BusinessUnitNameChangedMessagePayload {
  readonly type: 'BusinessUnitNameChanged'
  /**
   *	Updated name of the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly name: string
}
/**
 *	Generated after a successful [Change Parent Unit](ctp:api:type:BusinessUnitChangeParentUnitAction) update action.
 *
 */
export interface BusinessUnitParentUnitChangedMessagePayload {
  readonly type: 'BusinessUnitParentUnitChanged'
  /**
   *	Parent unit of the [Business Unit](ctp:api:type:BusinessUnit) before the [Change Parent Unit](ctp:api:type:BusinessUnitChangeParentUnitAction) update action.
   *
   *
   */
  readonly oldParentUnit?: BusinessUnitKeyReference
  /**
   *	Parent unit of the [Business Unit](ctp:api:type:BusinessUnit) after the [Change Parent Unit](ctp:api:type:BusinessUnitChangeParentUnitAction) update action.
   *
   *
   */
  readonly newParentUnit?: BusinessUnitKeyReference
}
/**
 *	Generated after a successful [Add Shipping Address Identifier](ctp:api:type:BusinessUnitAddShippingAddressIdAction) update action.
 *
 */
export interface BusinessUnitShippingAddressAddedMessagePayload {
  readonly type: 'BusinessUnitShippingAddressAdded'
  /**
   *	The address that was added to the [Business Unit](ctp:api:type:BusinessUnit) as shipping address.
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Remove Shipping Address Identifier](ctp:api:type:BusinessUnitRemoveShippingAddressIdAction) update action.
 *
 */
export interface BusinessUnitShippingAddressRemovedMessagePayload {
  readonly type: 'BusinessUnitShippingAddressRemoved'
  /**
   *	The address that was removed from shipping addresses of the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Change Status](ctp:api:type:BusinessUnitChangeStatusAction) update action.
 *
 */
export interface BusinessUnitStatusChangedMessagePayload {
  readonly type: 'BusinessUnitStatusChanged'
  /**
   *	Updated status of the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly active: BusinessUnitStatus
}
/**
 *	Generated after a successful [Add Store](ctp:api:type:BusinessUnitAddStoreAction) update action.
 *
 */
export interface BusinessUnitStoreAddedMessagePayload {
  readonly type: 'BusinessUnitStoreAdded'
  /**
   *	The [Store](ctp:api:type:Store) that was added to the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly store: StoreKeyReference
}
/**
 *	Generated after a successful [Set Store Mode](ctp:api:type:BusinessUnitSetStoreModeAction) update action.
 *
 */
export interface BusinessUnitStoreModeChangedMessagePayload {
  readonly type: 'BusinessUnitStoreModeChanged'
  /**
   *	[Stores](ctp:api:type:Store) of the [Business Unit](ctp:api:type:BusinessUnit) after the [Set Store Mode](ctp:api:type:BusinessUnitSetStoreModeAction) update action.
   *
   *
   */
  readonly stores: StoreKeyReference[]
  /**
   *	[BusinessUnitStoreMode](ctp:api:type:BusinessUnitStoreMode) of the Business Unit after the [Set Store Mode](ctp:api:type:BusinessUnitSetStoreModeAction) update action.
   *
   *
   */
  readonly storeMode: BusinessUnitStoreMode
  /**
   *	[Stores](ctp:api:type:Store) of the [Business Unit](ctp:api:type:BusinessUnit) before the [Set Store Mode](ctp:api:type:BusinessUnitSetStoreModeAction) update action.
   *
   *
   */
  readonly oldStores: StoreKeyReference[]
  /**
   *	[BusinessUnitStoreMode](ctp:api:type:BusinessUnitStoreMode) of the Business Unit before the [Set Store Mode](ctp:api:type:BusinessUnitSetStoreModeAction) update action.
   *
   *
   */
  readonly oldStoreMode: BusinessUnitStoreMode
}
export interface BusinessUnitStoreRemovedMessagePayload {
  readonly type: 'BusinessUnitStoreRemoved'
  /**
   *	The [Store](ctp:api:type:Store) that was removed from the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly store: StoreKeyReference
}
/**
 *	Generated after a successful [Set Stores](ctp:api:type:BusinessUnitSetStoresAction) update action.
 *
 */
export interface BusinessUnitStoresSetMessagePayload {
  readonly type: 'BusinessUnitStoresSet'
  /**
   *	[Stores](ctp:api:type:Store) of the [Business Unit](ctp:api:type:BusinessUnit) after the [Set Stores](ctp:api:type:BusinessUnitSetStoresAction) update action.
   *
   *
   */
  readonly stores: StoreKeyReference[]
}
/**
 *	Generated after a successful [Create Category](/../api/projects/categories#create-category) request.
 *
 */
export interface CategoryCreatedMessagePayload {
  readonly type: 'CategoryCreated'
  /**
   *	[Category](ctp:api:type:Category) that was created.
   *
   *
   */
  readonly category: Category
}
/**
 *	Generated after a successful [Change Slug](ctp:api:type:CategoryChangeSlugAction) update action.
 *
 */
export interface CategorySlugChangedMessagePayload {
  readonly type: 'CategorySlugChanged'
  /**
   *	The slug of the [Category](ctp:api:type:Category) after the [Change Slug](ctp:api:type:CategoryChangeSlugAction) update action.
   *
   *
   */
  readonly slug: LocalizedString
  /**
   *	The slug of the [Category](ctp:api:type:Category) before the [Change Slug](ctp:api:type:CategoryChangeSlugAction) update action.
   *
   *
   */
  readonly oldSlug?: LocalizedString
}
/**
 *	Generated after a successful [Add Address](ctp:api:type:CustomerAddAddressAction) update action.
 *
 */
export interface CustomerAddressAddedMessagePayload {
  readonly type: 'CustomerAddressAdded'
  /**
   *	[Address](ctp:api:type:Address) that was added during the [Add Address](ctp:api:type:CustomerAddAddressAction) update action.
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Change Address](ctp:api:type:CustomerChangeAddressAction) update action.
 *
 */
export interface CustomerAddressChangedMessagePayload {
  readonly type: 'CustomerAddressChanged'
  /**
   *	[Address](ctp:api:type:Address) that was set during the [Change Address](ctp:api:type:CustomerChangeAddressAction) update action.
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Remove Address](ctp:api:type:CustomerRemoveAddressAction) update action.
 *
 */
export interface CustomerAddressRemovedMessagePayload {
  readonly type: 'CustomerAddressRemoved'
  /**
   *	[Address](ctp:api:type:Address) that was removed during the [Remove Address](ctp:api:type:CustomerRemoveAddressAction) update action.
   *
   *
   */
  readonly address: Address
}
/**
 *	Generated after a successful [Set Company Name](ctp:api:type:CustomerSetCompanyNameAction) update action.
 *
 */
export interface CustomerCompanyNameSetMessagePayload {
  readonly type: 'CustomerCompanyNameSet'
  /**
   *	The `companyName` that was set during the [Set Company Name](ctp:api:type:CustomerSetCompanyNameAction) update action.
   *
   *
   */
  readonly companyName?: string
}
/**
 *	Generated after a successful [Create Customer](/../api/projects/customers#create-sign-up-customer) request.
 *
 */
export interface CustomerCreatedMessagePayload {
  readonly type: 'CustomerCreated'
  /**
   *	[Customer](ctp:api:type:Customer) that was created.
   *
   *
   */
  readonly customer: Customer
}
/**
 *	Generated after a successful [Set Date of Birth](ctp:api:type:CustomerSetDateOfBirthAction) update action.
 *
 */
export interface CustomerDateOfBirthSetMessagePayload {
  readonly type: 'CustomerDateOfBirthSet'
  /**
   *	The `dateOfBirth` that was set during the [Set Date of Birth](ctp:api:type:CustomerSetDateOfBirthAction) update action.
   *
   *
   */
  readonly dateOfBirth?: string
}
/**
 *	Generated after a successful [Delete Customer](/../api/projects/customers#delete-customer) request.
 *
 */
export interface CustomerDeletedMessagePayload {
  readonly type: 'CustomerDeleted'
}
/**
 *	Generated after a successful [Change Email](ctp:api:type:CustomerChangeEmailAction) update action.
 *
 */
export interface CustomerEmailChangedMessagePayload {
  readonly type: 'CustomerEmailChanged'
  /**
   *	The `email` that was set during the [Change Email](ctp:api:type:CustomerChangeEmailAction) update action.
   *
   *
   */
  readonly email: string
}
/**
 *	Generated after a successful [Verify Customer's Email](/../api/projects/customers#verify-email-of-customer) request.
 *
 */
export interface CustomerEmailVerifiedMessagePayload {
  readonly type: 'CustomerEmailVerified'
}
/**
 *	Generated after a successful [Set First Name](ctp:api:type:CustomerSetFirstNameAction) update action.
 *
 */
export interface CustomerFirstNameSetMessagePayload {
  readonly type: 'CustomerFirstNameSet'
  /**
   *	The `firstName` that was set during the [Set First Name](ctp:api:type:CustomerSetFirstNameAction) update action.
   *
   *
   */
  readonly firstName?: string
}
/**
 *	Generated after a successful [Set Customer Group](ctp:api:type:CustomerSetCustomerGroupAction) update action.
 *
 */
export interface CustomerGroupSetMessagePayload {
  readonly type: 'CustomerGroupSet'
  /**
   *	[Customer Group](ctp:api:type:CustomerGroup) that was set during the [Set Customer Group](ctp:api:type:CustomerSetCustomerGroupAction) update action.
   *
   *
   */
  readonly customerGroup?: CustomerGroupReference
}
/**
 *	Generated after a successful [Set Last Name](ctp:api:type:CustomerSetLastNameAction) update action.
 *
 */
export interface CustomerLastNameSetMessagePayload {
  readonly type: 'CustomerLastNameSet'
  /**
   *	The `lastName` that was set during the [Set Last Name](ctp:api:type:CustomerSetLastNameAction) update action.
   *
   *
   */
  readonly lastName?: string
}
/**
 *	Generated after a successful [Reset Customer's Password](/../api/projects/customers#reset-password-of-customer), [Reset Customer's Password in a Store](/../api/projects/customers#reset-password-of-customer-in-store), [Change Customer's Password](/../api/projects/customers#change-password-of-customer), or [Change Customer's Password in a Store](/../api/projects/customers#change-password-of-customer-in-store) request. This Message is also produced during equivalent requests to the [My Customer Profile](/../api/projects/me-profile) endpoint.
 *
 */
export interface CustomerPasswordUpdatedMessagePayload {
  readonly type: 'CustomerPasswordUpdated'
  /**
   *	Whether the Customer's password was updated during the [Reset password](/../api/projects/customers#password-reset-of-customer) or [Change password](/../api/projects/customers#change-password-of-customer) flow.
   *
   *
   */
  readonly reset: boolean
}
/**
 *	Generated after a successful [Set Title](ctp:api:type:CustomerSetTitleAction) update action.
 *
 */
export interface CustomerTitleSetMessagePayload {
  readonly type: 'CustomerTitleSet'
  /**
   *	The `title` that was set during the [Set Title](ctp:api:type:CustomerSetTitleAction) update action.
   *
   *
   */
  readonly title?: string
}
/**
 *	Generated after a successful [Create InventoryEntry](/../api/projects/inventory#create-inventoryentry) request.
 *
 */
export interface InventoryEntryCreatedMessagePayload {
  readonly type: 'InventoryEntryCreated'
  /**
   *	[InventoryEntry](ctp:api:type:InventoryEntry) that was created.
   *
   *
   */
  readonly inventoryEntry: InventoryEntry
}
/**
 *	Generated after a successful [Delete InventoryEntry](/../api/projects/inventory#delete-inventoryentry) request.
 *
 */
export interface InventoryEntryDeletedMessagePayload {
  readonly type: 'InventoryEntryDeleted'
  /**
   *	The `sku` of the [InventoryEntry](ctp:api:type:InventoryEntry) that was deleted.
   *
   *
   */
  readonly sku: string
  /**
   *	[Reference](ctp:api:type:Reference) to the [Channel](ctp:api:type:Channel) where the [InventoryEntry](ctp:api:type:InventoryEntry) was deleted.
   *
   *
   */
  readonly supplyChannel?: ChannelReference
}
/**
 *	Generated after a successful [Add Quantity](ctp:api:type:InventoryEntryAddQuantityAction), [Remove Quantity](ctp:api:type:InventoryEntryRemoveQuantityAction) or [Change Quantity](ctp:api:type:InventoryEntryChangeQuantityAction) update action.
 *	Inventory changes as a result of [Order creation](/../api/projects/orders#create-order) do not trigger this message.
 *
 */
export interface InventoryEntryQuantitySetMessagePayload {
  readonly type: 'InventoryEntryQuantitySet'
  /**
   *	Quantity on stock for the [InventoryEntry](ctp:api:type:InventoryEntry) before the quantity was updated.
   *
   *
   */
  readonly oldQuantityOnStock: number
  /**
   *	Quantity on stock for the [InventoryEntry](ctp:api:type:InventoryEntry) after the quantity was updated.
   *
   *
   */
  readonly newQuantityOnStock: number
  /**
   *	Available quantity for the [InventoryEntry](ctp:api:type:InventoryEntry) before the quantity was updated.
   *
   *
   */
  readonly oldAvailableQuantity: number
  /**
   *	Available quantity for the [InventoryEntry](ctp:api:type:InventoryEntry) after the quantity was updated.
   *
   *
   */
  readonly newAvailableQuantity: number
  /**
   *	[Reference](ctp:api:type:Reference) to the [Channel](ctp:api:type:Channel) where the [InventoryEntry](ctp:api:type:InventoryEntry) quantity was set.
   *
   *
   */
  readonly supplyChannel?: ChannelReference
}
export type OrderMessagePayload =
  | CustomLineItemStateTransitionMessagePayload
  | DeliveryAddedMessagePayload
  | DeliveryAddressSetMessagePayload
  | DeliveryItemsUpdatedMessagePayload
  | DeliveryRemovedMessagePayload
  | LineItemStateTransitionMessagePayload
  | OrderBillingAddressSetMessagePayload
  | OrderCreatedMessagePayload
  | OrderCustomLineItemAddedMessagePayload
  | OrderCustomLineItemDiscountSetMessagePayload
  | OrderCustomLineItemQuantityChangedMessagePayload
  | OrderCustomLineItemRemovedMessagePayload
  | OrderCustomerEmailSetMessagePayload
  | OrderCustomerGroupSetMessagePayload
  | OrderCustomerSetMessagePayload
  | OrderDeletedMessagePayload
  | OrderDiscountCodeAddedMessagePayload
  | OrderDiscountCodeRemovedMessagePayload
  | OrderDiscountCodeStateSetMessagePayload
  | OrderEditAppliedMessagePayload
  | OrderImportedMessagePayload
  | OrderLineItemAddedMessagePayload
  | OrderLineItemDiscountSetMessagePayload
  | OrderLineItemDistributionChannelSetMessagePayload
  | OrderLineItemRemovedMessagePayload
  | OrderPaymentStateChangedMessagePayload
  | OrderReturnShipmentStateChangedMessagePayload
  | OrderShipmentStateChangedMessagePayload
  | OrderShippingAddressSetMessagePayload
  | OrderShippingInfoSetMessagePayload
  | OrderShippingRateInputSetMessagePayload
  | OrderStateChangedMessagePayload
  | OrderStateTransitionMessagePayload
  | OrderStoreSetMessagePayload
  | ParcelAddedToDeliveryMessagePayload
  | ParcelItemsUpdatedMessagePayload
  | ParcelMeasurementsUpdatedMessagePayload
  | ParcelRemovedFromDeliveryMessagePayload
  | ParcelTrackingDataUpdatedMessagePayload
  | ReturnInfoAddedMessagePayload
  | ReturnInfoSetMessagePayload
/**
 *	Generated after a successful [Transition Custom Line Item State](ctp:api:type:OrderTransitionCustomLineItemStateAction) update action.
 *
 */
export interface CustomLineItemStateTransitionMessagePayload {
  readonly type: 'CustomLineItemStateTransition'
  /**
   *	Unique identifier of the [Custom Line Item](ctp:api:type:CustomLineItem).
   *
   *
   */
  readonly customLineItemId: string
  /**
   *	Date and time (UTC) when the transition of the [Custom Line Item](ctp:api:type:CustomLineItem) [State](ctp:api:type:State) was performed.
   *
   *
   */
  readonly transitionDate: string
  /**
   *	Number of [Custom Line Items](ctp:api:type:CustomLineItem) for which the [State](ctp:api:type:State) was transitioned.
   *
   *
   */
  readonly quantity: number
  /**
   *	[State](ctp:api:type:State) the [Custom Line Item](ctp:api:type:CustomLineItem) was transitioned from.
   *
   *
   */
  readonly fromState: StateReference
  /**
   *	[State](ctp:api:type:State) the [Custom Line Item](ctp:api:type:CustomLineItem) was transitioned to.
   *
   *
   */
  readonly toState: StateReference
}
/**
 *	Generated after a successful [Add Delivery](ctp:api:type:OrderAddDeliveryAction) update action.
 *
 */
export interface DeliveryAddedMessagePayload {
  readonly type: 'DeliveryAdded'
  /**
   *	[Delivery](ctp:api:type:Delivery) that was added to the [Order](ctp:api:type:Order). The [Delivery](ctp:api:type:Delivery) in the Message body does not contain [Parcels](ctp:api:type:Parcel) if those were part of the initial [Add Delivery](ctp:api:type:OrderAddDeliveryAction) update action. In that case, the update action produces an additional [ParcelAddedToDelivery](ctp:api:type:ParcelAddedToDeliveryMessage) Message containing information about the [Parcels](ctp:api:type:Parcel).
   *
   *
   */
  readonly delivery: Delivery
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multi` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Set Delivery Address](ctp:api:type:OrderSetDeliveryAddressAction) update action.
 *
 */
export interface DeliveryAddressSetMessagePayload {
  readonly type: 'DeliveryAddressSet'
  /**
   *	Unique identifier of the [Parcel](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
  /**
   *	[Address](ctp:api:type:Address) after the [Set Delivery Address](ctp:api:type:OrderSetDeliveryAddressAction) update action.
   *
   *
   */
  readonly address?: Address
  /**
   *	[Address](ctp:api:type:Address) before the [Set Delivery Address](ctp:api:type:OrderSetDeliveryAddressAction) update action.
   *
   *
   */
  readonly oldAddress?: Address
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multi` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Set Delivery Items](ctp:api:type:OrderSetDeliveryItemsAction) update action.
 *
 */
export interface DeliveryItemsUpdatedMessagePayload {
  readonly type: 'DeliveryItemsUpdated'
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
  /**
   *	[Delivery Items](ctp:api:type:DeliveryItem) after the [Set Delivery Items](ctp:api:type:OrderSetDeliveryItemsAction) update action.
   *
   *
   */
  readonly items: DeliveryItem[]
  /**
   *	[Delivery Items](ctp:api:type:DeliveryItem) before the [Set Delivery Items](ctp:api:type:OrderSetDeliveryItemsAction) update action.
   *
   *
   */
  readonly oldItems: DeliveryItem[]
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multi` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Remove Delivery](ctp:api:type:OrderRemoveDeliveryAction) update action.
 *
 */
export interface DeliveryRemovedMessagePayload {
  readonly type: 'DeliveryRemoved'
  /**
   *	The [Delivery](ctp:api:type:Delivery) that was removed from the [Order](ctp:api:type:Order).
   *
   *
   */
  readonly delivery: Delivery
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multi` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Transition Line Item State](ctp:api:type:OrderTransitionLineItemStateAction) update action.
 *
 */
export interface LineItemStateTransitionMessagePayload {
  readonly type: 'LineItemStateTransition'
  /**
   *	Unique identifier of the [Line Item](ctp:api:type:LineItem).
   *
   *
   */
  readonly lineItemId: string
  /**
   *	Date and time (UTC) when the transition of the [Line Item](ctp:api:type:LineItem) [State](ctp:api:type:State) was performed.
   *
   *
   */
  readonly transitionDate: string
  /**
   *	Number of [Line Items](ctp:api:type:LineItem) for which the [State](ctp:api:type:State) was transitioned.
   *
   *
   */
  readonly quantity: number
  /**
   *	[State](ctp:api:type:State) the [Line Item](ctp:api:type:LineItem) was transitioned from.
   *
   *
   */
  readonly fromState: StateReference
  /**
   *	[State](ctp:api:type:State) the [Line Item](ctp:api:type:LineItem) was transitioned to.
   *
   *
   */
  readonly toState: StateReference
}
/**
 *	Generated after a successful [Set Billing Address](ctp:api:type:OrderSetBillingAddressAction) update action.
 *
 */
export interface OrderBillingAddressSetMessagePayload {
  readonly type: 'OrderBillingAddressSet'
  /**
   *	Billing address on the Order after the [Set Billing Address](ctp:api:type:OrderSetBillingAddressAction) update action.
   *
   *
   */
  readonly address?: Address
  /**
   *	Billing address on the Order before the [Set Billing Address](ctp:api:type:OrderSetBillingAddressAction) update action.
   *
   *
   */
  readonly oldAddress?: Address
}
/**
 *	Generated after a successful [Create Order](/../api/projects/orders#create-order) request.
 *
 */
export interface OrderCreatedMessagePayload {
  readonly type: 'OrderCreated'
  /**
   *	[Order](ctp:api:type:Order) that was created.
   *
   *
   */
  readonly order: Order
}
/**
 *	Generated after a successful [Add Custom Line Item](ctp:api:type:StagedOrderAddCustomLineItemAction) update action.
 *
 */
export interface OrderCustomLineItemAddedMessagePayload {
  readonly type: 'OrderCustomLineItemAdded'
  /**
   *	[Custom Line Item](ctp:api:type:CustomLineItem) that was added to the [Order](ctp:api:type:Order).
   *
   *
   */
  readonly customLineItem: CustomLineItem
}
/**
 *	Generated after a successful recalculation of a Discount on a [Custom Line Item](ctp:api:type:CustomLineItem).
 *
 */
export interface OrderCustomLineItemDiscountSetMessagePayload {
  readonly type: 'OrderCustomLineItemDiscountSet'
  /**
   *	Unique identifier for the [Custom Line Item](ctp:api:type:CustomLineItem).
   *
   *
   */
  readonly customLineItemId: string
  /**
   *	Array of [DiscountedLineItemPriceForQuantity](ctp:api:type:DiscountedLineItemPriceForQuantity) after the Discount recalculation.
   *
   *
   */
  readonly discountedPricePerQuantity: DiscountedLineItemPriceForQuantity[]
  /**
   *	[TaxedItemPrice](ctp:api:type:TaxedItemPrice) of the [Custom Line Item](ctp:api:type:CustomLineItem) after the Discount recalculation.
   *
   *
   */
  readonly taxedPrice?: TaxedItemPrice
}
/**
 *	Generated after a successful [Change Custom Line Item Quantity](ctp:api:type:StagedOrderChangeCustomLineItemQuantityAction) update action.
 *
 */
export interface OrderCustomLineItemQuantityChangedMessagePayload {
  readonly type: 'OrderCustomLineItemQuantityChanged'
  /**
   *	Unique identifier of the [Custom Line Item](ctp:api:type:CustomLineItem).
   *
   *
   */
  readonly customLineItemId: string
  /**
   *	[Custom Line Item](ctp:api:type:CustomLineItem) quantity after the [Change Custom Line Item Quantity](ctp:api:type:StagedOrderChangeCustomLineItemQuantityAction) update action.
   *
   *
   */
  readonly quantity: number
  /**
   *	[Custom Line Item](ctp:api:type:CustomLineItem) quantity before the [Change Custom Line Item Quantity](ctp:api:type:StagedOrderChangeCustomLineItemQuantityAction) update action.
   *
   *
   */
  readonly oldQuantity: number
}
/**
 *	Generated after a successful [Remove Custom Line Item](ctp:api:type:StagedOrderRemoveCustomLineItemAction) update action.
 *
 */
export interface OrderCustomLineItemRemovedMessagePayload {
  readonly type: 'OrderCustomLineItemRemoved'
  /**
   *	Unique identifier of the [Custom Line Item](ctp:api:type:CustomLineItem).
   *
   *
   */
  readonly customLineItemId: string
  /**
   *	[Custom Line Item](ctp:api:type:CustomLineItem) that was removed from the [Order](ctp:api:type:Order).
   *
   *
   */
  readonly customLineItem: CustomLineItem
}
/**
 *	Generated after a successful [Set Customer Email](ctp:api:type:OrderSetCustomerEmailAction) update action.
 *
 */
export interface OrderCustomerEmailSetMessagePayload {
  readonly type: 'OrderCustomerEmailSet'
  /**
   *	Email address on the [Order](ctp:api:type:Order) after the [Set Customer Email](ctp:api:type:OrderSetCustomerEmailAction) update action.
   *
   *
   */
  readonly email?: string
  /**
   *	Email address on the [Order](ctp:api:type:Order) before the [Set Customer Email](ctp:api:type:OrderSetCustomerEmailAction) update action.
   *
   *
   */
  readonly oldEmail?: string
}
/**
 *	Generated after a successful [Set Customer Group](ctp:api:type:StagedOrderSetCustomerGroupAction) update action.
 *
 */
export interface OrderCustomerGroupSetMessagePayload {
  readonly type: 'OrderCustomerGroupSet'
  /**
   *	[CustomerGroup](ctp:api:type:CustomerGroup) on the [Order](ctp:api:type:Order) after the [Set Customer Group](ctp:api:type:StagedOrderSetCustomerGroupAction) update action.
   *
   *
   */
  readonly customerGroup?: CustomerGroupReference
  /**
   *	[CustomerGroup](ctp:api:type:CustomerGroup) on the [Order](ctp:api:type:Order) before the [Set Customer Group](ctp:api:type:StagedOrderSetCustomerGroupAction) update action.
   *
   *
   */
  readonly oldCustomerGroup?: CustomerGroupReference
}
/**
 *	Generated after a successful [Set Customer Id](ctp:api:type:OrderSetCustomerIdAction) update action.
 *
 */
export interface OrderCustomerSetMessagePayload {
  readonly type: 'OrderCustomerSet'
  /**
   *	[Customer](ctp:api:type:Customer) on the [Order](ctp:api:type:Order) after the [Set Customer Id](ctp:api:type:OrderSetCustomerIdAction) update action.
   *
   *
   */
  readonly customer?: CustomerReference
  /**
   *	[CustomerGroup](ctp:api:type:CustomerGroup) on the [Order](ctp:api:type:Order) after the [Set Customer Id](ctp:api:type:OrderSetCustomerIdAction) update action.
   *
   *
   */
  readonly customerGroup?: CustomerGroupReference
  /**
   *	[Customer](ctp:api:type:Customer) on the [Order](ctp:api:type:Order) before the [Set Customer Id](ctp:api:type:OrderSetCustomerIdAction) update action.
   *
   *
   */
  readonly oldCustomer?: CustomerReference
  /**
   *	[CustomerGroup](ctp:api:type:CustomerGroup) on the [Order](ctp:api:type:Order) before the [Set Customer Id](ctp:api:type:OrderSetCustomerIdAction) update action.
   *
   *
   */
  readonly oldCustomerGroup?: CustomerGroupReference
}
/**
 *	Generated after a successful [Delete Order](/../api/projects/orders#delete-order) request.
 *
 */
export interface OrderDeletedMessagePayload {
  readonly type: 'OrderDeleted'
  /**
   *	[Order](ctp:api:type:Order) that has been deleted.
   *
   *
   */
  readonly order: Order
}
/**
 *	Generated after a successful [Add Discount Code](ctp:api:type:StagedOrderAddDiscountCodeAction) update action.
 *
 */
export interface OrderDiscountCodeAddedMessagePayload {
  readonly type: 'OrderDiscountCodeAdded'
  /**
   *	[DiscountCode](ctp:api:type:DiscountCode) that was added.
   *
   *
   */
  readonly discountCode: DiscountCodeReference
}
/**
 *	Generated after a successful [Remove Discount Code](ctp:api:type:StagedOrderRemoveDiscountCodeAction) update action.
 *
 */
export interface OrderDiscountCodeRemovedMessagePayload {
  readonly type: 'OrderDiscountCodeRemoved'
  /**
   *	[DiscountCode](ctp:api:type:DiscountCode) that was removed.
   *
   *
   */
  readonly discountCode: DiscountCodeReference
}
/**
 *	Generated after the [DiscountCodeState](ctp:api:type:DiscountCodeState) changes due to a [recalculation](/../api/projects/carts#recalculate).
 *
 */
export interface OrderDiscountCodeStateSetMessagePayload {
  readonly type: 'OrderDiscountCodeStateSet'
  /**
   *	[DiscountCode](ctp:api:type:DiscountCode) that changed due to the recalculation.
   *
   *
   */
  readonly discountCode: DiscountCodeReference
  /**
   *	[DiscountCodeState](ctp:api:type:DiscountCodeState) after the recalculation.
   *
   *
   */
  readonly state: DiscountCodeState
  /**
   *	[DiscountCodeState](ctp:api:type:DiscountCodeState) before the recalculation.
   *
   *
   */
  readonly oldState?: DiscountCodeState
}
/**
 *	Generated after a successfully applying an [OrderEdit](/../api/projects/order-edits#apply-an-orderedit).
 *
 */
export interface OrderEditAppliedMessagePayload {
  readonly type: 'OrderEditApplied'
  /**
   *	[OrderEdit](ctp:api:type:OrderEdit) that was applied.
   *
   *
   */
  readonly edit: OrderEdit
  /**
   *	Information about a successfully applied [OrderEdit](ctp:api:type:OrderEdit).
   *
   *
   */
  readonly result: OrderEditApplied
}
/**
 *	Generated after a successful [Order Import](/../api/projects/orders-import#create-an-order-by-import).
 *
 */
export interface OrderImportedMessagePayload {
  readonly type: 'OrderImported'
  /**
   *	[Order](ctp:api:type:Order) that was imported.
   *
   *
   */
  readonly order: Order
}
/**
 *	Generated after a successful [Add Line Item](ctp:api:type:StagedOrderAddLineItemAction) update action.
 *
 */
export interface OrderLineItemAddedMessagePayload {
  readonly type: 'OrderLineItemAdded'
  /**
   *	[Line Item](ctp:api:type:LineItem) that was added to the [Order](ctp:api:type:Order).
   *
   *
   */
  readonly lineItem: LineItem
  /**
   *	Quantity of [Line Items](ctp:api:type:LineItem) that were added to the [Order](ctp:api:type:Order).
   *
   *
   */
  readonly addedQuantity: number
}
/**
 *	Generated after a successful recalculation of a Discount on a [Line Item](ctp:api:type:LineItem).
 *
 */
export interface OrderLineItemDiscountSetMessagePayload {
  readonly type: 'OrderLineItemDiscountSet'
  /**
   *	Unique identifier for the [Line Item](ctp:api:type:LineItem).
   *
   *
   */
  readonly lineItemId: string
  /**
   *	Array of [DiscountedLineItemPriceForQuantity](ctp:api:type:DiscountedLineItemPriceForQuantity) after the Discount recalculation.
   *
   *
   */
  readonly discountedPricePerQuantity: DiscountedLineItemPriceForQuantity[]
  /**
   *	Total Price of the [Line Item](ctp:api:type:LineItem) after the Discount recalculation.
   *
   *
   */
  readonly totalPrice: Money
  /**
   *	[TaxedItemPrice](ctp:api:type:TaxedItemPrice) of the [Line Item](ctp:api:type:LineItem) after the Discount recalculation.
   *
   *
   */
  readonly taxedPrice?: TaxedItemPrice
  /**
   *	Taxed price of the Shipping Methods in a Cart with `Multi` [ShippingMode](ctp:api:type:ShippingMode)..
   *
   *
   */
  readonly taxedPricePortions: MethodTaxedPrice[]
}
/**
 *	Generated after a successful [Set Line Item Distribution Channel](/../api/projects/order-edits#set-lineitem-distributionchannel) update action.
 *
 */
export interface OrderLineItemDistributionChannelSetMessagePayload {
  readonly type: 'OrderLineItemDistributionChannelSet'
  /**
   *	Unique identifier of the [Line Item](ctp:api:type:LineItem).
   *
   *
   */
  readonly lineItemId: string
  /**
   *	[Distribution Channel](ctp:api:type:Channel) that was set.
   *
   *
   */
  readonly distributionChannel?: ChannelReference
}
/**
 *	Generated after a successful [Remove Line Item](ctp:api:type:StagedOrderRemoveLineItemAction) update action.
 *
 */
export interface OrderLineItemRemovedMessagePayload {
  readonly type: 'OrderLineItemRemoved'
  /**
   *	Unique identifier of the [Line Item](ctp:api:type:LineItem).
   *
   *
   */
  readonly lineItemId: string
  /**
   *	Quantity of [Line Items](ctp:api:type:LineItem) that were removed during the [Remove Line Item](ctp:api:type:StagedOrderRemoveLineItemAction) update action.
   *
   *
   */
  readonly removedQuantity: number
  /**
   *	[Line Item](ctp:api:type:LineItem) quantity after the [Remove Line Item](ctp:api:type:StagedOrderRemoveLineItemAction) update action.
   *
   *
   */
  readonly newQuantity: number
  /**
   *	[ItemStates](ctp:api:type:ItemState) after the [Remove Line Item](ctp:api:type:StagedOrderRemoveLineItemAction) update action.
   *
   *
   */
  readonly newState: ItemState[]
  /**
   *	`totalPrice` of the [Order](ctp:api:type:Order) after the [Remove Line Item](ctp:api:type:StagedOrderRemoveLineItemAction) update action.
   *
   *
   */
  readonly newTotalPrice: CentPrecisionMoney
  /**
   *	[TaxedItemPrice](ctp:api:type:TaxedItemPrice) of the [Order](ctp:api:type:Order) after the [Remove Line Item](ctp:api:type:StagedOrderRemoveLineItemAction) update action.
   *
   *
   */
  readonly newTaxedPrice?: TaxedItemPrice
  /**
   *	[Price](ctp:api:type:Price) of the [Order](ctp:api:type:Order) after the [Remove Line Item](ctp:api:type:StagedOrderRemoveLineItemAction) update action.
   *
   *
   */
  readonly newPrice?: Price
  /**
   *	[Shipping Details](ctp:api:type:ItemShippingDetails) of the [Order](ctp:api:type:Order) after the [Remove Line Item](ctp:api:type:StagedOrderRemoveLineItemAction) update action.
   *
   *
   */
  readonly newShippingDetail?: ItemShippingDetails
}
/**
 *	Generated after a successful [Add Payment](ctp:api:type:OrderAddPaymentAction) update action or when a [Payment](ctp:api:type:Payment) is added via [Order Edits](ctp:api:type:StagedOrderAddPaymentAction).
 *
 */
export interface OrderPaymentAddedMessagePayload {
  readonly type: 'OrderPaymentAdded'
  /**
   *	[Payment](ctp:api:type:Payment) that was added to the [Order](ctp:api:type:Order).
   *
   *
   */
  readonly payment: PaymentReference
}
/**
 *	Generated after a successful [Change Payment State](ctp:api:type:OrderChangePaymentStateAction) update action.
 *
 */
export interface OrderPaymentStateChangedMessagePayload {
  readonly type: 'OrderPaymentStateChanged'
  /**
   *	[PaymentState](ctp:api:type:PaymentState) after the [Change Payment State](ctp:api:type:OrderChangePaymentStateAction) update action.
   *
   *
   */
  readonly paymentState: PaymentState
  /**
   *	[PaymentState](ctp:api:type:PaymentState) before the [Change Payment State](ctp:api:type:OrderChangePaymentStateAction) update action.
   *
   *
   */
  readonly oldPaymentState?: PaymentState
}
/**
 *	Generated after a successful [Set Return Shipment State](ctp:api:type:OrderSetReturnShipmentStateAction) update action.
 *
 */
export interface OrderReturnShipmentStateChangedMessagePayload {
  readonly type: 'OrderReturnShipmentStateChanged'
  /**
   *	Unique identifier of the [ReturnItem](ctp:api:type:ReturnItem).
   *
   *
   */
  readonly returnItemId: string
  /**
   *	State of the [ReturnItem](ctp:api:type:ReturnItem) after the [Set Return Shipment State](ctp:api:type:OrderSetReturnShipmentStateAction) update action.
   *
   *
   */
  readonly returnShipmentState: ReturnShipmentState
}
/**
 *	Generated after a successful [Change Shipment State](ctp:api:type:OrderChangeShipmentStateAction) update action.
 *
 */
export interface OrderShipmentStateChangedMessagePayload {
  readonly type: 'OrderShipmentStateChanged'
  /**
   *	[ShipmentState](ctp:api:type:ShipmentState) after the [Change Shipment State](ctp:api:type:OrderChangeShipmentStateAction) update action.
   *
   *
   */
  readonly shipmentState: ShipmentState
  /**
   *	[ShipmentState](ctp:api:type:ShipmentState) before the [Change Shipment State](ctp:api:type:OrderChangeShipmentStateAction) update action.
   *
   *
   */
  readonly oldShipmentState: ShipmentState
}
/**
 *	Generated after a successful [Set Shipping Address](ctp:api:type:OrderSetShippingAddressAction) update action.
 *
 */
export interface OrderShippingAddressSetMessagePayload {
  readonly type: 'OrderShippingAddressSet'
  /**
   *	Shipping address on the Order after the [Set Shipping Address](ctp:api:type:OrderSetShippingAddressAction) update action.
   *
   *
   */
  readonly address?: Address
  /**
   *	Shipping address on the Order before the [Set Shipping Address](ctp:api:type:OrderSetShippingAddressAction) update action.
   *
   *
   */
  readonly oldAddress?: Address
}
/**
 *	Generated after a successful [Set Shipping Method](ctp:api:type:StagedOrderSetShippingMethodAction) and [Set Custom Shipping Method](ctp:api:type:StagedOrderSetCustomShippingMethodAction) update actions.
 *
 */
export interface OrderShippingInfoSetMessagePayload {
  readonly type: 'OrderShippingInfoSet'
  /**
   *	[ShippingInfo](ctp:api:type:ShippingInfo) after the [Set Shipping Method](ctp:api:type:StagedOrderSetShippingMethodAction) or [Set Custom Shipping Method](ctp:api:type:StagedOrderSetCustomShippingMethodAction) update action.
   *
   *
   */
  readonly shippingInfo?: ShippingInfo
  /**
   *	[ShippingInfo](ctp:api:type:ShippingInfo) before the [Set Shipping Method](ctp:api:type:StagedOrderSetShippingMethodAction) or [Set Custom Shipping Method](ctp:api:type:StagedOrderSetCustomShippingMethodAction) update action.
   *
   *
   */
  readonly oldShippingInfo?: ShippingInfo
}
/**
 *	Generated after a successful [Set ShippingRateInput](ctp:api:type:StagedOrderSetShippingRateInputAction) update action.
 *
 */
export interface OrderShippingRateInputSetMessagePayload {
  readonly type: 'OrderShippingRateInputSet'
  /**
   *	[ShippingRateInput](ctp:api:type:ShippingRateInput) after the [Set ShippingRateInput](ctp:api:type:StagedOrderSetShippingRateInputAction) update action.
   *
   *
   */
  readonly shippingRateInput?: ShippingRateInput
  /**
   *	[ShippingRateInput](ctp:api:type:ShippingRateInput) before the [Set ShippingRateInput](ctp:api:type:StagedOrderSetShippingRateInputAction) update action.
   *
   *
   */
  readonly oldShippingRateInput?: ShippingRateInput
}
/**
 *	Generated after a successful [Change Order State](ctp:api:type:OrderChangeOrderStateAction) update action.
 *
 */
export interface OrderStateChangedMessagePayload {
  readonly type: 'OrderStateChanged'
  /**
   *	[OrderState](ctp:api:type:OrderState) after the [Change Order State](ctp:api:type:OrderChangeOrderStateAction) update action.
   *
   *
   */
  readonly orderState: OrderState
  /**
   *	[OrderState](ctp:api:type:OrderState) before the [Change Order State](ctp:api:type:OrderChangeOrderStateAction) update action.
   *
   *
   */
  readonly oldOrderState: OrderState
}
/**
 *	Generated after a successful [Transition State](ctp:api:type:OrderTransitionStateAction) update action.
 *
 */
export interface OrderStateTransitionMessagePayload {
  readonly type: 'OrderStateTransition'
  /**
   *	[OrderState](ctp:api:type:OrderState) after the [Transition State](ctp:api:type:OrderTransitionStateAction) update action.
   *
   *
   */
  readonly state: StateReference
  /**
   *	[OrderState](ctp:api:type:OrderState) before the [Transition State](ctp:api:type:OrderTransitionStateAction) update action.
   *
   *
   */
  readonly oldState?: StateReference
  /**
   *	Whether [State](ctp:api:type:State) transition validations were turned off during the [Transition State](ctp:api:type:OrderTransitionStateAction) update action.
   *
   *
   */
  readonly force: boolean
}
/**
 *	Generated after a successful [Set Store](ctp:api:type:OrderSetStoreAction) update action.
 *
 */
export interface OrderStoreSetMessagePayload {
  readonly type: 'OrderStoreSet'
  /**
   *	[Store](ctp:api:type:Store) that was set.
   *
   *
   */
  readonly store?: StoreKeyReference
}
/**
 *	Generated after a successful [Add Parcel To Delivery](ctp:api:type:OrderAddParcelToDeliveryAction) update action.
 *
 */
export interface ParcelAddedToDeliveryMessagePayload {
  readonly type: 'ParcelAddedToDelivery'
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly delivery: Delivery
  /**
   *	[Parcel](ctp:api:type:Parcel) that was added to the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly parcel: Parcel
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multi` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Set Parcel Items](ctp:api:type:OrderSetParcelItemsAction) update action.
 *
 */
export interface ParcelItemsUpdatedMessagePayload {
  readonly type: 'ParcelItemsUpdated'
  /**
   *	Unique identifier of the [Parcel](ctp:api:type:Parcel).
   *
   *
   */
  readonly parcelId: string
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
  /**
   *	[Delivery Items](ctp:api:type:DeliveryItem) after the [Set Parcel Items](ctp:api:type:OrderSetParcelItemsAction) update action.
   *
   *
   */
  readonly items: DeliveryItem[]
  /**
   *	[Delivery Items](ctp:api:type:DeliveryItem) before the [Set Parcel Items](ctp:api:type:OrderSetParcelItemsAction) update action.
   *
   *
   */
  readonly oldItems: DeliveryItem[]
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multi` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Set Parcel Measurements](ctp:api:type:OrderSetParcelMeasurementsAction) update action.
 *
 */
export interface ParcelMeasurementsUpdatedMessagePayload {
  readonly type: 'ParcelMeasurementsUpdated'
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
  /**
   *	Unique identifier of the [Parcel](ctp:api:type:Parcel).
   *
   *
   */
  readonly parcelId: string
  /**
   *	The [Parcel Measurements](ctp:api:type:ParcelMeasurements) that were set on the [Parcel](ctp:api:type:Parcel).
   *
   *
   */
  readonly measurements?: ParcelMeasurements
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multi` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Remove Parcel From Delivery](ctp:api:type:OrderRemoveParcelFromDeliveryAction) update action.
 *
 */
export interface ParcelRemovedFromDeliveryMessagePayload {
  readonly type: 'ParcelRemovedFromDelivery'
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
  /**
   *	[Parcel](ctp:api:type:Parcel) that was removed from the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly parcel: Parcel
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multi` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Set Parcel TrackingData](ctp:api:type:OrderSetParcelTrackingDataAction) update action.
 *
 */
export interface ParcelTrackingDataUpdatedMessagePayload {
  readonly type: 'ParcelTrackingDataUpdated'
  /**
   *	Unique identifier of the [Delivery](ctp:api:type:Delivery).
   *
   *
   */
  readonly deliveryId: string
  /**
   *	Unique identifier of the [Parcel](ctp:api:type:Parcel).
   *
   *
   */
  readonly parcelId: string
  /**
   *	The [Tracking Data](ctp:api:type:TrackingData) that was added to the [Parcel](ctp:api:type:Parcel).
   *
   *
   */
  readonly trackingData?: TrackingData
  /**
   *	User-defined unique identifier of the Shipping Method in a Cart with `Multi` [ShippingMode](ctp:api:type:ShippingMode).
   *
   *
   */
  readonly shippingKey?: string
}
/**
 *	Generated after a successful [Create Payment](/../api/projects/payments#create-a-payment) request.
 *
 */
export interface PaymentCreatedMessagePayload {
  readonly type: 'PaymentCreated'
  /**
   *	[Payment](ctp:api:type:Payment) that was created.
   *
   *
   */
  readonly payment: Payment
}
/**
 *	Generated after a successful [Add InterfaceInteraction](ctp:api:type:PaymentAddInterfaceInteractionAction) update action.
 *
 */
export interface PaymentInteractionAddedMessagePayload {
  readonly type: 'PaymentInteractionAdded'
  /**
   *	The interface interaction that was added to the [Payment](ctp:api:type:Payment).
   *
   *
   */
  readonly interaction: CustomFields
}
/**
 *	Generated after a successful [Set StatusInterfaceCode](ctp:api:type:PaymentSetStatusInterfaceCodeAction) update action.
 *
 */
export interface PaymentStatusInterfaceCodeSetMessagePayload {
  readonly type: 'PaymentStatusInterfaceCodeSet'
  /**
   *	Unique identifier for the [Payment](ctp:api:type:Payment) for which the [Set StatusInterfaceCode](ctp:api:type:PaymentSetStatusInterfaceCodeAction) update action was applied.
   *
   *	@deprecated
   */
  readonly paymentId: string
  /**
   *	The `interfaceCode` that was set during the [Set StatusInterfaceCode](ctp:api:type:PaymentSetStatusInterfaceCodeAction) update action.
   *
   *
   */
  readonly interfaceCode?: string
}
/**
 *	Generated after a successful [Transition State](ctp:api:type:PaymentTransitionStateAction) update action.
 *
 */
export interface PaymentStatusStateTransitionMessagePayload {
  readonly type: 'PaymentStatusStateTransition'
  /**
   *	[State](ctp:api:type:State) of the [Payment](ctp:api:type:Payment) after the [Transition State](ctp:api:type:PaymentTransitionStateAction) update action.
   *
   *
   */
  readonly state: StateReference
  /**
   *	Whether [State](ctp:api:type:State) transition validations were turned off during the [Change Transaction State](ctp:api:type:PaymentChangeTransactionStateAction) update action.
   *
   *
   */
  readonly force: boolean
}
/**
 *	Generated after a successful [Add Transaction](ctp:api:type:PaymentAddTransactionAction) update action.
 *
 */
export interface PaymentTransactionAddedMessagePayload {
  readonly type: 'PaymentTransactionAdded'
  /**
   *	[Transaction](ctp:api:type:Transaction) that was added to the [Payment](ctp:api:type:Payment).
   *
   *
   */
  readonly transaction: Transaction
}
/**
 *	Generated after a successful [Change Transaction State](ctp:api:type:PaymentChangeTransactionStateAction) update action.
 *
 */
export interface PaymentTransactionStateChangedMessagePayload {
  readonly type: 'PaymentTransactionStateChanged'
  /**
   *	Unique identifier for the [Transaction](ctp:api:type:Transaction) for which the [Transaction State](ctp:api:type:TransactionState) changed.
   *
   *
   */
  readonly transactionId: string
  /**
   *	[Transaction State](ctp:api:type:TransactionState) after the [Change Transaction State](ctp:api:type:PaymentChangeTransactionStateAction) update action.
   *
   *
   */
  readonly state: TransactionState
}
/**
 *	Generated after a successful [Add To Category](ctp:api:type:ProductAddToCategoryAction) update action.
 *
 */
export interface ProductAddedToCategoryMessagePayload {
  readonly type: 'ProductAddedToCategory'
  /**
   *	[Category](ctp:api:type:Category) the [Product](ctp:api:type:Product) was added to.
   *
   *
   */
  readonly category: CategoryReference
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Create Product](/../api/projects/products#create-product) request.
 *
 */
export interface ProductCreatedMessagePayload {
  readonly type: 'ProductCreated'
  /**
   *	The staged [Product Projection](ctp:api:type:ProductProjection) of the [Product](ctp:api:type:Product) at the time of creation.
   *
   *
   */
  readonly productProjection: ProductProjection
}
/**
 *	Generated after a successful [Delete Product](/../api/projects/products#delete-product) request.
 *
 */
export interface ProductDeletedMessagePayload {
  readonly type: 'ProductDeleted'
  /**
   *	List of image URLs that were removed during the [Delete Product](ctp:api:type:Product) request.
   *
   *
   */
  readonly removedImageUrls: string[]
  /**
   *	Current [Product Projection](ctp:api:type:ProductProjection) of the deleted [Product](ctp:api:type:Product).
   *
   *
   */
  readonly currentProjection?: ProductProjection
}
/**
 *	Generated after a successful [Add External Image](ctp:api:type:ProductAddExternalImageAction) update action or after the successful [upload of an image](/../api/projects/products#upload-product-image).
 *
 */
export interface ProductImageAddedMessagePayload {
  readonly type: 'ProductImageAdded'
  /**
   *	Unique identifier of the [Product Variant](ctp:api:type:ProductVariant) to which the [Image](ctp:api:type:Image) was added.
   *
   *
   */
  readonly variantId: number
  /**
   *	[Image](ctp:api:type:Image) that was added.
   *
   *
   */
  readonly image: Image
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a Price is updated due to a [Product Discount](ctp:api:type:ProductDiscount).
 *
 */
export interface ProductPriceDiscountsSetMessagePayload {
  readonly type: 'ProductPriceDiscountsSet'
  /**
   *	Array containing details about the [Embedded Prices](ctp:api:type:Price) that were updated.
   *
   *
   */
  readonly updatedPrices: ProductPriceDiscountsSetUpdatedPrice[]
}
/**
 *	Generated after a successful [Set Discounted Embedded Price](ctp:api:type:ProductSetDiscountedPriceAction) update action.
 *
 */
export interface ProductPriceExternalDiscountSetMessagePayload {
  readonly type: 'ProductPriceExternalDiscountSet'
  /**
   *	Unique identifier of the [Product Variant](ctp:api:type:ProductVariant) for which the Discount was set.
   *
   *
   */
  readonly variantId: number
  /**
   *	Key of the [Product Variant](ctp:api:type:ProductVariant) for which the Discount was set.
   *
   *
   */
  readonly variantKey?: string
  /**
   *	SKU of the [Product Variant](ctp:api:type:ProductVariant) for which Discount was set.
   *
   *
   */
  readonly sku?: string
  /**
   *	Unique identifier of the [Embedded Price](ctp:api:type:Price).
   *
   *
   */
  readonly priceId: string
  /**
   *	Discounted Price for the [Product Variant](ctp:api:type:ProductVariant) for which Discount was set.
   *
   *
   */
  readonly discounted?: DiscountedPrice
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Publish](ctp:api:type:ProductPublishAction) update action.
 *
 */
export interface ProductPublishedMessagePayload {
  readonly type: 'ProductPublished'
  /**
   *	List of image URLs which were removed during the [Publish](ctp:api:type:ProductPublishAction) update action.
   *
   *
   */
  readonly removedImageUrls: string[]
  /**
   *	Current [Product Projection](ctp:api:type:ProductProjection) of the [Product](ctp:api:type:Product) at the time of creation.
   *
   *
   */
  readonly productProjection: ProductProjection
  /**
   *	[Publishing Scope](ctp:api:type:ProductPublishScope) that was used during the [Publish](ctp:api:type:ProductPublishAction) update action.
   *
   *
   */
  readonly scope: ProductPublishScope
}
/**
 *	Generated after a successful [Remove From Category](ctp:api:type:ProductRemoveFromCategoryAction) update action.
 *
 */
export interface ProductRemovedFromCategoryMessagePayload {
  readonly type: 'ProductRemovedFromCategory'
  /**
   *	[Category](ctp:api:type:Category) the [Product](ctp:api:type:Product) was removed from.
   *
   *
   */
  readonly category: CategoryReference
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Revert Staged Changes](ctp:api:type:ProductRevertStagedChangesAction) update action.
 *
 */
export interface ProductRevertedStagedChangesMessagePayload {
  readonly type: 'ProductRevertedStagedChanges'
  /**
   *	List of image URLs that were removed during the [Revert Staged Changes](ctp:api:type:ProductRevertStagedChangesAction) update action.
   *
   *
   */
  readonly removedImageUrls: string[]
}
/**
 *	Generated after a successful [Create Product Selection](/../api/projects/product-selections#create-product-selection) request.
 *
 */
export interface ProductSelectionCreatedMessagePayload {
  readonly type: 'ProductSelectionCreated'
  /**
   *	The `type` and `name` of the individual Product Selection.
   *
   *
   */
  readonly productSelection: IndividualProductSelectionType
}
/**
 *	Generated after a successful [Delete Product Selection](/../api/projects/product-selections#create-product-selection) request.
 *
 */
export interface ProductSelectionDeletedMessagePayload {
  readonly type: 'ProductSelectionDeleted'
}
/**
 *	Generated after a successful [Add Product](ctp:api:type:ProductSelectionAddProductAction) update action.
 *
 */
export interface ProductSelectionProductAddedMessagePayload {
  readonly type: 'ProductSelectionProductAdded'
  /**
   *	[Product](ctp:api:type:Product) that was added to the [Product Selection](ctp:api:type:ProductSelection).
   *
   *
   */
  readonly product: ProductReference
  /**
   *	Product Variant Selection after the [Add Product](ctp:api:type:ProductSelectionAddProductAction) update action.
   *
   *
   */
  readonly variantSelection: ProductVariantSelection
}
/**
 *	Generated after a successful [Remove Product](ctp:api:type:ProductSelectionRemoveProductAction) update action.
 *
 */
export interface ProductSelectionProductRemovedMessagePayload {
  readonly type: 'ProductSelectionProductRemoved'
  /**
   *	[Product](ctp:api:type:Product) that was removed from the Product Selection.
   *
   *
   */
  readonly product: ProductReference
}
/**
 *	Generated after a successful [Set Variant Selection](ctp:api:type:ProductSelectionSetVariantSelectionAction) update action.
 *
 */
export interface ProductSelectionVariantSelectionChangedMessagePayload {
  readonly type: 'ProductSelectionVariantSelectionChanged'
  /**
   *	[Product](ctp:api:type:Product) for which the Product Variant Selection changed.
   *
   *
   */
  readonly product: ProductReference
  /**
   *	Product Variant Selection before the [Set Variant Selection](ctp:api:type:ProductSelectionSetVariantSelectionAction) update action.
   *
   */
  readonly oldVariantSelection: ProductVariantSelection
  /**
   *	Product Variant Selection after the [Set Variant Selection](ctp:api:type:ProductSelectionSetVariantSelectionAction) update action.
   *
   */
  readonly newVariantSelection: ProductVariantSelection
}
/**
 *	Generated after a successful [Change Slug](ctp:api:type:ProductChangeSlugAction) update action.
 *
 */
export interface ProductSlugChangedMessagePayload {
  readonly type: 'ProductSlugChanged'
  /**
   *	The slug of the [Product](ctp:api:type:Product) after the [Change Slug](ctp:api:type:ProductChangeSlugAction) update action.
   *
   *
   */
  readonly slug: LocalizedString
  /**
   *	The slug of the [Product](ctp:api:type:Product) before the [Change Slug](ctp:api:type:ProductChangeSlugAction) update action.
   *
   *
   */
  readonly oldSlug?: LocalizedString
}
/**
 *	Generated after a successful [Transition State](ctp:api:type:ProductTransitionStateAction) update action.
 *
 */
export interface ProductStateTransitionMessagePayload {
  readonly type: 'ProductStateTransition'
  /**
   *	Product [State](ctp:api:type:State) after the [Transition State](ctp:api:type:ProductTransitionStateAction) update action.
   *
   */
  readonly state: StateReference
  /**
   *	Whether [State](ctp:api:type:State) transition validations were turned off during the [Transition State](ctp:api:type:ProductTransitionStateAction) update action.
   *
   *
   */
  readonly force: boolean
}
/**
 *	Generated after a successful [Unpublish Product](ctp:api:type:ProductUnpublishAction) update action.
 *
 */
export interface ProductUnpublishedMessagePayload {
  readonly type: 'ProductUnpublished'
}
/**
 *	Generated after a successful [Add Product Variant](ctp:api:type:ProductAddVariantAction) update action.
 *
 */
export interface ProductVariantAddedMessagePayload {
  readonly type: 'ProductVariantAdded'
  /**
   *	Unique identifier of the [Product Variant](ctp:api:type:ProductVariant) that was added.
   *
   *
   */
  readonly variant: ProductVariant
  /**
   *	Whether the update was only applied to the staged [Product Projection](ctp:api:type:ProductProjection).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Remove Product Variant](ctp:api:type:ProductRemoveVariantAction) update action.
 *
 */
export interface ProductVariantDeletedMessagePayload {
  readonly type: 'ProductVariantDeleted'
  /**
   *	Unique identifier of the [Product Variant](ctp:api:type:ProductVariant) that was added.
   *
   *
   */
  readonly variant?: ProductVariant
  /**
   *	List of image URLs that were removed with the [Remove Product Variant](ctp:api:type:ProductRemoveVariantAction) update action.
   *
   *
   */
  readonly removedImageUrls: string[]
}
/**
 *	Generated after a successful [Create Quote](/../api/projects/quotes#create-quote) request.
 *
 */
export interface QuoteCreatedMessagePayload {
  readonly type: 'QuoteCreated'
  /**
   *	[Quote](/../api/projects/quotes) that was created.
   *
   *
   */
  readonly quote: Quote
}
/**
 *	Generated after a successful [Delete Quote](/../api/projects/quotes#delete-quote) request.
 *
 */
export interface QuoteDeletedMessagePayload {
  readonly type: 'QuoteDeleted'
}
/**
 *	Generated after a successful [Create Quote Request](/../api/projects/quote-requests#create-quoterequest) request.
 *
 */
export interface QuoteRequestCreatedMessagePayload {
  readonly type: 'QuoteRequestCreated'
  /**
   *	[Quote Request](/../api/projects/quote-requests) that was created.
   *
   *
   */
  readonly quoteRequest: QuoteRequest
}
/**
 *	Generated after a successful [Delete Quote Request](/../api/projects/quote-requests#delete-quoterequest) request.
 *
 */
export interface QuoteRequestDeletedMessagePayload {
  readonly type: 'QuoteRequestDeleted'
}
/**
 *	Generated after a successful [Change Quote Request State](ctp:api:type:QuoteRequestChangeQuoteRequestStateAction) update action.
 *
 */
export interface QuoteRequestStateChangedMessagePayload {
  readonly type: 'QuoteRequestStateChanged'
  /**
   *	State of the Quote Request after the [Change Quote Request State](ctp:api:type:QuoteRequestChangeQuoteRequestStateAction) update action.
   *
   *
   */
  readonly quoteRequestState: QuoteRequestState
  /**
   *	State of the Quote Request before the [Change Quote Request State](ctp:api:type:QuoteRequestChangeQuoteRequestStateAction) update action.
   *
   *
   */
  readonly oldQuoteRequestState: QuoteRequestState
}
/**
 *	Generated after a successful [Transition State](ctp:api:type:QuoteRequestTransitionStateAction) update action.
 *
 */
export interface QuoteRequestStateTransitionMessagePayload {
  readonly type: 'QuoteRequestStateTransition'
  /**
   *	[State](ctp:api:type:State) of the [Quote](ctp:api:type:Quote) after the [Transition State](ctp:api:type:QuoteRequestTransitionStateAction) update action.
   *
   *
   */
  readonly state: StateReference
  /**
   *	[State](ctp:api:type:State) of the [Quote](ctp:api:type:Quote) before the [Transition State](ctp:api:type:QuoteRequestTransitionStateAction) update action.
   *
   *
   */
  readonly oldState?: StateReference
  /**
   *	Whether [State](ctp:api:type:State) transition validations were turned off during the [Transition State](ctp:api:type:QuoteRequestTransitionStateAction) update action.
   *
   *
   */
  readonly force: boolean
}
/**
 *	Generated after a successful [Change Quote State](ctp:api:type:QuoteChangeQuoteStateAction) update action.
 *
 */
export interface QuoteStateChangedMessagePayload {
  readonly type: 'QuoteStateChanged'
  /**
   *	State of the Quote after the [Change Quote State](ctp:api:type:QuoteChangeQuoteStateAction) update action.
   *
   *
   */
  readonly quoteState: QuoteState
  /**
   *	State of the Quote before the [Change Quote State](ctp:api:type:QuoteChangeQuoteStateAction) update action.
   *
   *
   */
  readonly oldQuoteState: QuoteState
}
/**
 *	Generated after a successful [Transition State](ctp:api:type:QuoteTransitionStateAction) update action.
 *
 */
export interface QuoteStateTransitionMessagePayload {
  readonly type: 'QuoteStateTransition'
  /**
   *	[State](ctp:api:type:State) of the [Quote](ctp:api:type:Quote) after the [Transition State](ctp:api:type:QuoteTransitionStateAction) update action.
   *
   *
   */
  readonly state: StateReference
  /**
   *	[State](ctp:api:type:State) of the [Quote](ctp:api:type:Quote) before the [Transition State](ctp:api:type:QuoteTransitionStateAction) update action.
   *
   *
   */
  readonly oldState?: StateReference
  /**
   *	Whether [State](ctp:api:type:State) transition validations were turned off during the [Transition State](ctp:api:type:QuoteTransitionStateAction) update action.
   *
   *
   */
  readonly force: boolean
}
/**
 *	Generated after a successful [Add Return Info](ctp:api:type:OrderAddReturnInfoAction) update action.
 *
 */
export interface ReturnInfoAddedMessagePayload {
  readonly type: 'ReturnInfoAdded'
  /**
   *	The [ReturnInfo](ctp:api:type:ReturnInfo) that was added to the [Order](ctp:api:type:Order).
   *
   *
   */
  readonly returnInfo: ReturnInfo
}
/**
 *	Generated after a successful [Set Return Info](ctp:api:type:OrderSetReturnInfoAction) update action on [Orders](ctp:api:type:Order) and [Order Edits](ctp:api:type:OrderEdit).
 *
 */
export interface ReturnInfoSetMessagePayload {
  readonly type: 'ReturnInfoSet'
  /**
   *	The [ReturnInfo](ctp:api:type:ReturnInfo) that was set on the [Order](ctp:api:type:Order) or [Order Edit](ctp:api:type:OrderEdit).
   *
   *
   */
  readonly returnInfo?: ReturnInfo[]
}
/**
 *	Generated after a successful [Create Review](/../api/projects/reviews#create-a-review) request.
 *
 */
export interface ReviewCreatedMessagePayload {
  readonly type: 'ReviewCreated'
  /**
   *	[Review](ctp:api:type:Review) that was created.
   *
   *
   */
  readonly review: Review
}
/**
 *	Generated after a successful [Set Rating](ctp:api:type:ReviewSetRatingAction) update action.
 *
 */
export interface ReviewRatingSetMessagePayload {
  readonly type: 'ReviewRatingSet'
  /**
   *	The `rating` of the [Review](ctp:api:type:Review) before the [Set Rating](ctp:api:type:ReviewSetRatingAction) update action.
   *
   *
   */
  readonly oldRating?: number
  /**
   *	The `rating` of the [Review](ctp:api:type:Review) after the [Set Rating](ctp:api:type:ReviewSetRatingAction) update action.
   *
   *
   */
  readonly newRating?: number
  /**
   *	Whether the [Review](ctp:api:type:Review) was taken into account in the ratings statistics of the target.
   *
   *
   */
  readonly includedInStatistics: boolean
  /**
   *	[Reference](ctp:api:type:Reference) to the resource that the [Review](ctp:api:type:Review) belongs to.
   *
   *
   */
  readonly target?: Reference
}
/**
 *	Generated after a successful [Transition State](ctp:api:type:ReviewTransitionStateAction) update action.
 *
 */
export interface ReviewStateTransitionMessagePayload {
  readonly type: 'ReviewStateTransition'
  /**
   *	[State](ctp:api:type:State) of the [Review](ctp:api:type:Review) before the [Transition State](ctp:api:type:ReviewTransitionStateAction) update action.
   *
   *
   */
  readonly oldState?: StateReference
  /**
   *	[State](ctp:api:type:State) of the [Review](ctp:api:type:Review) after the [Transition State](ctp:api:type:ReviewTransitionStateAction) update action.
   *
   *
   */
  readonly newState: StateReference
  /**
   *	Whether the old [Review](ctp:api:type:Review) was taken into account in the rating statistics of the target before the state transition.
   *
   *
   */
  readonly oldIncludedInStatistics: boolean
  /**
   *	Whether the new [Review](ctp:api:type:Review) was taken into account in the rating statistics of the target after the state transition.
   *
   *
   */
  readonly newIncludedInStatistics: boolean
  /**
   *	[Reference](ctp:api:type:Reference) to the resource that the [Review](ctp:api:type:Review) belongs to.
   *
   *
   */
  readonly target?: Reference
  /**
   *	Whether [State](ctp:api:type:State) transition validations were turned off during the [Transition State](ctp:api:type:ReviewTransitionStateAction) update action.
   *
   *
   */
  readonly force: boolean
}
export interface ShoppingListStoreSetMessagePayload {
  readonly type: 'ShoppingListStoreSet'
  /**
   *	[Reference](/../api/types#reference) to a [Store](ctp:api:type:Store) by its key.
   *
   *
   */
  readonly store: StoreKeyReference
}
/**
 *	Generated after a successful [Create Staged Quote](/../api/projects/staged-quotes#create-stagedquote) request.
 *
 */
export interface StagedQuoteCreatedMessagePayload {
  readonly type: 'StagedQuoteCreated'
  /**
   *	[Staged Quote](/../api/projects/staged-quotes) that was created.
   *
   *
   */
  readonly stagedQuote: StagedQuote
}
/**
 *	Generated after a successful [Delete Staged Quote](/../api/projects/staged-quotes#delete-stagedquote) request.
 *
 */
export interface StagedQuoteDeletedMessagePayload {
  readonly type: 'StagedQuoteDeleted'
}
/**
 *	Generated after a successful [Set Seller Comment](ctp:api:type:StagedQuoteSetSellerCommentAction) update action.
 *
 */
export interface StagedQuoteSellerCommentSetMessagePayload {
  readonly type: 'StagedQuoteSellerCommentSet'
  /**
   *	`sellerComment` on the [StagedQuote](ctp:api:type:StagedQuote) after a successful [Set Seller Comment](ctp:api:type:StagedQuoteSetSellerCommentAction) update action.
   *
   *
   */
  readonly sellerComment: string
}
/**
 *	Generated after a successful [Change Staged Quote State](ctp:api:type:StagedQuoteChangeStagedQuoteStateAction) update action.
 *
 */
export interface StagedQuoteStateChangedMessagePayload {
  readonly type: 'StagedQuoteStateChanged'
  /**
   *	State of the Staged Quote after the [Change Staged Quote State](ctp:api:type:StagedQuoteChangeStagedQuoteStateAction) update action.
   *
   *
   */
  readonly stagedQuoteState: StagedQuoteState
  /**
   *	State of the Staged Quote before the [Change Staged Quote State](ctp:api:type:StagedQuoteChangeStagedQuoteStateAction) update action.
   *
   *
   */
  readonly oldStagedQuoteState: StagedQuoteState
}
/**
 *	Generated after a successful [Transition State](ctp:api:type:StagedQuoteTransitionStateAction) update action.
 *
 */
export interface StagedQuoteStateTransitionMessagePayload {
  readonly type: 'StagedQuoteStateTransition'
  /**
   *	[State](ctp:api:type:State) of the [Quote](ctp:api:type:Quote) after the [Transition State](ctp:api:type:StagedQuoteTransitionStateAction) update action.
   *
   *
   */
  readonly state: StateReference
  /**
   *	[State](ctp:api:type:State) of the [Quote](ctp:api:type:Quote) before the [Transition State](ctp:api:type:StagedQuoteTransitionStateAction) update action.
   *
   *
   */
  readonly oldState?: StateReference
  /**
   *	Whether [State](ctp:api:type:State) transition validations were turned off during the [Transition State](ctp:api:type:StagedQuoteTransitionStateAction) update action.
   *
   *
   */
  readonly force: boolean
}
/**
 *	Generated after a successful [Set Valid To](ctp:api:type:StagedQuoteSetValidToAction) update action.
 *
 */
export interface StagedQuoteValidToSetMessagePayload {
  readonly type: 'StagedQuoteValidToSet'
  /**
   *	Expiration date for the Staged Quote after the [Set Valid To](ctp:api:type:StagedQuoteSetValidToAction) update action.
   *
   *
   */
  readonly validTo: string
}
/**
 *	Generated after a successful [Change Active](ctp:api:types:StandalonePriceChangeActiveAction) update action.
 *
 */
export interface StandalonePriceActiveChangedMessagePayload {
  readonly type: 'StandalonePriceActiveChanged'
  /**
   *	Value of the `active` field of the StandalonePrice after the [Change Active](ctp:api:types:StandalonePriceChangeActiveAction) update action.
   *
   *
   */
  readonly active: boolean
  /**
   *	Value of the `active` field of the StandalonePrice before the [Change Active](ctp:api:types:StandalonePriceChangeActiveAction) update action.
   *
   *
   */
  readonly oldActive: boolean
}
/**
 *	Generated after a successful [Create StandalonePrice](/../api/projects/standalone-prices#create-standaloneprice) request.
 *
 */
export interface StandalonePriceCreatedMessagePayload {
  readonly type: 'StandalonePriceCreated'
  /**
   *	[Standalone Price](ctp:api:type:StandalonePrice) that was created.
   *
   *
   */
  readonly standalonePrice: StandalonePrice
}
/**
 *	Generated after a successful [Delete StandalonePrice](/../api/projects/standalone-prices#delete-standaloneprice) request.
 *
 */
export interface StandalonePriceDeletedMessagePayload {
  readonly type: 'StandalonePriceDeleted'
}
/**
 *	Generated after a [Product Discount](ctp:api:type:ProductDiscount) is successfully applied to a StandalonePrice.
 *
 */
export interface StandalonePriceDiscountSetMessagePayload {
  readonly type: 'StandalonePriceDiscountSet'
  /**
   *	The new `discounted` value of the updated [StandalonePrice](ctp:api:type:StandalonePrice).
   *
   *
   */
  readonly discounted?: DiscountedPrice
}
/**
 *	Generated after a successful [Set Discounted Price](ctp:api:type:StandalonePriceSetDiscountedPriceAction) update action.
 *
 */
export interface StandalonePriceExternalDiscountSetMessagePayload {
  readonly type: 'StandalonePriceExternalDiscountSet'
  /**
   *	The `discounted` value of the [StandalonePrice](ctp:api:type:StandalonePrice) after the [Set Discounted Price](ctp:api:type:StandalonePriceSetDiscountedPriceAction) update action.
   *
   *
   */
  readonly discounted?: DiscountedPrice
}
/**
 *	Generated after a successful [Apply Staged Changes](ctp:api:types:StandalonePriceApplyStagedChangesAction) update action.
 *
 */
export interface StandalonePriceStagedChangesAppliedMessagePayload {
  readonly type: 'StandalonePriceStagedChangesApplied'
  /**
   *	Applied changes of the [StandalonePrice](/../api/projects/standalone-prices) after the [Apply Staged Changes](ctp:api:types:StandalonePriceApplyStagedChangesAction) update action.
   *
   *
   */
  readonly stagedChanges: StagedStandalonePrice
}
/**
 *	Generated after a successful [Change Value](ctp:api:type:StandalonePriceChangeValueAction) update action.
 *
 */
export interface StandalonePriceValueChangedMessagePayload {
  readonly type: 'StandalonePriceValueChanged'
  /**
   *	The new value of the updated [StandalonePrice](ctp:api:type:StandalonePrice).
   *
   *
   */
  readonly value: Money
  /**
   *	Whether the new value was applied to the current or the staged representation of the StandalonePrice. Staged changes are stored on the [StagedStandalonePrice](ctp:api:type:StagedStandalonePrice).
   *
   *
   */
  readonly staged: boolean
}
/**
 *	Generated after a successful [Create Store](/../api/projects/stores#create-store) request.
 *
 */
export interface StoreCreatedMessagePayload {
  readonly type: 'StoreCreated'
  /**
   *	The `name` of the [Store](ctp:api:type:Store) that was created.
   *
   *
   */
  readonly name?: LocalizedString
  /**
   *	Languages of the [Store](ctp:api:type:Store) that was created. Languages are represented as [IETF language tags](https://en.wikipedia.org/wiki/IETF_language_tag).
   *
   *
   */
  readonly languages?: string[]
  /**
   *	[Distribution Channels](ctp:api:type:ChannelRoleEnum) of the [Store](ctp:api:type:Store) that was created.
   *
   *
   */
  readonly distributionChannels: ChannelReference[]
  /**
   *	[Supply Channels](ctp:api:type:ChannelRoleEnum) of the [Store](ctp:api:type:Store) that was created.
   *
   *
   */
  readonly supplyChannels: ChannelReference[]
  /**
   *	[ProductSelectionSettings](ctp:api:type:ProductSelectionSetting) of the [Store](ctp:api:type:Store) that was created.
   *
   *
   */
  readonly productSelections: ProductSelectionSetting[]
  /**
   *	[Custom Fields](ctp:api:type:CustomFields) on the [Store](ctp:api:type:Store) that was created.
   *
   *
   */
  readonly custom?: CustomFields
}
/**
 *	Generated after a successful [Delete Store](/../api/projects/quote-requests#delete-quoterequest) request.
 *
 */
export interface StoreDeletedMessagePayload {
  readonly type: 'StoreDeleted'
}
/**
 *	Generated after a successful [Add Distribution Channel](ctp:api:type:StoreAddDistributionChannelAction),
 *	[Remove Distribution Channel](ctp:api:type:StoreRemoveDistributionChannelAction), or
 *	[Set Distribution Channels](ctp:api:type:StoreSetDistributionChannelsAction) update action.
 *
 */
export interface StoreDistributionChannelsChangedMessagePayload {
  readonly type: 'StoreDistributionChannelsChanged'
  /**
   *	Product distribution Channels that have been added to the [Store](ctp:api:type:Store).
   *
   */
  readonly addedDistributionChannels?: ChannelReference[]
  /**
   *	Product distribution Channels that have been removed from the [Store](ctp:api:type:Store).
   *
   *
   */
  readonly removedDistributionChannels?: ChannelReference[]
}
/**
 *	Generated after a successful [Set Languages](ctp:api:type:StoreSetLanguagesAction) update action.
 *
 */
export interface StoreLanguagesChangedMessagePayload {
  readonly type: 'StoreLanguagesChanged'
  /**
   *	[Locales](ctp:api:type:Locale) added to the [Store](ctp:api:type:Store) after the [Set Languages](ctp:api:type:StoreSetLanguagesAction) update action.
   *
   *
   */
  readonly addedLanguages?: string[]
  /**
   *	[Locales](ctp:api:type:Locale) removed from the [Store](ctp:api:type:Store) during the [Set Languages](ctp:api:type:StoreSetLanguagesAction) update action.
   *
   *
   */
  readonly removedLanguages?: string[]
}
/**
 *	Generated after a successful [Set Name](ctp:api:type:StoreSetNameAction) update action.
 *
 */
export interface StoreNameSetMessagePayload {
  readonly type: 'StoreNameSet'
  /**
   *	Name of the [Store](ctp:api:type:Store) set during the [Set Name](ctp:api:type:StoreSetNameAction) update action.
   *
   *
   */
  readonly name?: LocalizedString
  /**
   *	Names set for the [Store](ctp:api:type:Store) in different locales.
   *
   *
   */
  readonly nameAllLocales?: LocalizedString[]
}
/**
 *	Generated by a successful [Add Product Selection](ctp:api:type:StoreAddProductSelectionAction),
 *	[Remove Product Selection](ctp:api:type:StoreRemoveProductSelectionAction),
 *	[Set Product Selections](ctp:api:type:StoreSetProductSelectionsAction),
 *	or [Change Product Selections Active](ctp:api:type:StoreChangeProductSelectionAction) update action.
 *
 */
export interface StoreProductSelectionsChangedMessagePayload {
  readonly type: 'StoreProductSelectionsChanged'
  /**
   *	[ProductSelectionSettings](ctp:api:type:ProductSelectionSetting) that were added to the [Store](ctp:api:type:Store).
   *
   *
   */
  readonly addedProductSelections?: ProductSelectionSetting[]
  /**
   *	[ProductSelectionSettings](ctp:api:type:ProductSelectionSetting) that were removed from the [Store](ctp:api:type:Store).
   *
   *
   */
  readonly removedProductSelections?: ProductSelectionSetting[]
  /**
   *	[ProductSelectionSettings](ctp:api:type:ProductSelectionSetting) that were updated in the [Store](ctp:api:type:Store).
   *
   *
   */
  readonly updatedProductSelections?: ProductSelectionSetting[]
}
/**
 *	Generated after a successful [Add Supply Channel](ctp:api:type:StoreAddSupplyChannelAction),
 *	[Remove Supply Channel](ctp:api:type:StoreRemoveSupplyChannelAction), or
 *	[Set Supply Channels](ctp:api:type:StoreSetSupplyChannelsAction) update action.
 *
 */
export interface StoreSupplyChannelsChangedMessagePayload {
  readonly type: 'StoreSupplyChannelsChanged'
  /**
   *	Inventory supply Channels that have been added to the [Store](ctp:api:type:Store).
   *
   */
  readonly addedSupplyChannels?: ChannelReference[]
  /**
   *	Inventory supply Channels that have been removed from the [Store](ctp:api:type:Store).
   *
   *
   */
  readonly removedSupplyChannels?: ChannelReference[]
}
