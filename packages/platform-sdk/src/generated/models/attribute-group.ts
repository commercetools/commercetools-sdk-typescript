/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

import {
  BaseResource,
  CreatedBy,
  LastModifiedBy,
  LocalizedString,
} from './common'

export interface AttributeGroup extends BaseResource {
  /**
   *	Platform-generated unique identifier of the AttributeGroup.
   *
   *
   */
  readonly id: string
  /**
   *	Current version of the AttributeGroup.
   *
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the AttributeGroup was initially created.
   *
   *
   */
  readonly createdAt: string
  /**
   *	Date and time (UTC) the AttributeGroup was last updated.
   *
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/../api/client-logging#events-tracked).
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/../api/client-logging#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	Name of the AttributeGroup.
   *
   *
   */
  readonly name: LocalizedString
  /**
   *	Description of the AttributeGroup.
   *
   *
   */
  readonly description?: LocalizedString
  /**
   *	[Attributes](ctp:api:type:AttributeDefinition) with unique values.
   *
   *
   */
  readonly attributes: AttributeReference[]
  /**
   *	User-defined unique identifier of the AttributeGroup.
   *
   *
   */
  readonly key?: string
}
export interface AttributeGroupDraft {
  /**
   *	Name of the AttributeGroup.
   *
   *
   */
  readonly name: LocalizedString
  /**
   *	Description of the AttributeGroup.
   *
   *
   */
  readonly description?: LocalizedString
  /**
   *	[Attributes](ctp:api:type:AttributeDefinition) with unique values.
   *
   *
   */
  readonly attributes: AttributeReference[]
  /**
   *	User-defined unique identifier for the AttributeGroup.
   *
   *
   */
  readonly key?: string
}
/**
 *	[PagedQueryResult](/../api/general-concepts#pagedqueryresult) with `results` containing an array of [AttributeGroup](ctp:api:type:AttributeGroup).
 *
 */
export interface AttributeGroupPagedQueryResponse {
  /**
   *	Number of results requested in the query request.
   *
   *
   */
  readonly limit: number
  /**
   *	Offset supplied by the client or the server default.
   *	It is the number of elements skipped, not a page number.
   *
   *
   */
  readonly offset: number
  /**
   *	Actual number of results returned.
   *
   *
   */
  readonly count: number
  /**
   *	Total number of results matching the query.
   *	This number is an estimation that is not [strongly consistent](/../api/general-concepts#strong-consistency).
   *	This field is returned by default.
   *	For improved performance, calculating this field can be deactivated by using the query parameter `withTotal=false`.
   *	When the results are filtered with a [Query Predicate](/../api/predicates/query), `total` is subject to a [limit](/../api/limits#queries).
   *
   *
   */
  readonly total?: number
  /**
   *	[AttributeGroups](ctp:api:type:AttributeGroup) matching the query.
   *
   *
   */
  readonly results: AttributeGroup[]
}
/**
 *	[Reference](/../api/types#reference) to an [AttributeGroup](ctp:api:type:AttributeGroup).
 *
 */
export interface AttributeGroupReference {
  readonly typeId: 'attribute-group'
  /**
   *	Platform-generated unique identifier of the referenced [AttributeGroup](ctp:api:type:AttributeGroup).
   *
   *
   */
  readonly id: string
  /**
   *	Contains the representation of the expanded AttributeGroup. Only present in responses to requests with [Reference Expansion](/../api/general-concepts#reference-expansion) for AttributeGroup.
   *
   *
   */
  readonly obj?: AttributeGroup
}
/**
 *	[ResourceIdentifier](/../api/types#resourceidentifier) to an [AttributeGroup](ctp:api:type:AttributeGroup).
 *
 */
export interface AttributeGroupResourceIdentifier {
  readonly typeId: 'attribute-group'
  /**
   *	Platform-generated unique identifier of the referenced [AttributeGroup](ctp:api:type:AttributeGroup). Either `id` or `key` is required.
   *
   *
   */
  readonly id?: string
  /**
   *	User-generated unique identifier of the referenced [AttributeGroup](ctp:api:type:AttributeGroup). Either `id` or `key` is required.
   *
   *
   */
  readonly key?: string
}
export interface AttributeGroupUpdate {
  /**
   *	Expected version of the AttributeGroup on which the changes should be applied. If the expected version does not match the actual version, a [409 Conflict](/../api/errors#409-conflict) will be returned.
   *
   *
   */
  readonly version: number
  /**
   *	Update actions to be performed on the AttributeGroup.
   *
   *
   */
  readonly actions: AttributeGroupUpdateAction[]
}
export type AttributeGroupUpdateAction =
  | AttributeGroupAddAttributeAction
  | AttributeGroupChangeNameAction
  | AttributeGroupRemoveAttributeAction
  | AttributeGroupSetAttributesAction
  | AttributeGroupSetDescriptionAction
  | AttributeGroupSetKeyAction
export interface AttributeReference {
  /**
   *	Key of the attribute.
   *
   *
   */
  readonly key: string
}
export interface AttributeGroupAddAttributeAction {
  readonly action: 'addAttribute'
  /**
   *	Value to add.
   *
   *
   */
  readonly attribute: AttributeReference
}
export interface AttributeGroupChangeNameAction {
  readonly action: 'changeName'
  /**
   *	New value to set.
   *	Must not be empty.
   *
   *
   */
  readonly name: LocalizedString
}
export interface AttributeGroupRemoveAttributeAction {
  readonly action: 'removeAttribute'
  /**
   *	Value to remove.
   *
   *
   */
  readonly attribute: AttributeReference
}
export interface AttributeGroupSetAttributesAction {
  readonly action: 'setAttributes'
  /**
   *	New unique values to set.
   *
   *
   */
  readonly attributes: AttributeReference[]
}
export interface AttributeGroupSetDescriptionAction {
  readonly action: 'setDescription'
  /**
   *	Value to set.
   *	If empty, any existing value will be removed.
   *
   *
   */
  readonly description?: LocalizedString
}
export interface AttributeGroupSetKeyAction {
  readonly action: 'setKey'
  /**
   *	If `key` is absent or `null`, the existing key, if any, will be removed.
   *
   *
   */
  readonly key?: string
}
