/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

import { BaseResource, CreatedBy, LastModifiedBy } from './common'
import {
  CustomFields,
  CustomFieldsDraft,
  FieldContainer,
  TypeResourceIdentifier,
} from './type'

export interface AssociateRole extends BaseResource {
  /**
   *	Unique identifier of the AssociateRole.
   *
   *
   */
  readonly id: string
  /**
   *	Current version of the AssociateRole.
   *
   *
   */
  readonly version: number
  /**
   *	Date and time (UTC) the AssociateRole was initially created.
   *
   *
   */
  readonly createdAt: string
  /**
   *	Date and time (UTC) the AssociateRole was last updated.
   *
   *
   */
  readonly lastModifiedAt: string
  /**
   *	Present on resources updated after 1 February 2019 except for [events not tracked](/../api/general-concepts#events-tracked).
   *
   *
   */
  readonly lastModifiedBy?: LastModifiedBy
  /**
   *	Present on resources created after 1 February 2019 except for [events not tracked](/../api/general-concepts#events-tracked).
   *
   *
   */
  readonly createdBy?: CreatedBy
  /**
   *	User-defined unique identifier of the AssociateRole.
   *
   *
   */
  readonly key: string
  /**
   *	Whether the AssociateRole can be assigned to an Associate by a [buyer](/../api/associates-overview#buyer). If false, the AssociateRole can only be assigned using the [general endpoint](/../api/associates-overview#through-the-general-endpoints).
   *
   *
   */
  readonly buyerAssignable: boolean
  /**
   *	Name of the AssociateRole.
   *
   *
   */
  readonly name?: string
  /**
   *	List of Permissions for the AssociateRole.
   *
   *
   */
  readonly permissions: Permission[]
  /**
   *	Custom Fields for the AssociateRole.
   *
   *
   */
  readonly custom?: CustomFields
}
export interface AssociateRoleDraft {
  /**
   *	User-defined unique identifier for the AssociateRole.
   *
   *
   */
  readonly key: string
  /**
   *	Name of the AssociateRole.
   *
   *
   */
  readonly name?: string
  /**
   *	Whether the AssociateRole can be assigned to an Associate by a [buyer](/../api/associates-overview#buyer).
   *
   *
   */
  readonly buyerAssignable?: boolean
  /**
   *	List of Permissions for the AssociateRole.
   *
   *
   */
  readonly permissions?: Permission[]
  /**
   *	Custom Fields for the AssociateRole.
   *
   *
   */
  readonly custom?: CustomFieldsDraft
}
/**
 *	[Reference](ctp:api:type:TypeReference) to an [AssociateRole](ctp:api:type:AssociateRole) by its key.
 *
 */
export interface AssociateRoleKeyReference {
  readonly typeId: 'associate-role'
  /**
   *	Unique and immutable key of the referenced [AssociateRole](ctp:api:type:AssociateRole).
   *
   *
   */
  readonly key: string
}
/**
 *	[PagedQueryResult](/../api/general-concepts#pagedqueryresult) with results containing an array of [AssociateRole](ctp:api:type:AssociateRole).
 *
 */
export interface AssociateRolePagedQueryResponse {
  /**
   *	Number of requested [results](/../api/general-concepts#limit).
   *
   *
   */
  readonly limit: number
  /**
   *	Number of elements [skipped](/../api/general-concepts#offset).
   *
   *
   */
  readonly offset: number
  /**
   *	Actual number of results returned.
   *
   *
   */
  readonly count: number
  /**
   *	Total number of results matching the query.
   *	This number is an estimation that is not [strongly consistent](/../api/general-concepts#strong-consistency).
   *	This field is returned by default.
   *	For improved performance, calculating this field can be deactivated by using the query parameter `withTotal=false`.
   *	When the results are filtered with a [Query Predicate](/../api/predicates/query), `total` is subject to a [limit](/../api/limits#queries).
   *
   *
   */
  readonly total?: number
  /**
   *	[AssociateRoles](ctp:api:type:AssociateRole) matching the query.
   *
   *
   */
  readonly results: AssociateRole[]
}
/**
 *	[Reference](ctp:api:type:TypeReference) to an [AssociateRole](ctp:api:type:AssociateRole).
 *
 */
export interface AssociateRoleReference {
  readonly typeId: 'associate-role'
  /**
   *	Unique identifier of the referenced [AssociateRole](ctp:api:type:AssociateRole).
   *
   *
   */
  readonly id: string
  /**
   *	Contains the representation of the expanded AssociateRole. Only present in responses to requests with [Reference Expansion](/../api/general-concepts#reference-expansion) for AssociateRole.
   *
   *
   */
  readonly obj?: AssociateRole
}
/**
 *	[ResourceIdentifier](ctp:api:type:TypeResourceIdentifier) of an [AssociateRole](ctp:api:type:AssociateRole). Either `id` or `key` is required. If both are set, an [InvalidJsonInput](/../api/errors#invalidjsoninput) error is returned.
 *
 */
export interface AssociateRoleResourceIdentifier {
  readonly typeId: 'associate-role'
  /**
   *	Unique identifier of the referenced [AssociateRole](ctp:api:type:AssociateRole). Required if `key` is absent.
   *
   *
   */
  readonly id?: string
  /**
   *	Unique key of the referenced [AssociateRole](ctp:api:type:AssociateRole). Required if `id` is absent.
   *
   *
   */
  readonly key?: string
}
export interface AssociateRoleUpdate {
  /**
   *	Expected version of the AssociateRole on which the changes should be applied.
   *	If the expected version does not match the actual version, a [ConcurrentModification](ctp:api:type:ConcurrentModificationError) error will be returned.
   *
   *
   */
  readonly version: number
  /**
   *	Update actions to be performed on the AssociateRole.
   *
   *
   */
  readonly actions: AssociateRoleUpdateAction[]
}
export type AssociateRoleUpdateAction =
  | AssociateRoleAddPermissionAction
  | AssociateRoleChangeBuyerAssignableAction
  | AssociateRoleRemovePermissionAction
  | AssociateRoleSetCustomFieldAction
  | AssociateRoleSetCustomTypeAction
  | AssociateRoleSetNameAction
  | AssociateRoleSetPermissionsAction
/**
 *	Permissions grant granular access to [Approval Rules](ctp:api:type:ApprovalRule), [Approval Flows](ctp:api:type:ApprovalFlow), [Business Units](ctp:api:type:BusinessUnit), [Carts](ctp:api:type:Cart), [Orders](ctp:api:type:Order), [Quotes](ctp:api:type:Quote), and [Quote Requests](ctp:api:type:QuoteRequest).
 *
 */
export type Permission =
  | 'AcceptMyQuotes'
  | 'AcceptOthersQuotes'
  | 'AddChildUnits'
  | 'CreateApprovalRules'
  | 'CreateMyCarts'
  | 'CreateMyOrdersFromMyCarts'
  | 'CreateMyOrdersFromMyQuotes'
  | 'CreateMyQuoteRequestsFromMyCarts'
  | 'CreateOrdersFromOthersCarts'
  | 'CreateOrdersFromOthersQuotes'
  | 'CreateOthersCarts'
  | 'CreateQuoteRequestsFromOthersCarts'
  | 'DeclineMyQuotes'
  | 'DeclineOthersQuotes'
  | 'DeleteMyCarts'
  | 'DeleteOthersCarts'
  | 'ReassignMyQuotes'
  | 'ReassignOthersQuotes'
  | 'RenegotiateMyQuotes'
  | 'RenegotiateOthersQuotes'
  | 'UpdateApprovalFlows'
  | 'UpdateApprovalRules'
  | 'UpdateAssociates'
  | 'UpdateBusinessUnitDetails'
  | 'UpdateMyCarts'
  | 'UpdateMyOrders'
  | 'UpdateMyQuoteRequests'
  | 'UpdateOthersCarts'
  | 'UpdateOthersOrders'
  | 'UpdateOthersQuoteRequests'
  | 'UpdateParentUnit'
  | 'ViewMyCarts'
  | 'ViewMyOrders'
  | 'ViewMyQuoteRequests'
  | 'ViewMyQuotes'
  | 'ViewOthersCarts'
  | 'ViewOthersOrders'
  | 'ViewOthersQuoteRequests'
  | 'ViewOthersQuotes'
  | string
/**
 *	Adding a Permission to an [AssociateRole](ctp:api:type:AssociateRole) generates an [AssociateRolePermissionAdded](ctp:api:type:AssociateRolePermissionAddedMessage) Message.
 *
 */
export interface AssociateRoleAddPermissionAction {
  readonly action: 'addPermission'
  /**
   *	Permission to be added to the AssociateRole.
   *
   *
   */
  readonly permission: Permission
}
/**
 *	Changing the `buyerAssignable` value of an AssociateRole generates an [AssociateRoleBuyerAssignableChanged](ctp:api:type:AssociateRoleBuyerAssignableChangedMessage) Message.
 *
 */
export interface AssociateRoleChangeBuyerAssignableAction {
  readonly action: 'changeBuyerAssignable'
  /**
   *	The new value of the `buyerAssignable` field of the AssociateRole.
   *
   *
   */
  readonly buyerAssignable: boolean
}
/**
 *	Removing a Permission from an [AssociateRole](ctp:api:type:AssociateRole) generates an [AssociateRolePermissionRemoved](ctp:api:type:AssociateRolePermissionRemovedMessage) Message.
 *
 */
export interface AssociateRoleRemovePermissionAction {
  readonly action: 'removePermission'
  /**
   *	Permission to be removed from the AssociateRole.
   *
   *
   */
  readonly permission: Permission
}
export interface AssociateRoleSetCustomFieldAction {
  readonly action: 'setCustomField'
  /**
   *	Name of the [Custom Field](ctp:api:type:CustomFields).
   *
   *
   */
  readonly name: string
  /**
   *	If `value` is absent or `null`, this field will be removed if it exists.
   *	Trying to remove a field that does not exist will fail with an [InvalidOperationError](ctp:api:type:InvalidOperationError) error.
   *	If `value` is provided, it is set for the field defined by `name`.
   *
   *
   */
  readonly value?: any
}
export interface AssociateRoleSetCustomTypeAction {
  readonly action: 'setCustomType'
  /**
   *	Defines the [Type](ctp:api:type:Type) that extends the AssociateRole with [Custom Fields](ctp:api:type:CustomFields).
   *	If absent, any existing Type and Custom Fields are removed from the AssociateRole.
   *
   *
   */
  readonly type?: TypeResourceIdentifier
  /**
   *	Sets the [Custom Fields](ctp:api:type:CustomFields) for the AssociateRole.
   *
   *
   */
  readonly fields?: FieldContainer
}
/**
 *	Updating the name of an [AssociateRole](ctp:api:type:AssociateRole) generates an [AssociateRoleNameSet](ctp:api:type:AssociateRoleNameSetMessage) Message.
 *
 */
export interface AssociateRoleSetNameAction {
  readonly action: 'setName'
  /**
   *	New name to set.
   *	If `name` is absent or `null`, the existing name, if any, will be removed.
   *
   *
   */
  readonly name?: string
}
/**
 *	Updating the Permissions on an [AssociateRole](ctp:api:type:AssociateRole) generates an [AssociateRolePermissionsSet](ctp:api:type:AssociateRolePermissionsSetMessage) Message.
 *
 */
export interface AssociateRoleSetPermissionsAction {
  readonly action: 'setPermissions'
  /**
   *	Overrides the current list of Permissions for the AssociateRole.
   *
   *
   */
  readonly permissions?: Permission[]
}
