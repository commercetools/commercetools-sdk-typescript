/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

import {
  AssociateDraft,
  BusinessUnitKeyReference,
  BusinessUnitResourceIdentifier,
  BusinessUnitUpdateAction,
} from './business-unit'
import {
  CartReference,
  CartResourceIdentifier,
  ExternalLineItemTotalPrice,
  ExternalTaxRateDraft,
  InventoryMode,
  ItemShippingDetailsDraft,
  ItemShippingTarget,
  TaxMode,
} from './cart'
import { ChannelResourceIdentifier } from './channel'
import { BaseAddress, LocalizedString, Money, TypedMoney } from './common'
import { CustomerReference, CustomerResourceIdentifier } from './customer'
import { DiscountCodeReference } from './discount-code'
import { OrderReference } from './order'
import {
  PaymentMethodInfo,
  PaymentResourceIdentifier,
  Transaction,
  TransactionDraft,
  TransactionType,
} from './payment'
import { ShippingMethodResourceIdentifier } from './shipping-method'
import { ShoppingListLineItemDraft, TextLineItemDraft } from './shopping-list'
import { StoreKeyReference, StoreResourceIdentifier } from './store'
import {
  CustomFields,
  CustomFieldsDraft,
  FieldContainer,
  TypeResourceIdentifier,
} from './type'

export interface MyBusinessUnitAssociateDraft {
  /**
   *	Expected version of the BusinessUnit on which the changes should be applied. If the expected version does not match the actual version, a [409 Conflict](/../api/errors#409-conflict) error will be returned.
   *
   *
   */
  readonly version: number
  /**
   *	[Customer](ctp:api:type:Customer) to create and assign to the Business Unit.
   *
   *
   */
  readonly customer: MyCustomerDraft
}
export type MyBusinessUnitDraft = MyCompanyDraft | MyDivisionDraft
export interface MyBusinessUnitUpdate {
  /**
   *	Expected version of the BusinessUnit on which the changes should be applied.
   *	If the expected version does not match the actual version, a [409 Conflict](/../api/errors#409-conflict) error will be returned.
   *
   *
   */
  readonly version: number
  /**
   *	Update actions to be performed on the BusinessUnit.
   *
   *
   */
  readonly actions: BusinessUnitUpdateAction[]
}
export type MyBusinessUnitUpdateAction =
  | MyBusinessUnitAddAddressAction
  | MyBusinessUnitAddBillingAddressIdAction
  | MyBusinessUnitAddShippingAddressIdAction
  | MyBusinessUnitChangeAddressAction
  | MyBusinessUnitChangeAssociateAction
  | MyBusinessUnitChangeNameAction
  | MyBusinessUnitChangeParentUnitAction
  | MyBusinessUnitRemoveAddressAction
  | MyBusinessUnitRemoveAssociateAction
  | MyBusinessUnitRemoveBillingAddressIdAction
  | MyBusinessUnitRemoveShippingAddressIdAction
  | MyBusinessUnitSetAddressCustomFieldAction
  | MyBusinessUnitSetAddressCustomTypeAction
  | MyBusinessUnitSetContactEmailAction
  | MyBusinessUnitSetCustomFieldAction
  | MyBusinessUnitSetCustomTypeAction
  | MyBusinessUnitSetDefaultBillingAddressAction
  | MyBusinessUnitSetDefaultShippingAddressAction
export interface MyCartDraft {
  /**
   *	A three-digit currency code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
   *
   */
  readonly currency: string
  /**
   *
   */
  readonly customerEmail?: string
  /**
   *	A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
   *
   */
  readonly country?: string
  /**
   *	Default inventory mode is `None`.
   *
   */
  readonly inventoryMode?: InventoryMode
  /**
   *
   */
  readonly lineItems?: MyLineItemDraft[]
  /**
   *
   */
  readonly shippingAddress?: BaseAddress
  /**
   *
   */
  readonly billingAddress?: BaseAddress
  /**
   *
   */
  readonly shippingMethod?: ShippingMethodResourceIdentifier
  /**
   *	The custom fields.
   *
   */
  readonly custom?: CustomFieldsDraft
  /**
   *
   */
  readonly locale?: string
  /**
   *	The `TaxMode` `Disabled` can not be set on the My Carts endpoint.
   *
   */
  readonly taxMode?: TaxMode
  /**
   *	The cart will be deleted automatically if it hasn't been modified for the specified amount of days and it is in the `Active` CartState.
   *	If a ChangeSubscription for carts exists, a `ResourceDeleted` notification will be sent.
   *
   */
  readonly deleteDaysAfterLastModification?: number
  /**
   *	Contains addresses for orders with multiple shipping addresses.
   *	Each address must contain a key which is unique in this cart.
   *
   */
  readonly itemShippingAddresses?: BaseAddress[]
  /**
   *	The BusinessUnit the cart will belong to.
   *
   *
   */
  readonly businessUnit?: BusinessUnitKeyReference
  /**
   *	[Reference](/../api/types#reference) to a [Store](ctp:api:type:Store) by its key.
   *
   *
   */
  readonly store?: StoreKeyReference
  /**
   *	The code of existing DiscountCodes.
   *
   */
  readonly discountCodes?: string[]
}
export interface MyCartUpdate {
  /**
   *
   */
  readonly version: number
  /**
   *
   */
  readonly actions: MyCartUpdateAction[]
}
export type MyCartUpdateAction =
  | MyCartAddDiscountCodeAction
  | MyCartAddItemShippingAddressAction
  | MyCartAddLineItemAction
  | MyCartAddPaymentAction
  | MyCartApplyDeltaToLineItemShippingDetailsTargetsAction
  | MyCartChangeLineItemQuantityAction
  | MyCartChangeTaxModeAction
  | MyCartRecalculateAction
  | MyCartRemoveDiscountCodeAction
  | MyCartRemoveItemShippingAddressAction
  | MyCartRemoveLineItemAction
  | MyCartRemovePaymentAction
  | MyCartSetBillingAddressAction
  | MyCartSetCountryAction
  | MyCartSetCustomFieldAction
  | MyCartSetCustomTypeAction
  | MyCartSetCustomerEmailAction
  | MyCartSetDeleteDaysAfterLastModificationAction
  | MyCartSetLineItemCustomFieldAction
  | MyCartSetLineItemCustomTypeAction
  | MyCartSetLineItemDistributionChannelAction
  | MyCartSetLineItemShippingDetailsAction
  | MyCartSetLineItemSupplyChannelAction
  | MyCartSetLocaleAction
  | MyCartSetShippingAddressAction
  | MyCartSetShippingMethodAction
  | MyCartUpdateItemShippingAddressAction
/**
 *	Draft type to represent the top level of a business.
 *	Contains the fields and values of the generic [MyBusinessUnitDraft](ctp:api:type:BusinessUnitDraft) that are used specifically for creating a [Company](ctp:api:type:Company).
 *
 */
export interface MyCompanyDraft {
  readonly unitType: 'Company'
  /**
   *	User-defined unique identifier for the BusinessUnit.
   *
   *
   */
  readonly key: string
  /**
   *	Name of the Business Unit.
   *
   *
   */
  readonly name: string
  /**
   *	Email address of the Business Unit.
   *
   *
   */
  readonly contactEmail?: string
  /**
   *	Custom Fields for the Business Unit.
   *
   *
   */
  readonly custom?: CustomFields
  /**
   *	Addresses used by the Business Unit.
   *
   *
   */
  readonly addresses?: BaseAddress[]
  /**
   *	Indexes of entries in `addresses` to set as shipping addresses.
   *	The `shippingAddressIds` of the [Customer](ctp:api:type:Customer) will be replaced by these addresses.
   *
   *
   */
  readonly shippingAddresses?: number[]
  /**
   *	Index of the entry in `addresses` to set as the default shipping address.
   *
   *
   */
  readonly defaultShipingAddress?: number
  /**
   *	Indexes of entries in `addresses` to set as billing addresses.
   *	The `billingAddressIds` of the [Customer](ctp:api:type:Customer) will be replaced by these addresses.
   *
   *
   */
  readonly billingAddresses?: number[]
  /**
   *	Index of the entry in `addresses` to set as the default billing address.
   *
   *
   */
  readonly defaultBillingAddress?: number
}
export interface MyCustomerDraft {
  /**
   *	Email address of the Customer that is [unique](/../api/customers-overview#customer-uniqueness) for an entire Project or Store the Customer is assigned to.
   *	It is the mandatory unique identifier of a Customer.
   *
   *
   */
  readonly email: string
  /**
   *	Password of the Customer.
   *
   *
   */
  readonly password: string
  /**
   *	Given name (first name) of the Customer.
   *
   *
   */
  readonly firstName?: string
  /**
   *	Family name (last name) of the Customer.
   *
   *
   */
  readonly lastName?: string
  /**
   *	Middle name of the Customer.
   *
   *
   */
  readonly middleName?: string
  /**
   *	Title of the Customer, for example, 'Dr.'.
   *
   *
   */
  readonly title?: string
  /**
   *	Salutation of the Customer, for example, 'Mr.' or 'Mrs.'.
   *
   *
   */
  readonly salutation?: string
  /**
   *	Date of birth of the Customer.
   *
   *
   */
  readonly dateOfBirth?: string
  /**
   *	Company name of the Customer.
   *
   *
   */
  readonly companyName?: string
  /**
   *	Unique VAT ID of the Customer.
   *
   *
   */
  readonly vatId?: string
  /**
   *	Addresses of the Customer.
   *
   *
   */
  readonly addresses?: BaseAddress[]
  /**
   *	Index of the address in the `addresses` array to use as the default shipping address.
   *	The `defaultShippingAddressId` of the Customer will be set to the `id` of that address.
   *
   *
   */
  readonly defaultShippingAddress?: number
  /**
   *	Index of the address in the `addresses` array to use as the default billing address.
   *	The `defaultBillingAddressId` of the Customer will be set to the `id` of that address.
   *
   *
   */
  readonly defaultBillingAddress?: number
  /**
   *	Custom Fields for the Customer.
   *
   *
   */
  readonly custom?: CustomFieldsDraft
  /**
   *	Preferred language of the Customer. Must be one of the languages supported by the [Project](ctp:api:type:Project).
   *
   *
   */
  readonly locale?: string
  /**
   *	Sets the [Stores](ctp:api:type:Store) for the Customer.
   *
   *
   */
  readonly stores?: StoreResourceIdentifier[]
}
export interface MyCustomerUpdate {
  /**
   *	Expected version of the Customer on which the changes should be applied. If the expected version does not match the actual version, a [409 Conflict](/../api/errors#409-conflict) error will be returned.
   *
   *
   */
  readonly version: number
  /**
   *	Update actions to be performed on the Customer.
   *
   *
   */
  readonly actions: MyCustomerUpdateAction[]
}
export type MyCustomerUpdateAction =
  | MyCustomerAddAddressAction
  | MyCustomerAddBillingAddressIdAction
  | MyCustomerAddShippingAddressIdAction
  | MyCustomerChangeAddressAction
  | MyCustomerChangeEmailAction
  | MyCustomerRemoveAddressAction
  | MyCustomerRemoveBillingAddressIdAction
  | MyCustomerRemoveShippingAddressIdAction
  | MyCustomerSetCompanyNameAction
  | MyCustomerSetCustomFieldAction
  | MyCustomerSetCustomTypeAction
  | MyCustomerSetDateOfBirthAction
  | MyCustomerSetDefaultBillingAddressAction
  | MyCustomerSetDefaultShippingAddressAction
  | MyCustomerSetFirstNameAction
  | MyCustomerSetLastNameAction
  | MyCustomerSetLocaleAction
  | MyCustomerSetMiddleNameAction
  | MyCustomerSetSalutationAction
  | MyCustomerSetTitleAction
  | MyCustomerSetVatIdAction
/**
 *	Draft type to model divisions that are part of the [Company](ctp:api:type:Company) or a higher order [Division](ctp:api:type:Division).
 *	Contains the fields and values of the generic [MyBusinessUnitDraft](ctp:api:type:MyBusinessUnitDraft) that are used specifically for creating a Division.
 *
 */
export interface MyDivisionDraft {
  readonly unitType: 'Division'
  /**
   *	User-defined unique identifier for the BusinessUnit.
   *
   *
   */
  readonly key: string
  /**
   *	Name of the Business Unit.
   *
   *
   */
  readonly name: string
  /**
   *	Email address of the Business Unit.
   *
   *
   */
  readonly contactEmail?: string
  /**
   *	Custom Fields for the Business Unit.
   *
   *
   */
  readonly custom?: CustomFields
  /**
   *	Addresses used by the Business Unit.
   *
   *
   */
  readonly addresses?: BaseAddress[]
  /**
   *	Indexes of entries in `addresses` to set as shipping addresses.
   *	The `shippingAddressIds` of the [Customer](ctp:api:type:Customer) will be replaced by these addresses.
   *
   *
   */
  readonly shippingAddresses?: number[]
  /**
   *	Index of the entry in `addresses` to set as the default shipping address.
   *
   *
   */
  readonly defaultShipingAddress?: number
  /**
   *	Indexes of entries in `addresses` to set as billing addresses.
   *	The `billingAddressIds` of the [Customer](ctp:api:type:Customer) will be replaced by these addresses.
   *
   *
   */
  readonly billingAddresses?: number[]
  /**
   *	Index of the entry in `addresses` to set as the default billing address.
   *
   *
   */
  readonly defaultBillingAddress?: number
  /**
   *	The parent unit of this Division. Can be a Company or a Division.
   *
   *
   */
  readonly parentUnit: BusinessUnitResourceIdentifier
}
export interface MyLineItemDraft {
  /**
   *
   */
  readonly productId?: string
  /**
   *
   */
  readonly variantId?: number
  /**
   *
   */
  readonly quantity: number
  /**
   *	When the line item was added to the cart. Optional for backwards
   *	compatibility reasons only.
   *
   */
  readonly addedAt?: string
  /**
   *	By providing supply channel information, you can unique identify
   *	inventory entries that should be reserved.
   *	The provided channel should have the InventorySupply role.
   *
   */
  readonly supplyChannel?: ChannelResourceIdentifier
  /**
   *	The channel is used to select a ProductPrice.
   *	The provided channel should have the ProductDistribution role.
   *
   */
  readonly distributionChannel?: ChannelResourceIdentifier
  /**
   *	The custom fields.
   *
   */
  readonly custom?: CustomFieldsDraft
  /**
   *	Container for line item specific address(es).
   *
   */
  readonly shippingDetails?: ItemShippingDetailsDraft
  /**
   *
   */
  readonly sku?: string
}
export interface MyOrderFromCartDraft {
  /**
   *	Unique identifier of the Cart that initiates an Order creation.
   *
   */
  readonly id: string
  /**
   *
   */
  readonly version: number
}
export interface MyPayment {
  /**
   *	Unique identifier of the MyPayment.
   *
   */
  readonly id: string
  /**
   *
   */
  readonly version: number
  /**
   *	A reference to the customer this payment belongs to.
   *
   */
  readonly customer?: CustomerReference
  /**
   *	Identifies payments belonging to an anonymous session (the customer has not signed up/in yet).
   *
   */
  readonly anonymousId?: string
  /**
   *	How much money this payment intends to receive from the customer.
   *	The value usually matches the cart or order gross total.
   *
   */
  readonly amountPlanned: TypedMoney
  /**
   *
   */
  readonly paymentMethodInfo: PaymentMethodInfo
  /**
   *	A list of financial transactions of different TransactionTypes
   *	with different TransactionStates.
   *
   */
  readonly transactions: Transaction[]
  /**
   *
   */
  readonly custom?: CustomFields
}
export interface MyPaymentDraft {
  /**
   *	How much money this payment intends to receive from the customer.
   *	The value usually matches the cart or order gross total.
   *
   */
  readonly amountPlanned: Money
  /**
   *
   */
  readonly paymentMethodInfo?: PaymentMethodInfo
  /**
   *
   */
  readonly custom?: CustomFieldsDraft
  /**
   *	A list of financial transactions of the `Authorization` or `Charge`
   *	TransactionTypes.
   *
   */
  readonly transaction?: MyTransactionDraft
}
export interface MyPaymentPagedQueryResponse {
  /**
   *	Number of [results requested](/../api/general-concepts#limit).
   *
   *
   */
  readonly limit: number
  /**
   *
   */
  readonly count: number
  /**
   *
   */
  readonly total?: number
  /**
   *	Number of [elements skipped](/../api/general-concepts#offset).
   *
   *
   */
  readonly offset: number
  /**
   *
   */
  readonly results: MyPayment[]
}
export interface MyPaymentUpdate {
  /**
   *
   */
  readonly version: number
  /**
   *
   */
  readonly actions: MyPaymentUpdateAction[]
}
export type MyPaymentUpdateAction =
  | MyPaymentAddTransactionAction
  | MyPaymentChangeAmountPlannedAction
  | MyPaymentSetCustomFieldAction
  | MyPaymentSetMethodInfoInterfaceAction
  | MyPaymentSetMethodInfoMethodAction
  | MyPaymentSetMethodInfoNameAction
  | MyPaymentSetTransactionCustomFieldAction
export interface MyQuoteRequestDraft {
  /**
   *	ResourceIdentifier of the Cart from which the Quote Request is created.
   *
   */
  readonly cart: CartResourceIdentifier
  /**
   *	Current version of the Cart.
   *
   *
   */
  readonly version: number
  /**
   *	Message from the Buyer included in the Quote Request.
   *
   *
   */
  readonly comment: string
}
export interface MyQuoteRequestUpdate {
  /**
   *
   */
  readonly version: number
  /**
   *
   */
  readonly actions: MyQuoteRequestUpdateAction[]
}
export type MyQuoteRequestUpdateAction = MyQuoteRequestCancelAction
/**
 *	[QuoteStates](ctp:api:type:QuoteState) that can be set using the [Change My Quote State](ctp:api:type:MyQuoteChangeMyQuoteStateAction) update action.
 *
 */
export type MyQuoteState = 'Accepted' | 'Declined' | string
export interface MyQuoteUpdate {
  /**
   *	Expected version of the [Quote](ctp:api:type:Quote) to which the changes should be applied.
   *	If the expected version does not match the actual version, a [409 Conflict](/../api/errors#409-conflict) error will be returned.
   *
   *
   */
  readonly version: number
  /**
   *	Update actions to be performed on the [Quote](ctp:api:type:Quote).
   *
   *
   */
  readonly actions: MyQuoteUpdateAction[]
}
export type MyQuoteUpdateAction = MyQuoteChangeMyQuoteStateAction
export interface MyShoppingListDraft {
  /**
   *
   */
  readonly name: LocalizedString
  /**
   *
   */
  readonly description?: LocalizedString
  /**
   *
   */
  readonly lineItems?: ShoppingListLineItemDraft[]
  /**
   *
   */
  readonly textLineItems?: TextLineItemDraft[]
  /**
   *	The custom fields.
   *
   */
  readonly custom?: CustomFieldsDraft
  /**
   *	The shopping list will be deleted automatically if it hasn't been modified for the specified amount of days.
   *
   */
  readonly deleteDaysAfterLastModification?: number
  /**
   *
   */
  readonly store?: StoreResourceIdentifier
}
export interface MyShoppingListUpdate {
  /**
   *
   */
  readonly version: number
  /**
   *
   */
  readonly actions: MyShoppingListUpdateAction[]
}
export type MyShoppingListUpdateAction =
  | MyShoppingListAddLineItemAction
  | MyShoppingListAddTextLineItemAction
  | MyShoppingListChangeLineItemQuantityAction
  | MyShoppingListChangeLineItemsOrderAction
  | MyShoppingListChangeNameAction
  | MyShoppingListChangeTextLineItemNameAction
  | MyShoppingListChangeTextLineItemQuantityAction
  | MyShoppingListChangeTextLineItemsOrderAction
  | MyShoppingListRemoveLineItemAction
  | MyShoppingListRemoveTextLineItemAction
  | MyShoppingListSetCustomFieldAction
  | MyShoppingListSetCustomTypeAction
  | MyShoppingListSetDeleteDaysAfterLastModificationAction
  | MyShoppingListSetDescriptionAction
  | MyShoppingListSetLineItemCustomFieldAction
  | MyShoppingListSetLineItemCustomTypeAction
  | MyShoppingListSetTextLineItemCustomFieldAction
  | MyShoppingListSetTextLineItemCustomTypeAction
  | MyShoppingListSetTextLineItemDescriptionAction
export interface MyTransactionDraft {
  /**
   *	The time at which the transaction took place.
   *
   */
  readonly timestamp?: string
  /**
   *	The type of this transaction.
   *	Only the `Authorization` or `Charge`
   *	TransactionTypes are allowed here.
   *
   */
  readonly type: TransactionType
  /**
   *
   */
  readonly amount: Money
  /**
   *	The identifier that is used by the interface that managed the transaction (usually the PSP).
   *	If a matching interaction was logged in the interfaceInteractions array,
   *	the corresponding interaction should be findable with this ID.
   *	The `state` is set to the `Initial` TransactionState.
   *
   */
  readonly interactionId?: string
  /**
   *	Custom Fields for the Transaction.
   *
   */
  readonly custom?: CustomFieldsDraft
}
export interface ReplicaMyCartDraft {
  /**
   *
   */
  readonly reference: CartReference | OrderReference
}
/**
 *	Adding an address to a [Business Unit](ctp:api:type:BusinessUnit) generates a [BusinessUnitAddressAdded](ctp:api:type:BusinessUnitAddressAddedMessage) Message.
 *
 */
export interface MyBusinessUnitAddAddressAction {
  readonly action: 'addAddress'
  /**
   *	The address to add to `addresses`.
   *
   *
   */
  readonly address: BaseAddress
}
/**
 *	Adding a billing address to a [Business Unit](ctp:api:type:BusinessUnit) generates a [BusinessUnitBillingAddressAdded](ctp:api:type:BusinessUnitBillingAddressAddedMessage) Message.
 *
 */
export interface MyBusinessUnitAddBillingAddressIdAction {
  readonly action: 'addBillingAddressId'
  /**
   *	ID of the address to add as a billing address. Either `addressId` or `addressKey` is required.
   *
   *
   */
  readonly addressId?: string
  /**
   *	Key of the address to add as a billing address. Either `addressId` or `addressKey` is required.
   *
   *
   */
  readonly addressKey?: string
}
/**
 *	Adding a shipping address to a [Business Unit](ctp:api:type:BusinessUnit) generates a [BusinessUnitShippingAddressAdded](ctp:api:type:BusinessUnitShippingAddressAddedMessage) Message.
 *
 */
export interface MyBusinessUnitAddShippingAddressIdAction {
  readonly action: 'addShippingAddressId'
  /**
   *	ID of the address to add as a shipping address. Either `addressId` or `addressKey` is required.
   *
   *
   */
  readonly addressId?: string
  /**
   *	Key of the address to add as a shipping address. Either `addressId` or `addressKey` is required.
   *
   *
   */
  readonly addressKey?: string
}
/**
 *	Changing the address on a Business Unit generates the [BusinessUnitAddressChanged](ctp:api:type:BusinessUnitAddressChangedMessage) Message.
 *
 */
export interface MyBusinessUnitChangeAddressAction {
  readonly action: 'changeAddress'
  /**
   *	ID of the address to change. Either `addressId` or `addressKey` is required.
   *
   *
   */
  readonly addressId?: string
  /**
   *	Key of the address to change. Either `addressId` or `addressKey` is required.
   *
   *
   */
  readonly addressKey?: string
  /**
   *	New address to set.
   *
   *
   */
  readonly address: BaseAddress
}
/**
 *	Updating the [Associate](ctp:api:type:Associate) on a [Business Unit](ctp:api:type:BusinessUnit) generates the [BusinessUnitAssociateChanged](ctp:api:type:BusinessUnitAssociateChangedMessage) Message.
 *
 */
export interface MyBusinessUnitChangeAssociateAction {
  readonly action: 'changeAssociate'
  /**
   *	The Associate to add.
   *
   *
   */
  readonly associate: AssociateDraft
}
/**
 *	Updating the name on a [Business Unit](ctp:api:type:BusinessUnit) generates a [BusinessUnitNameChanged](ctp:api:type:BusinessUnitNameChangedMessage) Message.
 *
 */
export interface MyBusinessUnitChangeNameAction {
  readonly action: 'changeName'
  /**
   *	New name to set.
   *
   *
   */
  readonly name: string
}
/**
 *	Changing the parent of a [Business Unit](ctp:api:type:BusinessUnit) generates a [BusinessUnitParentUnitChanged](ctp:api:type:BusinessUnitParentUnitChangedMessage) Message. The user must be an Associate with the `Admin` role in the new parent unit.
 *
 */
export interface MyBusinessUnitChangeParentUnitAction {
  readonly action: 'changeParentUnit'
  /**
   *	New parent unit of the [Business Unit](ctp:api:type:BusinessUnit).
   *
   *
   */
  readonly parentUnit: BusinessUnitResourceIdentifier
}
/**
 *	Removing the address from a [Business Unit](ctp:api:type:BusinessUnit) generates the [BusinessUnitAddressRemoved](ctp:api:type:BusinessUnitAddressRemovedMessage) Message.
 *
 */
export interface MyBusinessUnitRemoveAddressAction {
  readonly action: 'removeAddress'
  /**
   *	ID of the address to be removed. Either `addressId` or `addressKey` is required.
   *
   *
   */
  readonly addressId?: string
  /**
   *	Key of the address to be removed. Either `addressId` or `addressKey` is required.
   *
   *
   */
  readonly addressKey?: string
}
/**
 *	Removing an [Associate](ctp:api:type:Associate) from a [Business Unit](ctp:api:type:BusinessUnit) generates a [BusinessUnitAssociateRemoved](ctp:api:type:BusinessUnitAssociateRemovedMessage) Message.
 *
 */
export interface MyBusinessUnitRemoveAssociateAction {
  readonly action: 'removeAssociate'
  /**
   *	[Associate](ctp:api:type:Associate) to remove.
   *
   *
   */
  readonly customer: CustomerResourceIdentifier
}
/**
 *	Removing a billing address from a [Business Unit](ctp:api:type:BusinessUnit) generates a [BusinessUnitBillingAddressRemoved](ctp:api:type:BusinessUnitBillingAddressRemovedMessage) Message.
 *
 */
export interface MyBusinessUnitRemoveBillingAddressIdAction {
  readonly action: 'removeBillingAddressId'
  /**
   *	ID of the billing address to be removed. Either `addressId` or `addressKey` is required.
   *
   *
   */
  readonly addressId?: string
  /**
   *	Key of the billing address to be removed. Either `addressId` or `addressKey` is required.
   *
   *
   */
  readonly addressKey?: string
}
/**
 *	Removing a shipping address from a [Business Unit](ctp:api:type:BusinessUnit) generates a [BusinessUnitShippingAddressRemoved](ctp:api:type:BusinessUnitShippingAddressRemovedMessage) Message.
 *
 */
export interface MyBusinessUnitRemoveShippingAddressIdAction {
  readonly action: 'removeShippingAddressId'
  /**
   *	ID of the shipping address to be removed. Either `addressId` or `addressKey` is required.
   *
   *
   */
  readonly addressId?: string
  /**
   *	Key of the shipping address to be removed. Either `addressId` or `addressKey` is required.
   *
   *
   */
  readonly addressKey?: string
}
export interface MyBusinessUnitSetAddressCustomFieldAction {
  readonly action: 'setAddressCustomField'
  /**
   *	ID of the `address` to be extended.
   *
   *
   */
  readonly addressId: string
  /**
   *	Name of the [Custom Field](/../api/projects/custom-fields).
   *
   *
   */
  readonly name: string
  /**
   *	If `value` is absent or `null`, this field will be removed if it exists.
   *	Trying to remove a field that does not exist will fail with an [InvalidOperation](/../api/errors#general-400-invalid-operation) error.
   *	If `value` is provided, it is set for the field defined by `name`.
   *
   *
   */
  readonly value?: any
}
export interface MyBusinessUnitSetAddressCustomTypeAction {
  readonly action: 'setAddressCustomType'
  /**
   *	Defines the [Type](ctp:api:type:Type) that extends the `address` with [Custom Fields](/../api/projects/custom-fields).
   *	If absent, any existing Type and Custom Fields are removed from the `address`.
   *
   *
   */
  readonly type?: TypeResourceIdentifier
  /**
   *	Sets the [Custom Fields](/../api/projects/custom-fields) fields for the `address`.
   *
   *
   */
  readonly fields?: FieldContainer
  /**
   *	ID of the `address` to be extended.
   *
   *
   */
  readonly addressId: string
}
/**
 *	Setting the contact email on a [Business Unit](ctp:api:type:BusinessUnit) generates a [BusinessUnitContactEmailSet](ctp:api:type:BusinessUnitContactEmailSetMessage) Message.
 *
 */
export interface MyBusinessUnitSetContactEmailAction {
  readonly action: 'setContactEmail'
  /**
   *	Email to set.
   *	If `contactEmail` is absent or `null`, the existing contact email, if any, will be removed.
   *
   *
   */
  readonly contactEmail?: string
}
export interface MyBusinessUnitSetCustomFieldAction {
  readonly action: 'setCustomField'
  /**
   *	Name of the [Custom Field](/../api/projects/custom-fields).
   *
   *
   */
  readonly name: string
  /**
   *	If `value` is absent or `null`, this field will be removed if it exists.
   *	Trying to remove a field that does not exist will fail with an [InvalidOperation](/../api/errors#general-400-invalid-operation) error.
   *	If `value` is provided, it is set for the field defined by `name`.
   *
   *
   */
  readonly value?: any
}
export interface MyBusinessUnitSetCustomTypeAction {
  readonly action: 'setCustomType'
  /**
   *	Defines the [Type](ctp:api:type:Type) that extends the BusinessUnit with [Custom Fields](/../api/projects/custom-fields).
   *	If absent, any existing Type and Custom Fields are removed from the BusinessUnit.
   *
   *
   */
  readonly type?: TypeResourceIdentifier
  /**
   *	Sets the [Custom Fields](/../api/projects/custom-fields) for the BusinessUnit.
   *
   *
   */
  readonly fields?: FieldContainer
}
/**
 *	Setting the default billing address on a [Business Unit](ctp:api:type:BusinessUnit) generates the [BusinessUnitDefaultBillingAddressSet](ctp:api:type:BusinessUnitDefaultBillingAddressSetMessage) Message.
 *
 */
export interface MyBusinessUnitSetDefaultBillingAddressAction {
  readonly action: 'setDefaultBillingAddress'
  /**
   *	ID of the address to add as a billing address. Either `addressId` or `addressKey` is required.
   *
   *
   */
  readonly addressId?: string
  /**
   *	Key of the address to add as a billing address. Either `addressId` or `addressKey` is required.
   *
   *
   */
  readonly addressKey?: string
}
/**
 *	Setting the default shipping address on a [Business Unit](ctp:api:type:BusinessUnit) generates a [BusinessUnitDefaultShippingAddressSet](ctp:api:type:BusinessUnitDefaultShippingAddressSetMessage) Message.
 *
 */
export interface MyBusinessUnitSetDefaultShippingAddressAction {
  readonly action: 'setDefaultShippingAddress'
  /**
   *	ID of the address to add as a shipping address. Either `addressId` or `addressKey` is required.
   *
   *
   */
  readonly addressId?: string
  /**
   *	Key of the address to add as a shipping address. Either `addressId` or `addressKey` is required.
   *
   *
   */
  readonly addressKey?: string
}
export interface MyCartAddDiscountCodeAction {
  readonly action: 'addDiscountCode'
  /**
   *
   */
  readonly code: string
}
export interface MyCartAddItemShippingAddressAction {
  readonly action: 'addItemShippingAddress'
  /**
   *
   */
  readonly address: BaseAddress
}
export interface MyCartAddLineItemAction {
  readonly action: 'addLineItem'
  /**
   *	The representation used when creating or updating a [customizable data type](/../api/projects/types#list-of-customizable-data-types) with Custom Fields.
   *
   *
   */
  readonly custom?: CustomFieldsDraft
  /**
   *	[ResourceIdentifier](ctp:api:type:ResourceIdentifier) to a [Channel](ctp:api:type:Channel).
   *
   *
   */
  readonly distributionChannel?: ChannelResourceIdentifier
  /**
   *
   */
  readonly externalTaxRate?: ExternalTaxRateDraft
  /**
   *
   */
  readonly productId?: string
  /**
   *
   */
  readonly variantId?: number
  /**
   *
   */
  readonly sku?: string
  /**
   *
   */
  readonly quantity?: number
  /**
   *	[ResourceIdentifier](ctp:api:type:ResourceIdentifier) to a [Channel](ctp:api:type:Channel).
   *
   *
   */
  readonly supplyChannel?: ChannelResourceIdentifier
  /**
   *	Draft type that stores amounts in cent precision for the specified currency.
   *
   *	For storing money values in fractions of the minor unit in a currency, use [HighPrecisionMoneyDraft](ctp:api:type:HighPrecisionMoneyDraft) instead.
   *
   *
   */
  readonly externalPrice?: Money
  /**
   *
   */
  readonly externalTotalPrice?: ExternalLineItemTotalPrice
  /**
   *
   */
  readonly shippingDetails?: ItemShippingDetailsDraft
  /**
   *
   */
  readonly addedAt?: string
}
export interface MyCartAddPaymentAction {
  readonly action: 'addPayment'
  /**
   *	[ResourceIdentifier](ctp:api:type:ResourceIdentifier) to a [Payment](ctp:api:type:Payment).
   *
   *
   */
  readonly payment: PaymentResourceIdentifier
}
export interface MyCartApplyDeltaToLineItemShippingDetailsTargetsAction {
  readonly action: 'applyDeltaToLineItemShippingDetailsTargets'
  /**
   *
   */
  readonly lineItemId: string
  /**
   *
   */
  readonly targetsDelta: ItemShippingTarget[]
}
export interface MyCartChangeLineItemQuantityAction {
  readonly action: 'changeLineItemQuantity'
  /**
   *
   */
  readonly lineItemId: string
  /**
   *
   */
  readonly quantity: number
  /**
   *	Draft type that stores amounts in cent precision for the specified currency.
   *
   *	For storing money values in fractions of the minor unit in a currency, use [HighPrecisionMoneyDraft](ctp:api:type:HighPrecisionMoneyDraft) instead.
   *
   *
   */
  readonly externalPrice?: Money
  /**
   *
   */
  readonly externalTotalPrice?: ExternalLineItemTotalPrice
}
export interface MyCartChangeTaxModeAction {
  readonly action: 'changeTaxMode'
  /**
   *
   */
  readonly taxMode: TaxMode
}
export interface MyCartRecalculateAction {
  readonly action: 'recalculate'
  /**
   *
   */
  readonly updateProductData?: boolean
}
export interface MyCartRemoveDiscountCodeAction {
  readonly action: 'removeDiscountCode'
  /**
   *	[Reference](ctp:api:type:Reference) to a [DiscountCode](ctp:api:type:DiscountCode).
   *
   *
   */
  readonly discountCode: DiscountCodeReference
}
export interface MyCartRemoveItemShippingAddressAction {
  readonly action: 'removeItemShippingAddress'
  /**
   *
   */
  readonly addressKey: string
}
export interface MyCartRemoveLineItemAction {
  readonly action: 'removeLineItem'
  /**
   *
   */
  readonly lineItemId: string
  /**
   *
   */
  readonly quantity?: number
  /**
   *	Draft type that stores amounts in cent precision for the specified currency.
   *
   *	For storing money values in fractions of the minor unit in a currency, use [HighPrecisionMoneyDraft](ctp:api:type:HighPrecisionMoneyDraft) instead.
   *
   *
   */
  readonly externalPrice?: Money
  /**
   *
   */
  readonly externalTotalPrice?: ExternalLineItemTotalPrice
  /**
   *
   */
  readonly shippingDetailsToRemove?: ItemShippingDetailsDraft
}
export interface MyCartRemovePaymentAction {
  readonly action: 'removePayment'
  /**
   *	[ResourceIdentifier](ctp:api:type:ResourceIdentifier) to a [Payment](ctp:api:type:Payment).
   *
   *
   */
  readonly payment: PaymentResourceIdentifier
}
export interface MyCartSetBillingAddressAction {
  readonly action: 'setBillingAddress'
  /**
   *
   */
  readonly address?: BaseAddress
}
export interface MyCartSetCountryAction {
  readonly action: 'setCountry'
  /**
   *	Two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
   *
   *
   */
  readonly country?: string
}
export interface MyCartSetCustomFieldAction {
  readonly action: 'setCustomField'
  /**
   *	Name of the [Custom Field](/../api/projects/custom-fields).
   *
   *
   */
  readonly name: string
  /**
   *	If `value` is absent or `null`, this field will be removed if it exists.
   *	Trying to remove a field that does not exist will fail with an [InvalidOperation](/../api/errors#general-400-invalid-operation) error.
   *	If `value` is provided, it is set for the field defined by `name`.
   *
   *
   */
  readonly value?: any
}
export interface MyCartSetCustomTypeAction {
  readonly action: 'setCustomType'
  /**
   *	Defines the [Type](ctp:api:type:Type) that extends the MyCart with [Custom Fields](/../api/projects/custom-fields).
   *	If absent, any existing Type and Custom Fields are removed from the MyCart.
   *
   *
   */
  readonly type?: TypeResourceIdentifier
  /**
   *	Sets the [Custom Fields](/../api/projects/custom-fields) fields for the MyCart.
   *
   *
   */
  readonly fields?: FieldContainer
}
export interface MyCartSetCustomerEmailAction {
  readonly action: 'setCustomerEmail'
  /**
   *
   */
  readonly email?: string
}
export interface MyCartSetDeleteDaysAfterLastModificationAction {
  readonly action: 'setDeleteDaysAfterLastModification'
  /**
   *
   */
  readonly deleteDaysAfterLastModification?: number
}
export interface MyCartSetLineItemCustomFieldAction {
  readonly action: 'setLineItemCustomField'
  /**
   *
   */
  readonly lineItemId: string
  /**
   *	Name of the [Custom Field](/../api/projects/custom-fields).
   *
   *
   */
  readonly name: string
  /**
   *	If `value` is absent or `null`, this field will be removed if it exists.
   *	Trying to remove a field that does not exist will fail with an [InvalidOperation](/../api/errors#general-400-invalid-operation) error.
   *	If `value` is provided, it is set for the field defined by `name`.
   *
   *
   */
  readonly value?: any
}
export interface MyCartSetLineItemCustomTypeAction {
  readonly action: 'setLineItemCustomType'
  /**
   *
   */
  readonly lineItemId: string
  /**
   *	Defines the [Type](ctp:api:type:Type) that extends the LineItem with [Custom Fields](/../api/projects/custom-fields).
   *	If absent, any existing Type and Custom Fields are removed from the LineItem.
   *
   *
   */
  readonly type?: TypeResourceIdentifier
  /**
   *	Sets the [Custom Fields](/../api/projects/custom-fields) fields for the LineItem.
   *
   *
   */
  readonly fields?: FieldContainer
}
export interface MyCartSetLineItemDistributionChannelAction {
  readonly action: 'setLineItemDistributionChannel'
  /**
   *
   */
  readonly lineItemId: string
  /**
   *	[ResourceIdentifier](ctp:api:type:ResourceIdentifier) to a [Channel](ctp:api:type:Channel).
   *
   *
   */
  readonly distributionChannel?: ChannelResourceIdentifier
}
export interface MyCartSetLineItemShippingDetailsAction {
  readonly action: 'setLineItemShippingDetails'
  /**
   *
   */
  readonly lineItemId: string
  /**
   *
   */
  readonly shippingDetails?: ItemShippingDetailsDraft
}
export interface MyCartSetLineItemSupplyChannelAction {
  readonly action: 'setLineItemSupplyChannel'
  /**
   *
   */
  readonly lineItemId: string
  /**
   *	[ResourceIdentifier](ctp:api:type:ResourceIdentifier) to a [Channel](ctp:api:type:Channel).
   *
   *
   */
  readonly supplyChannel?: ChannelResourceIdentifier
}
export interface MyCartSetLocaleAction {
  readonly action: 'setLocale'
  /**
   *
   */
  readonly locale?: string
}
export interface MyCartSetShippingAddressAction {
  readonly action: 'setShippingAddress'
  /**
   *
   */
  readonly address?: BaseAddress
}
export interface MyCartSetShippingMethodAction {
  readonly action: 'setShippingMethod'
  /**
   *	[ResourceIdentifier](ctp:api:type:ResourceIdentifier) to a [ShippingMethod](ctp:api:type:ShippingMethod).
   *
   *
   */
  readonly shippingMethod?: ShippingMethodResourceIdentifier
  /**
   *
   */
  readonly externalTaxRate?: ExternalTaxRateDraft
}
export interface MyCartUpdateItemShippingAddressAction {
  readonly action: 'updateItemShippingAddress'
  /**
   *
   */
  readonly address: BaseAddress
}
/**
 *	Adding an address to the Customer produces the [CustomerAddressAdded](ctp:api:type:CustomerAddressAddedMessage) Message.
 *
 */
export interface MyCustomerAddAddressAction {
  readonly action: 'addAddress'
  /**
   *	Value to append to the `addresses` array.
   *
   *
   */
  readonly address: BaseAddress
}
/**
 *	Adds an address from the `addresses` array to `billingAddressIds`. Either `addressId` or `addressKey` is required.
 *
 */
export interface MyCustomerAddBillingAddressIdAction {
  readonly action: 'addBillingAddressId'
  /**
   *	`id` of the [Address](ctp:api:type:Address) to become a billing address.
   *
   *
   */
  readonly addressId?: string
  /**
   *	`key` of the [Address](ctp:api:type:Address) to become a billing address.
   *
   *
   */
  readonly addressKey?: string
}
/**
 *	Adds an address from the `addresses` array to `shippingAddressIds`. Either `addressId` or `addressKey` is required.
 *
 */
export interface MyCustomerAddShippingAddressIdAction {
  readonly action: 'addShippingAddressId'
  /**
   *	`id` of the [Address](ctp:api:type:Address) to become a shipping address.
   *
   *
   */
  readonly addressId?: string
  /**
   *	`key` of the [Address](ctp:api:type:Address) to become a shipping address.
   *
   *
   */
  readonly addressKey?: string
}
/**
 *	Changing an address of the Customer produces the [CustomerAddressChanged](ctp:api:type:CustomerAddressChangedMessage) Message.
 *
 *	Either `addressId` or `addressKey` is required.
 *
 */
export interface MyCustomerChangeAddressAction {
  readonly action: 'changeAddress'
  /**
   *	`id` of the [Address](ctp:api:type:Address) to change.
   *
   *
   */
  readonly addressId?: string
  /**
   *	`key` of the [Address](ctp:api:type:Address) to change.
   *
   *
   */
  readonly addressKey?: string
  /**
   *	Value to set.
   *
   *
   */
  readonly address: BaseAddress
}
/**
 *	Changing the email of the Customer produces the [CustomerEmailChanged](ctp:api:type:CustomerEmailChangedMessage) Message.
 *
 */
export interface MyCustomerChangeEmailAction {
  readonly action: 'changeEmail'
  /**
   *	New value to set.
   *
   *
   */
  readonly email: string
}
/**
 *	Removing an address of the Customer produces the [CustomerAddressRemoved](ctp:api:type:CustomerAddressRemovedMessage) Message.
 *
 *	Either `addressId` or `addressKey` is required.
 *
 */
export interface MyCustomerRemoveAddressAction {
  readonly action: 'removeAddress'
  /**
   *	`id` of the [Address](ctp:api:type:Address) to remove.
   *
   *
   */
  readonly addressId?: string
  /**
   *	`key` of the [Address](ctp:api:type:Address) to remove.
   *
   *
   */
  readonly addressKey?: string
}
/**
 *	Removes an existing billing address from `billingAddressesIds`.
 *	If the billing address is the default billing address, the `defaultBillingAddressId` is unset. Either `addressId` or `addressKey` is required.
 *
 */
export interface MyCustomerRemoveBillingAddressIdAction {
  readonly action: 'removeBillingAddressId'
  /**
   *	`id` of the [Address](ctp:api:type:Address) to remove from `billingAddressesIds`.
   *
   *
   */
  readonly addressId?: string
  /**
   *	`key` of the [Address](ctp:api:type:Address) to remove from `billingAddressesIds`.
   *
   *
   */
  readonly addressKey?: string
}
/**
 *	Removes an existing shipping address from `shippingAddressesIds`.
 *	If the shipping address is the default shipping address, the `defaultShippingAddressId` is unset. Either `addressId` or `addressKey` is required.
 *
 */
export interface MyCustomerRemoveShippingAddressIdAction {
  readonly action: 'removeShippingAddressId'
  /**
   *	`id` of the [Address](ctp:api:type:Address) to remove from `shippingAddressesIds`.
   *
   *
   */
  readonly addressId?: string
  /**
   *	`key` of the [Address](ctp:api:type:Address) to remove from `shippingAddressesIds`.
   *
   *
   */
  readonly addressKey?: string
}
/**
 *	Setting the `companyName` field on the Customer produces the [CustomerCompanyNameSet](ctp:api:type:CustomerCompanyNameSetMessage) Message.
 *
 */
export interface MyCustomerSetCompanyNameAction {
  readonly action: 'setCompanyName'
  /**
   *	Value to set.
   *	If empty, any existing value is removed.
   *
   *
   */
  readonly companyName?: string
}
export interface MyCustomerSetCustomFieldAction {
  readonly action: 'setCustomField'
  /**
   *	Name of the [Custom Field](/../api/projects/custom-fields).
   *
   *
   */
  readonly name: string
  /**
   *	If `value` is absent or `null`, this field will be removed if it exists.
   *	Trying to remove a field that does not exist will fail with an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
   *	If `value` is provided, it is set for the field defined by `name`.
   *
   *
   */
  readonly value?: any
}
export interface MyCustomerSetCustomTypeAction {
  readonly action: 'setCustomType'
  /**
   *	Defines the [Type](ctp:api:type:Type) that extends the MyCustomer with [Custom Fields](/../api/projects/custom-fields).
   *	If absent, any existing Type and Custom Fields are removed from the MyCustomer.
   *
   *
   */
  readonly type?: TypeResourceIdentifier
  /**
   *	Sets the [Custom Fields](/../api/projects/custom-fields) fields for the MyCustomer.
   *
   *
   */
  readonly fields?: FieldContainer
}
/**
 *	Setting the date of birth of the Customer produces the [CustomerDateOfBirthSet](ctp:api:type:CustomerDateOfBirthSetMessage) Message.
 *
 */
export interface MyCustomerSetDateOfBirthAction {
  readonly action: 'setDateOfBirth'
  /**
   *	Value to set.
   *	If empty, any existing value is removed.
   *
   *
   */
  readonly dateOfBirth?: string
}
/**
 *	Sets the default billing address from `addresses`.
 *	If the address is not currently a billing address, it is added to `billingAddressIds`. Either `addressId` or `addressKey` is required.
 *
 */
export interface MyCustomerSetDefaultBillingAddressAction {
  readonly action: 'setDefaultBillingAddress'
  /**
   *	`id` of the [Address](ctp:api:type:Address) to become the default billing address.
   *
   *
   */
  readonly addressId?: string
  /**
   *	`key` of the [Address](ctp:api:type:Address) to become the default billing address.
   *
   *
   */
  readonly addressKey?: string
}
/**
 *	Sets the default shipping address from `addresses`.
 *	If the address is not currently a shipping address, it is added to `shippingAddressIds`. Either `addressId` or `addressKey` is required.
 *
 */
export interface MyCustomerSetDefaultShippingAddressAction {
  readonly action: 'setDefaultShippingAddress'
  /**
   *	`id` of the [Address](ctp:api:type:Address) to become the default shipping address.
   *
   *
   */
  readonly addressId?: string
  /**
   *	`key` of the [Address](ctp:api:type:Address) to become the default shipping address.
   *
   *
   */
  readonly addressKey?: string
}
/**
 *	Setting the first name of the Customer produces the [CustomerFirstNameSetMessage](ctp:api:type:CustomerFirstNameSetMessage).
 *
 */
export interface MyCustomerSetFirstNameAction {
  readonly action: 'setFirstName'
  /**
   *	Value to set.
   *	If empty, any existing value is removed.
   *
   *
   */
  readonly firstName?: string
}
/**
 *	Setting the last name of the Customer produces the [CustomerLastNameSetMessage](ctp:api:type:CustomerLastNameSetMessage).
 *
 */
export interface MyCustomerSetLastNameAction {
  readonly action: 'setLastName'
  /**
   *	Value to set.
   *	If empty, any existing value is removed.
   *
   *
   */
  readonly lastName?: string
}
export interface MyCustomerSetLocaleAction {
  readonly action: 'setLocale'
  /**
   *	Value to set.
   *	Must be one of the languages supported by the [Project](ctp:api:type:Project).
   *
   *
   */
  readonly locale?: string
}
export interface MyCustomerSetMiddleNameAction {
  readonly action: 'setMiddleName'
  /**
   *	Value to set.
   *	If empty, any existing value is removed.
   *
   *
   */
  readonly middleName?: string
}
export interface MyCustomerSetSalutationAction {
  readonly action: 'setSalutation'
  /**
   *	Value to set.
   *	If empty, any existing value is removed.
   *
   *
   */
  readonly salutation?: string
}
/**
 *	Setting the title of the Customer produces the [CustomerTitleSetMessage](ctp:api:type:CustomerTitleSetMessage).
 *
 */
export interface MyCustomerSetTitleAction {
  readonly action: 'setTitle'
  /**
   *	Value to set.
   *	If empty, any existing value is removed.
   *
   *
   */
  readonly title?: string
}
export interface MyCustomerSetVatIdAction {
  readonly action: 'setVatId'
  /**
   *	Value to set.
   *	If empty, any existing value is removed.
   *
   *
   */
  readonly vatId?: string
}
export interface MyPaymentAddTransactionAction {
  readonly action: 'addTransaction'
  /**
   *
   */
  readonly transaction: TransactionDraft
}
export interface MyPaymentChangeAmountPlannedAction {
  readonly action: 'changeAmountPlanned'
  /**
   *	Draft type that stores amounts in cent precision for the specified currency.
   *
   *	For storing money values in fractions of the minor unit in a currency, use [HighPrecisionMoneyDraft](ctp:api:type:HighPrecisionMoneyDraft) instead.
   *
   *
   */
  readonly amount: Money
}
export interface MyPaymentSetCustomFieldAction {
  readonly action: 'setCustomField'
  /**
   *	Name of the [Custom Field](/../api/projects/custom-fields).
   *
   *
   */
  readonly name: string
  /**
   *	If `value` is absent or `null`, this field will be removed if it exists.
   *	Trying to remove a field that does not exist will fail with an [InvalidOperation](/../api/errors#general-400-invalid-operation) error.
   *	If `value` is provided, it is set for the field defined by `name`.
   *
   *
   */
  readonly value?: any
}
export interface MyPaymentSetMethodInfoInterfaceAction {
  readonly action: 'setMethodInfoInterface'
  /**
   *
   */
  readonly interface: string
}
export interface MyPaymentSetMethodInfoMethodAction {
  readonly action: 'setMethodInfoMethod'
  /**
   *
   */
  readonly method?: string
}
export interface MyPaymentSetMethodInfoNameAction {
  readonly action: 'setMethodInfoName'
  /**
   *	JSON object where the keys are of type [Locale](ctp:api:type:Locale), and the values are the strings used for the corresponding language.
   *
   *
   */
  readonly name?: LocalizedString
}
export interface MyPaymentSetTransactionCustomFieldAction {
  readonly action: 'setTransactionCustomField'
  /**
   *	Name of the [Custom Field](/../api/projects/custom-fields).
   *
   *
   */
  readonly name: string
  /**
   *	If `value` is absent or `null`, this field will be removed if it exists.
   *	Trying to remove a field that does not exist will fail with an [InvalidOperation](/../api/errors#general-400-invalid-operation) error.
   *	If `value` is provided, it is set for the field defined by `name`.
   *
   *
   */
  readonly value?: any
}
export interface MyQuoteChangeMyQuoteStateAction {
  readonly action: 'changeMyQuoteState'
  /**
   *	New state to be set for the Quote.
   *
   */
  readonly quoteState: MyQuoteState
}
/**
 *	Transitions the `quoteRequestState` of the Quote Request to `Cancelled`. Can only be used when the Quote Request is in state `Submitted`.
 *
 */
export interface MyQuoteRequestCancelAction {
  readonly action: 'cancelQuoteRequest'
}
export interface MyShoppingListAddLineItemAction {
  readonly action: 'addLineItem'
  /**
   *
   */
  readonly sku?: string
  /**
   *
   */
  readonly productId?: string
  /**
   *
   */
  readonly variantId?: number
  /**
   *
   */
  readonly quantity?: number
  /**
   *
   */
  readonly addedAt?: string
  /**
   *	The representation used when creating or updating a [customizable data type](/../api/projects/types#list-of-customizable-data-types) with Custom Fields.
   *
   *
   */
  readonly custom?: CustomFieldsDraft
}
export interface MyShoppingListAddTextLineItemAction {
  readonly action: 'addTextLineItem'
  /**
   *	JSON object where the keys are of type [Locale](ctp:api:type:Locale), and the values are the strings used for the corresponding language.
   *
   *
   */
  readonly name: LocalizedString
  /**
   *	JSON object where the keys are of type [Locale](ctp:api:type:Locale), and the values are the strings used for the corresponding language.
   *
   *
   */
  readonly description?: LocalizedString
  /**
   *
   */
  readonly quantity?: number
  /**
   *
   */
  readonly addedAt?: string
  /**
   *	The representation used when creating or updating a [customizable data type](/../api/projects/types#list-of-customizable-data-types) with Custom Fields.
   *
   *
   */
  readonly custom?: CustomFieldsDraft
}
export interface MyShoppingListChangeLineItemQuantityAction {
  readonly action: 'changeLineItemQuantity'
  /**
   *
   */
  readonly lineItemId: string
  /**
   *
   */
  readonly quantity: number
}
export interface MyShoppingListChangeLineItemsOrderAction {
  readonly action: 'changeLineItemsOrder'
  /**
   *
   */
  readonly lineItemOrder: string[]
}
export interface MyShoppingListChangeNameAction {
  readonly action: 'changeName'
  /**
   *	JSON object where the keys are of type [Locale](ctp:api:type:Locale), and the values are the strings used for the corresponding language.
   *
   *
   */
  readonly name: LocalizedString
}
export interface MyShoppingListChangeTextLineItemNameAction {
  readonly action: 'changeTextLineItemName'
  /**
   *
   */
  readonly textLineItemId: string
  /**
   *	JSON object where the keys are of type [Locale](ctp:api:type:Locale), and the values are the strings used for the corresponding language.
   *
   *
   */
  readonly name: LocalizedString
}
export interface MyShoppingListChangeTextLineItemQuantityAction {
  readonly action: 'changeTextLineItemQuantity'
  /**
   *
   */
  readonly textLineItemId: string
  /**
   *
   */
  readonly quantity: number
}
export interface MyShoppingListChangeTextLineItemsOrderAction {
  readonly action: 'changeTextLineItemsOrder'
  /**
   *
   */
  readonly textLineItemOrder: string[]
}
export interface MyShoppingListRemoveLineItemAction {
  readonly action: 'removeLineItem'
  /**
   *
   */
  readonly lineItemId: string
  /**
   *
   */
  readonly quantity?: number
}
export interface MyShoppingListRemoveTextLineItemAction {
  readonly action: 'removeTextLineItem'
  /**
   *
   */
  readonly textLineItemId: string
  /**
   *
   */
  readonly quantity?: number
}
export interface MyShoppingListSetCustomFieldAction {
  readonly action: 'setCustomField'
  /**
   *	Name of the [Custom Field](/../api/projects/custom-fields).
   *
   *
   */
  readonly name: string
  /**
   *	If `value` is absent or `null`, this field will be removed if it exists.
   *	Trying to remove a field that does not exist will fail with an [InvalidOperation](/../api/errors#general-400-invalid-operation) error.
   *	If `value` is provided, it is set for the field defined by `name`.
   *
   *
   */
  readonly value?: any
}
export interface MyShoppingListSetCustomTypeAction {
  readonly action: 'setCustomType'
  /**
   *	Defines the [Type](ctp:api:type:Type) that extends the MyShoppingList with [Custom Fields](/../api/projects/custom-fields).
   *	If absent, any existing Type and Custom Fields are removed from the MyShoppingList.
   *
   *
   */
  readonly type?: TypeResourceIdentifier
  /**
   *	Sets the [Custom Fields](/../api/projects/custom-fields) fields for the MyShoppingList.
   *
   *
   */
  readonly fields?: FieldContainer
}
export interface MyShoppingListSetDeleteDaysAfterLastModificationAction {
  readonly action: 'setDeleteDaysAfterLastModification'
  /**
   *
   */
  readonly deleteDaysAfterLastModification?: number
}
export interface MyShoppingListSetDescriptionAction {
  readonly action: 'setDescription'
  /**
   *	JSON object where the keys are of type [Locale](ctp:api:type:Locale), and the values are the strings used for the corresponding language.
   *
   *
   */
  readonly description?: LocalizedString
}
export interface MyShoppingListSetLineItemCustomFieldAction {
  readonly action: 'setLineItemCustomField'
  /**
   *
   */
  readonly lineItemId: string
  /**
   *	Name of the [Custom Field](/../api/projects/custom-fields).
   *
   *
   */
  readonly name: string
  /**
   *	If `value` is absent or `null`, this field will be removed if it exists.
   *	Trying to remove a field that does not exist will fail with an [InvalidOperation](/../api/errors#general-400-invalid-operation) error.
   *	If `value` is provided, it is set for the field defined by `name`.
   *
   *
   */
  readonly value?: any
}
export interface MyShoppingListSetLineItemCustomTypeAction {
  readonly action: 'setLineItemCustomType'
  /**
   *
   */
  readonly lineItemId: string
  /**
   *	Defines the [Type](ctp:api:type:Type) that extends the LineItem with [Custom Fields](/../api/projects/custom-fields).
   *	If absent, any existing Type and Custom Fields are removed from the LineItem.
   *
   *
   */
  readonly type?: TypeResourceIdentifier
  /**
   *	Sets the [Custom Fields](/../api/projects/custom-fields) fields for the LineItem.
   *
   *
   */
  readonly fields?: FieldContainer
}
export interface MyShoppingListSetTextLineItemCustomFieldAction {
  readonly action: 'setTextLineItemCustomField'
  /**
   *
   */
  readonly textLineItemId: string
  /**
   *	Name of the [Custom Field](/../api/projects/custom-fields).
   *
   *
   */
  readonly name: string
  /**
   *	If `value` is absent or `null`, this field will be removed if it exists.
   *	Trying to remove a field that does not exist will fail with an [InvalidOperation](/../api/errors#general-400-invalid-operation) error.
   *	If `value` is provided, it is set for the field defined by `name`.
   *
   *
   */
  readonly value?: any
}
export interface MyShoppingListSetTextLineItemCustomTypeAction {
  readonly action: 'setTextLineItemCustomType'
  /**
   *
   */
  readonly textLineItemId: string
  /**
   *	Defines the [Type](ctp:api:type:Type) that extends the TextLineItem with [Custom Fields](/../api/projects/custom-fields).
   *	If absent, any existing Type and Custom Fields are removed from the TextLineItem.
   *
   *
   */
  readonly type?: TypeResourceIdentifier
  /**
   *	Sets the [Custom Fields](/../api/projects/custom-fields) fields for the TextLineItem.
   *
   *
   */
  readonly fields?: FieldContainer
}
export interface MyShoppingListSetTextLineItemDescriptionAction {
  readonly action: 'setTextLineItemDescription'
  /**
   *
   */
  readonly textLineItemId: string
  /**
   *	JSON object where the keys are of type [Locale](ctp:api:type:Locale), and the values are the strings used for the corresponding language.
   *
   *
   */
  readonly description?: LocalizedString
}
